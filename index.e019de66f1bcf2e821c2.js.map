{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../event/src/event-emitter.ts","webpack:///../event/src/async-event-emitter.ts","webpack:///../event/src/disposable.ts","webpack:///../adb/src/crypto.ts","webpack:///../adb/src/packet.ts","webpack:///../adb/src/utils/auto-reset-event.ts","webpack:///../adb/src/utils/base64.ts","webpack:///../adb/src/utils/event-iterator.ts","webpack:///../adb/src/auth.ts","webpack:///../adb/src/buffered-stream.ts","webpack:///../adb/src/stream.ts","webpack:///../adb/src/sync.ts","webpack:///../adb/src/adb.ts","webpack:///../adb-webusb/src/index.ts","webpack:///./src/with-display-name.ts","webpack:///./src/connect.tsx","webpack:///./src/resize-observer.tsx","webpack:///./src/shell.tsx","webpack:///./src/sync.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","EventEmitter","listeners","this","event","listener","thisArg","args","info","remove","index","indexOf","dispose","e","AutoDisposable","disposables","disposable","DisposableList","addDisposable","BigInt0","BigInt","BigInt1","BigInt2","BigInt2To64","getBig","buffer","offset","byteLength","view","DataView","getBigUint64","setBigLE","setBigUint64","parsePrivateKey","calculatePublicKey","privateKey","publicKey","ArrayBuffer","publicKeyView","setUint32","n0inv","a","Number","isNaN","NaN","b","x","y","Math","floor","modInverse","asUintN","Sha1DigestInfo","sign","padded","Uint8Array","fillLength","set","signature","base","exponent","modulus","powMod","uint64Array","setBig","Assert","AdbCommand","command","Error","magic","expected","getUint32","actual","getInt32","backend","arg0","arg1","payload","payloadString","read","decodeUtf8","payloadLength","send","_payloadLength","_payload","undefined","_payloadString","encodeUtf8","write","initialSet","list","blocking","Promise","resolve","resolver","promise","pop","item","reject","ranges","chars","addRange","start","end","startCharCode","charCodeAt","endCharCode","String","fromCharCode","toValue","char","charCode","range","encodeBase64","array","remainder","z","sort","pullQueue","pushQueue","ended","pendingLowWaterEvent","lowWaterEvent","EventIteratorController","state","maxConsumerCount","Infinity","highWaterMark","lowWaterMark","done","cleanup","initializer","asyncIterator","controller","fire","return","AdbAuthType","AdbDefaultAuthenticators","iteratorDone","iterator","iterateKeys","packet","Token","next","Auth","Signature","generateKey","PublicKey","authenticators","super","map","Constructor","tryAuth","stream","extraBuffers","localId","remoteId","readIterator","readBuffer","output","close","resetEvent","add","onData","wait","onClose","onLowWater","notify","buffers","dispatcher","writeLock","dataEvent","closeEvent","sendPacket","Write","Close","initializers","streams","Map","onPacketEvent","onPacket","onReceiveErrorEvent","onReceiveError","_running","receiveLoop","service","Open","AdbStream","packetOrCommand","arguments","values","clear","parse","handled","OK","has","ack","delete","AdbSyncRequestId","AdbSyncResponseId","LinuxFileType","AdbPropKey","AdbSyncRequestBase","id","AdbSyncStringRequest","valueBuffer","idBuffer","size","lastModifiedTime","Entry","type","nameLength","Data","AdbSyncDoneResponse","Done","parseResponse","sendLock","path","List","results","response","Receive","request","toBuffer","_connected","packetDispatcher","onDisconnected","_product","_model","_device","_features","features","join","authHandler","disposableList","Connect","parseBanner","authPacket","tryNextAuth","banner","pieces","split","props","prop","keyValue","Product","Model","Device","Features","createStreamAndReadAll","createStream","propAddr","shell","trim","port","readAll","WebUsbDeviceFilter","classCode","subclassCode","protocolCode","Utf8Encoder","TextEncoder","Utf8Decoder","TextDecoder","device","inEndPointNumber","outEndPointNumber","onDisconnectedEvent","_inEndpointNumber","_outEndpointNumber","open","configuration","configurations","interface_","interfaces","alternate","alternates","interfaceSubclass","interfaceClass","inEndpointNumber","outEndpointNumber","configurationValue","selectConfiguration","claimed","claimInterface","interfaceNumber","alternateSetting","selectAlternateInterface","endpoint","endpoints","direction","endpointNumber","navigator","usb","requestDevice","filters","fromDevice","productName","localStorage","getItem","input","padding","sIndex","dIndex","decodeBase64","cryptoKey","crypto","subtle","modulusLength","publicExponent","hash","exportKey","setItem","encode","decode","transferOut","transferIn","status","clearHalt","withDisplayName","Component","displayName","onDeviceChange","connecting","setConnecting","errorDialogVisible","setTrue","showErrorDialog","setFalse","hideErrorDialog","useBoolean","errorMessage","setErrorMessage","connect","async","pickDevice","message","disconnect","Stack","horizontal","verticalAlign","tokens","childrenGap","StackItem","PrimaryButton","text","onClick","DefaultButton","Dialog","hidden","dialogContentProps","title","subText","ProgressIndicator","normal","DialogFooter","iframeStyle","position","top","left","width","height","visibility","onResize","style","children","rest","onResizeRef","current","handleResize","handleIframeRef","element","contentWindow","addEventListener","containerStyle","useMemo","ref","visible","cached","setCached","terminal","setTerminal","fitAddonRef","handleContainerRef","scrollback","fitAddon","loadAddon","fit","textEncoder","reset","initializeFileTypeIcons","mitm","units","extensionName","fileName","lastIndexOf","renderDetailsHeader","defaultRender","styles","root","paddingTop","combinePath","segments","reduce","endsWith","createReadableStreamFromBufferIterator","ReadableStream","desiredSize","written","enqueue","setPath","loading","setLoading","items","setItems","sync","filter","Directory","previewUrl","setPreviewUrl","previewImage","readableStream","receive","Response","blob","url","URL","createObjectURL","hidePreview","handleItemInvoked","Link","File","columns","iconName","isIconOnly","minWidth","maxWidth","isCollapsible","Icon","getFileTypeIconProps","FileIconType","linkedFolder","folder","extension","fieldName","isRowHeader","isSorted","onRender","color","toString","toLocaleString","maximumFractionDigits","formatSize","Date","getKey","breadcrumb","part","Boolean","segment","unshift","isCurrentItem","contextMenuItems","setContextMenuItems","contextMenuTarget","setContextMenuTarget","showContextMenu","itemPath","writeableStream","createWriteStream","pipeTo","hideContextMenu","useConstCallback","verticalFill","overflow","Breadcrumb","grow","minHeight","ShimmeredDetailsList","setKey","layoutMode","justified","enableShimmer","onItemInvoked","onItemContextMenu","onRenderDetailsHeader","usePageCache","Layer","Overlay","display","alignItems","justifyContent","src","maxHeight","ContextualMenu","directionalHint","DirectionalHint","bottomLeftEdge","target","onDismiss","render","location","setDevice","tcpPort","setTcpAddresses","queryTcpPort","getDaemonTcpAddresses","tcpPortValue","setTcpPortValue","tcpPortInputId","useId","enableTcp","setDaemonTcpPort","parseInt","console","log","disableTcp","disableDaemonTcp","Text","variant","Separator","Nav","groups","links","selectedKey","pathname","block","href","product","model","MessageBar","disabled","Label","htmlFor","TextField","onChange","to","match","document","getElementById"],"mappings":"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","file":"index.e019de66f1bcf2e821c2.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"2YZa\",1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Disposable } from './disposable';\nimport { EventListener, RemoveEventListener } from './event';\n\ninterface EventListenerInfo<TEvent, TResult = unknown> {\n    listener: EventListener<TEvent, any, any, TResult>;\n\n    thisArg: unknown;\n\n    args: unknown[];\n}\n\nexport class EventEmitter<TEvent, TResult = unknown> implements Disposable {\n    protected listeners: EventListenerInfo<TEvent, TResult>[] = [];\n\n    public constructor() {\n        this.event = this.event.bind(this);\n    }\n\n    public event(\n        listener: EventListener<TEvent, unknown, [], TResult>\n    ): RemoveEventListener;\n    public event<TThis, TArgs extends unknown[]>(\n        listener: EventListener<TEvent, TThis, TArgs, TResult>,\n        thisArg: TThis,\n        ...args: TArgs\n    ): RemoveEventListener;\n    public event<TThis, TArgs extends unknown[]>(\n        listener: EventListener<TEvent, TThis, TArgs, TResult>,\n        thisArg?: TThis,\n        ...args: TArgs\n    ): RemoveEventListener {\n        const info: EventListenerInfo<TEvent, TResult> = {\n            listener,\n            thisArg,\n            args,\n        };\n        this.listeners.push(info);\n\n        const remove: RemoveEventListener = () => {\n            const index = this.listeners.indexOf(info);\n            if (index > 0) {\n                this.listeners.splice(index, 1);\n            }\n        };\n        remove.dispose = remove;\n        return remove;\n    }\n\n    public fire(e: TEvent) {\n        for (const info of this.listeners) {\n            info.listener.apply(info.thisArg, [e, ...info.args]);\n        }\n    }\n\n    public dispose() {\n        this.listeners.length = 0;\n    }\n}\n","import { Event } from './event';\nimport { EventEmitter } from './event-emitter';\n\nexport type AsyncEventResult = void | Promise<void>;\n\nexport type AsyncEvent<TEvent> = Event<TEvent, AsyncEventResult>;\n\nexport class AsyncEventEmitter<TEvent> extends EventEmitter<TEvent, AsyncEventResult> {\n    public async fire(e: TEvent) {\n        for (const info of this.listeners) {\n            await info.listener.apply(info.thisArg, [e, ...info.args]);\n        }\n    }\n}\n","export interface Disposable {\n    dispose(): void;\n}\n\nexport class AutoDisposable implements Disposable {\n    private disposables: Disposable[] = [];\n\n    protected addDisposable<T extends Disposable>(disposable: T): T {\n        this.disposables.push(disposable);\n        return disposable;\n    }\n\n    public dispose() {\n        for (const disposable of this.disposables) {\n            disposable.dispose();\n        }\n\n        this.disposables = [];\n    }\n}\n\nexport class DisposableList extends AutoDisposable {\n    public add<T extends Disposable>(disposable: T): T {\n        return this.addDisposable(disposable);\n    }\n}\n","const BigInt0 = BigInt(0);\nconst BigInt1 = BigInt(1);\nconst BigInt2 = BigInt(2);\n\nconst BigInt2To64 = BigInt2 ** BigInt(64);\n\nexport function getBig(\n    buffer: ArrayBuffer,\n    offset = 0,\n    length = buffer.byteLength - offset\n): bigint {\n    const view = new DataView(buffer);\n\n    let result = BigInt0;\n\n    // Now `length` must be a multiplication of 8\n    // Support for arbitrary length can be easily added\n\n    for (let i = offset; i < offset + length; i += 8) {\n        result *= BigInt2To64;\n        const value = view.getBigUint64(i, false);\n        result += value;\n    }\n\n    return result;\n}\n\nexport function setBig(buffer: ArrayBuffer, value: bigint, offset: number = 0) {\n    const uint64Array: bigint[] = [];\n    while (value > BigInt0) {\n        uint64Array.push(BigInt.asUintN(64, value));\n        value /= BigInt2To64;\n    }\n\n    const view = new DataView(buffer);\n    for (let i = uint64Array.length - 1; i >= 0; i -= 1) {\n        view.setBigUint64(offset, uint64Array[i], false);\n        offset += 8;\n    }\n}\n\nexport function setBigLE(buffer: ArrayBuffer, value: bigint, offset = 0) {\n    const view = new DataView(buffer);\n    while (value > BigInt0) {\n        view.setBigUint64(offset, value, true);\n        offset += 8;\n        value /= BigInt2To64;\n    }\n}\n\n// These values are correct only if\n// modulus length is 2048 and\n// public exponent (e) is 65537\n// Anyway, that's how this library generates keys\n\n// To support other parameters,\n// a proper ASN.1 parser can be used\n\n// References:\n//\n//   https://tools.ietf.org/html/rfc8017#appendix-A.1.2\n//   PKCS #1: RSA Cryptography Specifications Version 2.2\n//     A.1.2.  RSA Private Key Syntax\n//\n//   https://lapo.it/asn1js/\n//   https://github.com/lapo-luchini/asn1js\n//   ASN.1 JavaScript decoder\n//\n//   https://www.itu.int/rec/T-REC-X.690-201508-I/en\n//   X.690: Specification of Distinguished Encoding Rules (DER)\n\nconst RsaPrivateKeyNOffset = 38;\nconst RsaPrivateKeyNLength = 2048 / 8;\nconst RsaPrivateKeyDOffset = 303;\nconst RsaPrivateKeyDLength = 2048 / 8;\n\nexport function parsePrivateKey(key: ArrayBuffer): [n: bigint, d: bigint] {\n    let n = getBig(key, RsaPrivateKeyNOffset, RsaPrivateKeyNLength);\n    let d = getBig(key, RsaPrivateKeyDOffset, RsaPrivateKeyDLength);\n\n    return [n, d];\n}\n\n// Taken from https://stackoverflow.com/a/51562038\n// I can't understand, but it does work\n// Only used with numbers less than 2^32 so doesn't need BigInt\nexport function modInverse(a: number, m: number) {\n    // validate inputs\n    [a, m] = [Number(a), Number(m)];\n    if (Number.isNaN(a) || Number.isNaN(m)) {\n        return NaN; // invalid input\n    }\n    a = (a % m + m) % m;\n    if (!a || m < 2) {\n        return NaN; // invalid input\n    }\n    // find the gcd\n    const s = [];\n    let b = m;\n    while (b) {\n        [a, b] = [b, a % b];\n        s.push({ a, b });\n    }\n    if (a !== 1) {\n        return NaN; // inverse does not exists\n    }\n    // find the inverse\n    let x = 1;\n    let y = 0;\n    for (let i = s.length - 2; i >= 0; --i) {\n        [x, y] = [y, x - y * Math.floor(s[i].a / s[i].b)];\n    }\n    return (y % m + m) % m;\n}\n\nexport function calculatePublicKey(privateKey: ArrayBuffer): ArrayBuffer {\n    // Android has its own public key generation algorithm\n    // See https://github.com/aosp-mirror/platform_system_core/blob/e5c9bbd45381d7bd72fef232d1c6668946253ac8/libcrypto_utils/android_pubkey.cpp#L111\n\n    // The public key is an array of\n    //\n    // [\n    //   modulusLengthInWords, // 32-bit integer, a \"word\" is 32-bit so it must be 2048 / 8 / 4\n    //                         // Actually the comment in Android source code was wrong\n    //   n0inv,                // 32-bit integer, the modular inverse of (lower 32 bits of) n\n    //   modulus,              // n\n    //   rr,                   // Montgomery parameter R^2\n    //   exponent,             // 32-bit integer, must be 65537\n    // ]\n    //\n    // (All in little endian)\n    // See https://github.com/aosp-mirror/platform_system_core/blob/e5c9bbd45381d7bd72fef232d1c6668946253ac8/libcrypto_utils/android_pubkey.cpp#L38\n\n    // extract `n` from private key\n    const [n] = parsePrivateKey(privateKey);\n\n    const publicKey = new ArrayBuffer(4 + 4 + 2048 / 8 + 2048 / 8 + 4);\n    const publicKeyView = new DataView(publicKey);\n\n    // modulusLengthInWords\n    publicKeyView.setUint32(0, 2048 / 8 / 4, true);\n\n    // Calculate `n0inv`\n    // Don't know why need to multiple -1\n    // Didn't exist in Android codebase\n    const n0inv = modInverse(Number(BigInt.asUintN(32, n) * BigInt(-1)), 2 ** 32);\n    publicKeyView.setUint32(4, n0inv, true);\n\n    // Write n\n    setBigLE(publicKey, n, 8);\n\n    // Calculate rr = (2^(rsa_size)) ^ 2 mod n\n    let rr = BigInt(2) ** BigInt(4096) % n;\n    setBigLE(publicKey, rr, 8 + 256);\n\n    // exponent\n    publicKeyView.setUint32(8 + 256 + 256, 65537, true);\n\n    return publicKey;\n}\n\n// Modular exponentiation\n// See https://en.wikipedia.org/wiki/Modular_exponentiation#Implementation_in_Lua\nexport function powMod(base: bigint, exponent: bigint, modulus: bigint): bigint {\n    if (modulus === BigInt1) {\n        return BigInt0;\n    }\n\n    let r = BigInt1;\n    base = base % modulus;\n\n    while (exponent > BigInt0) {\n        if (BigInt.asUintN(1, exponent) === BigInt1) {\n            r = r * base % modulus;\n        }\n\n        exponent >>= BigInt1;\n        base = base ** BigInt2 % modulus;\n    }\n\n    return r;\n}\n\nexport const Sha1DigestLength = 20;\n\nexport const Asn1Sequence = 0x30;\nexport const Asn1OctetString = 0x04;\nexport const Asn1Null = 0x05;\nexport const Asn1Oid = 0x06;\n\n// PKCS#1 SHA-1 hash digest info\nexport const Sha1DigestInfo = [\n    Asn1Sequence, 0x0d + Sha1DigestLength,\n    Asn1Sequence, 0x09,\n    // SHA-1 (1 3 14 3 2 26)\n    Asn1Oid, 0x05, 1 * 40 + 3, 14, 3, 2, 26,\n    Asn1Null, 0x00,\n    Asn1OctetString, Sha1DigestLength\n];\n\n// SubtleCrypto.sign() will hash the given data and sign the hash\n// But we don't need the hashing step\n// (In another word, ADB just requires the client to\n// encrypt the given data with its private key)\n// However SubtileCrypto.encrypt() doesn't accept 'RSASSA-PKCS1-v1_5' algorithm\n// So we need to implement the encryption by ourself\nexport function sign(privateKey: ArrayBuffer, data: ArrayBuffer): ArrayBuffer {\n    const [n, d] = parsePrivateKey(privateKey);\n\n    // PKCS#1 padding\n    const padded = new Uint8Array(256);\n    let index = 0;\n\n    padded[index] = 0;\n    index += 1;\n\n    padded[index] = 1;\n    index += 1;\n\n    const fillLength = padded.length - Sha1DigestInfo.length - data.byteLength - 1;\n    while (index < fillLength) {\n        padded[index] = 0xff;\n        index++;\n    }\n\n    padded[index] = 0;\n    index += 1;\n\n    padded.set(new Uint8Array(Sha1DigestInfo), index);\n    index += Sha1DigestInfo.length;\n\n    padded.set(new Uint8Array(data), index);\n\n    // Encryption\n    // signature = padded ** d % n\n    let signature = powMod(getBig(padded.buffer), d, n);\n\n    // Put into an ArrayBuffer\n    const result = new ArrayBuffer(256);\n    setBig(result, signature);\n\n    return result;\n}\n","import { AdbBackend } from './backend';\n\nnamespace Assert {\n    export function command(command: string): void {\n        const length = command.length;\n        if (length !== 4) {\n            throw new Error(`AdbPacket: command.length mismatch. Expected 4, but got ${length}`);\n        }\n    }\n\n    export function magic(view: DataView): void {\n        const expected = view.getUint32(0) ^ 0xFFFFFFFF;\n        const actual = view.getInt32(20);\n        if (expected !== actual) {\n            throw new Error(`AdbPacket: magic number mismatch. Expected ${expected}, but got ${actual}`);\n        }\n    }\n}\n\nexport enum AdbCommand {\n    Connect = 'CNXN',\n    Auth = 'AUTH',\n    OK = 'OKAY',\n    Close = 'CLSE',\n    Write = 'WRTE',\n    Open = 'OPEN',\n}\n\nexport class AdbPacket {\n    public static async parse(backend: AdbBackend): Promise<AdbPacket> {\n        let buffer = await backend.read(24);\n        if (buffer.byteLength !== 24) {\n            // Maybe it's a payload from last connection.\n            // Ignore and try again\n            buffer = await backend.read(24);\n        }\n        const view = new DataView(buffer);\n        Assert.magic(view);\n\n        const command = backend.decodeUtf8(buffer.slice(0, 4));\n        const arg0 = view.getUint32(4, true);\n        const arg1 = view.getUint32(8, true);\n        const payloadLength = view.getUint32(12, true);\n\n        let payload: ArrayBuffer | undefined;\n        if (payloadLength !== 0) {\n            payload = await backend.read(payloadLength);\n        }\n\n        return new AdbPacket(backend, command, arg0, arg1, payload);\n    }\n\n    public static send(\n        backend: AdbBackend,\n        command: AdbCommand,\n        arg0: number,\n        arg1: number,\n        payload?: string | ArrayBuffer\n    ): Promise<void> {\n        const packet = new AdbPacket(backend, command, arg0, arg1, payload);\n        return packet.send();\n    }\n\n    private backend: AdbBackend;\n\n    public command: string;\n\n    public arg0: number;\n\n    public arg1: number;\n\n    private _payloadLength!: number;\n    public get payloadLength(): number { return this._payloadLength; }\n\n    private _payload: ArrayBuffer | undefined;\n    public get payload(): ArrayBuffer | undefined { return this._payload; }\n    public set payload(value: ArrayBuffer | undefined) {\n        if (value !== undefined) {\n            this._payloadLength = value.byteLength;\n            this._payload = value;\n        } else {\n            this._payloadLength = 0;\n            this._payload = undefined;\n        }\n\n        this._payloadString = undefined;\n    }\n\n    private _payloadString: string | undefined;\n    public get payloadString(): string | undefined {\n        if (!this._payload) {\n            return undefined;\n        }\n\n        if (!this._payloadString) {\n            this._payloadString = this.backend.decodeUtf8(this._payload);\n        }\n        return this._payloadString;\n    }\n    public set payloadString(value: string | undefined) {\n        if (value !== undefined) {\n            this.payload = this.backend.encodeUtf8(value);\n            this._payloadString = value;\n        } else {\n            this.payload = undefined;\n        }\n    }\n\n    public constructor(\n        backend: AdbBackend,\n        command: string,\n        arg0: number,\n        arg1: number,\n        payload?: string | ArrayBuffer\n    ) {\n        this.backend = backend;\n\n        Assert.command(command);\n        this.command = command;\n\n        this.arg0 = arg0;\n        this.arg1 = arg1;\n\n        if (typeof payload === \"string\") {\n            this.payloadString = payload;\n        } else {\n            this.payload = payload;\n        }\n    }\n\n    public async send(): Promise<void> {\n        const buffer = new ArrayBuffer(24);\n        const array = new Uint8Array(buffer);\n        array.set(new Uint8Array(this.backend.encodeUtf8(this.command)));\n\n        const view = new DataView(buffer);\n        view.setUint32(4, this.arg0, true);\n        view.setUint32(8, this.arg1, true);\n        view.setUint32(12, this.payloadLength, true);\n        view.setUint32(16, /* checksum */ 0, true);\n        view.setUint32(20, /* magic */ view.getUint32(0, true) ^ 0xFFFFFFFF, true);\n\n        await this.backend.write(buffer);\n\n        if (this.payload) {\n            await this.backend.write(this.payload);\n        }\n    }\n}\n","import { PromiseResolver } from '@yume-chan/async-operation-manager';\nimport { Disposable } from '@yume-chan/event';\n\nexport class AutoResetEvent implements Disposable {\n    private readonly list: PromiseResolver<void>[] = [];\n\n    private blocking: boolean;\n\n    public constructor(initialSet = false) {\n        this.blocking = initialSet;\n    }\n\n    public wait(): Promise<void> {\n        if (!this.blocking) {\n            this.blocking = true;\n\n            if (this.list.length === 0) {\n                return Promise.resolve();\n            }\n        }\n\n        const resolver = new PromiseResolver<void>();\n        this.list.push(resolver);\n        return resolver.promise;\n    }\n\n    public notify() {\n        if (this.list.length !== 0) {\n            this.list.pop()!.resolve();\n        } else {\n            this.blocking = false;\n        }\n    }\n\n    public dispose() {\n        for (const item of this.list) {\n            item.reject(new Error('The AutoResetEvent has been disposed'));\n        }\n        this.list.length = 0;\n    }\n}\n","interface Base64CharRange {\n    start: number;\n\n    length: number;\n\n    end: number;\n\n    offset: number;\n}\n\nlet ranges: Base64CharRange[] = [];\nlet chars: string[] = [];\n\nlet offset = 0;\nfunction addRange(start: string, end: string) {\n    const startCharCode = start.charCodeAt(0);\n    const endCharCode = end.charCodeAt(0);\n    const length = endCharCode - startCharCode + 1;\n\n    for (let i = startCharCode; i <= endCharCode; i++) {\n        chars.push(String.fromCharCode(i));\n    }\n\n    ranges.push({\n        start: startCharCode,\n        length: length,\n        end: endCharCode,\n        offset: startCharCode - offset,\n    });\n\n    offset += length;\n}\n\naddRange('A', 'Z');\naddRange('a', 'z');\naddRange('0', '9');\naddRange('+', '+');\naddRange('/', '/');\n\nranges = ranges.sort((a, b) => a.end - b.end);\n\nfunction toValue(char: string): number {\n    const charCode = char.charCodeAt(0);\n\n    let start = 0;\n    let end = ranges.length - 1;\n    let i = end >> 1;\n\n    while (true) {\n        const range = ranges[i];\n        if (charCode < range.start) {\n            end = i - 1;\n        } else if (charCode > range.end) {\n            start = i + 1;\n        } else {\n            return charCode - range.offset;\n        }\n        i = (start + end) >> 1;\n    }\n}\n\nexport function encodeBase64(buffer: ArrayBuffer): string {\n    const array = new Uint8Array(buffer);\n    const length = buffer.byteLength;\n    const remainder = length % 3;\n    let result = '';\n\n    let i = 0;\n    for (; i < length - remainder;) {\n        // aaaaaabb\n        const x = array[i];\n        i += 1;\n        // bbbbcccc\n        const y = array[i];\n        i += 1;\n        // ccdddddd\n        const z = array[i];\n        i += 1;\n\n        result += chars[x >> 2];\n        result += chars[((x & 0b11) << 4) | (y >> 4)];\n        result += chars[((y & 0b1111) << 2) | (z >> 6)];\n        result += chars[z & 0b111111];\n    }\n\n    if (remainder === 1) {\n        // aaaaaabb\n        const x = array[i];\n\n        result += chars[x >> 2];\n        result += chars[((x & 0b11) << 4)];\n        result += '==';\n    } else if (remainder === 2) {\n        // aaaaaabb\n        const x = array[i];\n        i += 1;\n        // bbbbcccc\n        const y = array[i];\n\n        result += chars[x >> 2];\n        result += chars[((x & 0b11) << 4) | (y >> 4)];\n        result += chars[((y & 0b1111) << 2)];\n        result += '=';\n    }\n\n    return result;\n}\n\nexport function decodeBase64(input: string): ArrayBuffer {\n    let padding: number;\n    if (input[input.length - 2] === '=') {\n        padding = 2;\n    } else if (input[input.length - 1] === '=') {\n        padding = 1;\n    } else {\n        padding = 0;\n    }\n\n    const result = new Uint8Array(input.length / 4 * 3 - padding);\n    let sIndex = 0;\n    let dIndex = 0;\n\n    while (sIndex < input.length - (padding !== 0 ? 4 : 0)) {\n        const a = toValue(input[sIndex]);\n        sIndex += 1;\n\n        const b = toValue(input[sIndex]);\n        sIndex += 1;\n\n        const c = toValue(input[sIndex]);\n        sIndex += 1;\n\n        const d = toValue(input[sIndex]);\n        sIndex += 1;\n\n        result[dIndex] = (a << 2) | ((b & 0b11_0000) >> 4);\n        dIndex += 1;\n\n        result[dIndex] = ((b & 0b1111) << 4) | ((c & 0b11_1100) >> 2);\n        dIndex += 1;\n\n        result[dIndex] = ((c & 0b11) << 6) | d;\n        dIndex += 1;\n    }\n\n    if (padding === 1) {\n        const a = toValue(input[sIndex]);\n        sIndex += 1;\n\n        const b = toValue(input[sIndex]);\n        sIndex += 1;\n\n        const c = toValue(input[sIndex]);\n\n        result[dIndex] = (a << 2) | ((b & 0b11_0000) >> 4);\n        dIndex += 1;\n\n        result[dIndex] = ((b & 0b1111) << 4) | ((c & 0b11_1100) >> 2);\n    } else if (padding === 2) {\n        const a = toValue(input[sIndex]);\n        sIndex += 1;\n\n        const b = toValue(input[sIndex]);\n\n        result[dIndex] = (a << 2) | ((b & 0b11_0000) >> 4);\n    }\n\n    return result.buffer;\n}\n","import { PromiseResolver } from '@yume-chan/async-operation-manager';\nimport { EventEmitter } from '@yume-chan/event';\n\nexport type EventIteratorDestroyer<T> = (items: T[]) => void;\n\nexport class EventIteratorState<T> {\n    public pullQueue: PromiseResolver<IteratorResult<T>>[] = [];\n\n    public pushQueue: T[] = [];\n\n    public ended = false;\n\n    public pendingLowWaterEvent = false;\n\n    public lowWaterEvent = new EventEmitter<void>();\n\n    public get onLowWater() { return this.lowWaterEvent.event; }\n\n    public cleanup!: EventIteratorDestroyer<T>;\n}\n\nexport class EventIteratorController<T> {\n    private state: EventIteratorState<T>;\n\n    public maxConsumerCount = Infinity;\n\n    public highWaterMark: number = 10;\n\n    public lowWaterMark: number = 0;\n\n    public get onLowWater() { return this.state.lowWaterEvent.event; }\n\n    public constructor(state: EventIteratorState<T>) {\n        this.state = state;\n    }\n\n    public push(value: T): boolean {\n        if (this.state.pullQueue.length) {\n            this.state.pullQueue.shift()!.resolve({ done: false, value });\n            return true;\n        }\n\n        this.state.pushQueue.push(value);\n        if (this.state.pushQueue.length < this.highWaterMark) {\n            return true;\n        }\n\n        this.state.pendingLowWaterEvent = true;\n        return false;\n    }\n\n    end(): void {\n        this.state.ended = true;\n        while (this.state.pullQueue.length) {\n            this.state.pullQueue.shift()!.resolve({ done: true, value: undefined });\n        }\n        this.state.cleanup(this.state.pushQueue);\n    }\n}\n\nexport interface EventIteratorInitializer<T> {\n    (controller: EventIteratorController<T>): EventIteratorDestroyer<T>;\n}\n\nexport class EventIterable<T> implements AsyncIterable<T> {\n    private initializer: EventIteratorInitializer<T>;\n\n    public constructor(initializer: EventIteratorInitializer<T>) {\n        this.initializer = initializer;\n    }\n\n    public [Symbol.asyncIterator](): AsyncIterator<T> {\n        const state = new EventIteratorState<T>();\n        const controller = new EventIteratorController<T>(state);\n        state.cleanup = this.initializer(controller);\n        return {\n            next() {\n                if (state.pushQueue.length) {\n                    const value = state.pushQueue.shift()!;\n                    if (state.pendingLowWaterEvent &&\n                        state.pushQueue.length <= controller.lowWaterMark) {\n                        state.lowWaterEvent.fire();\n                    }\n                    return Promise.resolve({ done: false, value });\n                }\n\n                if (state.ended) {\n                    return Promise.resolve({ done: true, value: undefined });\n                }\n\n                if (state.pullQueue.length < controller.maxConsumerCount) {\n                    const resolver = new PromiseResolver<IteratorResult<T>>();\n                    state.pullQueue.push(resolver);\n                    return resolver.promise;\n                }\n\n                return Promise.reject(new Error('Max consumer count exceeded'));\n            },\n            return() {\n                controller.end();\n                return Promise.resolve({ done: true, value: undefined });\n            },\n        };\n    }\n}\n","import { AutoDisposable, Disposable } from '@yume-chan/event';\nimport { AdbBackend, AdbKeyIterator } from './backend';\nimport { calculatePublicKey, sign } from './crypto';\nimport { AdbCommand, AdbPacket } from './packet';\nimport { encodeBase64 } from './utils';\n\nexport enum AdbAuthType {\n    Token = 1,\n    Signature = 2,\n    PublicKey = 3,\n}\n\nexport interface AdbAuthenticator extends Disposable {\n    tryAuth(packet: AdbPacket): Promise<AdbPacket | undefined>;\n}\n\nexport interface AdbAuthenticatorConstructor {\n    new(backend: AdbBackend): AdbAuthenticator;\n}\n\nexport class AdbSignatureAuthenticator implements AdbAuthenticator {\n    private readonly backend: AdbBackend;\n\n    private readonly iterator: AdbKeyIterator;\n\n    private iteratorDone = false;\n\n    public constructor(backend: AdbBackend) {\n        this.backend = backend;\n        this.iterator = backend.iterateKeys();\n    }\n\n    public async tryAuth(packet: AdbPacket): Promise<AdbPacket | undefined> {\n        if (packet.arg0 !== AdbAuthType.Token) {\n            return undefined;\n        }\n\n        const next = await this.iterator.next();\n        if (next.done) {\n            this.iteratorDone = true;\n            return undefined;\n        }\n\n        const signature = sign(next.value, packet.payload!);\n        return new AdbPacket(\n            this.backend,\n            AdbCommand.Auth,\n            AdbAuthType.Signature,\n            0,\n            signature\n        );\n    }\n\n    public dispose() {\n        if (!this.iteratorDone) {\n            this.iterator.return?.();\n        }\n    }\n}\n\nexport class AdbPublicKeyAuthenticator implements AdbAuthenticator {\n    private backend: AdbBackend;\n\n    public constructor(backend: AdbBackend) {\n        this.backend = backend;\n    }\n\n    public async tryAuth(): Promise<AdbPacket> {\n        let privateKey: ArrayBuffer;\n\n        const iterator = this.backend.iterateKeys();\n        const next = await iterator.next();\n        if (!next.done) {\n            privateKey = next.value;\n            await iterator.return?.();\n        } else {\n            privateKey = await this.backend.generateKey();\n        }\n\n        const publicKey = calculatePublicKey(privateKey);\n        return new AdbPacket(\n            this.backend,\n            AdbCommand.Auth,\n            AdbAuthType.PublicKey,\n            0,\n            // adbd needs the extra null character\n            encodeBase64(publicKey) + '\\0'\n        );\n    }\n\n    public dispose() {\n        // do nothing\n    }\n}\n\nexport const AdbDefaultAuthenticators: AdbAuthenticatorConstructor[] = [\n    AdbSignatureAuthenticator,\n    AdbPublicKeyAuthenticator\n];\n\nexport class AdbAuthenticationHandler extends AutoDisposable {\n    public readonly authenticators: readonly AdbAuthenticator[];\n\n    private index = 0;\n\n    public constructor(\n        authenticators: readonly AdbAuthenticatorConstructor[],\n        backend: AdbBackend\n    ) {\n        super();\n\n        this.authenticators = authenticators.map(\n            Constructor => this.addDisposable(new Constructor(backend))\n        );\n    }\n\n    public async tryNextAuth(packet: AdbPacket): Promise<AdbPacket> {\n        while (this.index < this.authenticators.length) {\n            const result = await this.authenticators[this.index].tryAuth(packet);\n            if (result) {\n                return result;\n            }\n\n            this.index += 1;\n        }\n\n        throw new Error('Cannot authenticate with device');\n    }\n}\n","import { DisposableList } from '@yume-chan/event';\nimport { AdbStream } from './stream';\nimport { AutoResetEvent, EventIterable } from './utils';\n\nexport class AdbBufferedStream implements AsyncIterable<ArrayBuffer>{\n    private stream: AdbStream;\n\n    public get backend() { return this.stream.backend; }\n\n    public get localId() { return this.stream.localId; }\n\n    public get remoteId() { return this.stream.remoteId; }\n\n    private mode: 'none' | 'read' | 'iterate' = 'read';\n\n    private readBuffer: ArrayBuffer | undefined;\n\n    private readIterator: AsyncIterator<ArrayBuffer> | undefined;\n\n    private extraBuffers: ArrayBuffer[] = [];\n\n    public constructor(stream: AdbStream) {\n        this.stream = stream;\n    }\n\n    public async read(length: number): Promise<ArrayBuffer> {\n        if (this.mode !== 'none' && this.mode !== 'read') {\n            throw new Error(`This BufferedStream is in ${this.mode} mode`);\n        }\n\n        if (!this.readIterator) {\n            this.readIterator = this[Symbol.asyncIterator]();\n        }\n\n        this.mode = 'read';\n\n        let array: Uint8Array;\n        let index: number;\n        if (this.readBuffer) {\n            const buffer = this.readBuffer;\n            if (buffer.byteLength > length) {\n                this.readBuffer = buffer.slice(length);\n                return buffer.slice(0, length);\n            }\n\n            array = new Uint8Array(length);\n            array.set(new Uint8Array(buffer));\n            index = buffer.byteLength;\n            this.readBuffer = undefined;\n        } else {\n            array = new Uint8Array(length);\n            index = 0;\n        }\n\n        while (index < length) {\n            const result = await this.readIterator.next();\n            if (result.done) {\n                throw new Error('This BufferedStream has been closed');\n            }\n\n            const buffer = result.value;\n            if (buffer.byteLength > length - index) {\n                array.set(new Uint8Array(buffer.slice(0, length)), index);\n                this.readBuffer = buffer.slice(length);\n                return array.buffer;\n            }\n\n            array.set(new Uint8Array(buffer), index);\n            index += buffer.byteLength;\n        }\n\n        return array.buffer;\n    }\n\n    public async readAll(): Promise<string> {\n        let output = '';\n        for await (const buffer of this) {\n            output += this.stream.backend.decodeUtf8(buffer);\n        }\n        return output;\n    }\n\n    public write(data: ArrayBuffer): Promise<void> {\n        return this.stream.write(data);\n    }\n\n    public close() {\n        return this.stream.close();\n    }\n\n    public [Symbol.asyncIterator]() {\n        if (this.readIterator) {\n            this.readIterator.return?.();\n            this.readIterator = undefined;\n        }\n\n        return new EventIterable<ArrayBuffer>(controller => {\n            controller.maxConsumerCount = 1;\n\n            for (const item of this.extraBuffers) {\n                controller.push(item);\n            }\n            this.extraBuffers.length = 0;\n\n            const disposable = new DisposableList();\n            const resetEvent = new AutoResetEvent(true);\n            disposable.add(this.stream.onData(buffer => {\n                if (!controller.push(buffer)) {\n                    return resetEvent.wait();\n                }\n                return;\n            }));\n            disposable.add(this.stream.onClose(() => {\n                controller.end();\n            }));\n            disposable.add(controller.onLowWater(() => {\n                resetEvent.notify();\n            }));\n\n            this.mode = 'iterate';\n\n            return (buffers) => {\n                this.extraBuffers = buffers;\n                this.mode = 'none';\n                disposable.dispose();\n            };\n        })[Symbol.asyncIterator]();\n    }\n}\n","import AsyncOperationManager from '@yume-chan/async-operation-manager';\nimport { AsyncEventEmitter, AutoDisposable, EventEmitter } from '@yume-chan/event';\nimport { AdbBackend } from './backend';\nimport { AdbCommand, AdbPacket } from './packet';\nimport { AutoResetEvent } from './utils';\n\nexport class AdbStreamController extends AutoDisposable {\n    private readonly writeLock = this.addDisposable(new AutoResetEvent());\n\n    public readonly dispatcher: AdbPacketDispatcher;\n\n    public get backend() { return this.dispatcher.backend; }\n\n    public readonly localId: number;\n\n    public readonly remoteId: number;\n\n    public readonly dataEvent = this.addDisposable(new AsyncEventEmitter<ArrayBuffer>());\n\n    private readonly closeEvent = this.addDisposable(new EventEmitter<void>());\n\n    public get onClose() { return this.closeEvent.event; }\n\n    public constructor(localId: number, remoteId: number, dispatcher: AdbPacketDispatcher) {\n        super();\n\n        this.localId = localId;\n        this.remoteId = remoteId;\n        this.dispatcher = dispatcher;\n    }\n\n    public async write(data: ArrayBuffer): Promise<void> {\n        await this.writeLock.wait();\n        await this.dispatcher.sendPacket(AdbCommand.Write, this.localId, this.remoteId, data);\n    }\n\n    public ack() {\n        this.writeLock.notify();\n    }\n\n    public close() {\n        return this.dispatcher.sendPacket(AdbCommand.Close, this.localId, this.remoteId);\n    }\n\n    public dispose() {\n        this.closeEvent.fire();\n        super.dispose();\n    }\n}\n\nexport interface AdbPacketArrivedEventArgs {\n    handled: boolean;\n\n    packet: AdbPacket;\n}\n\nexport class AdbPacketDispatcher extends AutoDisposable {\n    public readonly backend: AdbBackend;\n\n    // ADB requires stream id to start from 1\n    // (0 means open failed)\n    private readonly initializers = new AsyncOperationManager(1);\n    private readonly streams = new Map<number, AdbStreamController>();\n\n    private readonly onPacketEvent = this.addDisposable(new EventEmitter<AdbPacketArrivedEventArgs>());\n    public readonly onPacket = this.onPacketEvent.event;\n\n    private readonly onReceiveErrorEvent = this.addDisposable(new EventEmitter<Error>());\n    public readonly onReceiveError = this.onReceiveErrorEvent.event;\n\n    private _running = true;\n    public get running() { return this._running; }\n\n    public constructor(backend: AdbBackend) {\n        super();\n\n        this.backend = backend;\n        this.receiveLoop();\n    }\n\n    public async createStream(service: string): Promise<AdbStream> {\n        const [localId, initializer] = this.initializers.add<number>();\n        await this.sendPacket(AdbCommand.Open, localId, 0, service);\n\n        const remoteId = await initializer;\n        const controller = new AdbStreamController(localId, remoteId, this);\n        this.streams.set(controller.localId, controller);\n\n        return new AdbStream(controller);\n    }\n\n    public sendPacket(packet: AdbPacket): Promise<void>;\n    public sendPacket(\n        command: AdbCommand,\n        arg0: number,\n        arg1: number,\n        payload?: string | ArrayBuffer\n    ): Promise<void>;\n    public sendPacket(\n        packetOrCommand: AdbPacket | AdbCommand,\n        arg0?: number,\n        arg1?: number,\n        payload?: string | ArrayBuffer\n    ): Promise<void> {\n        if (arguments.length === 1) {\n            return (packetOrCommand as AdbPacket).send();\n        } else {\n            return AdbPacket.send(\n                this.backend,\n                packetOrCommand as AdbCommand,\n                arg0 as number,\n                arg1 as number,\n                payload\n            );\n        }\n    }\n\n    public dispose() {\n        this._running = false;\n\n        for (const stream of this.streams.values()) {\n            stream.dispose();\n        }\n        this.streams.clear();\n\n        super.dispose();\n    }\n\n    private async receiveLoop() {\n        while (this._running) {\n            try {\n                const packet = await AdbPacket.parse(this.backend);\n                let handled = false;\n                switch (packet.command) {\n                    case AdbCommand.OK:\n                        handled = true;\n                        // OKAY has two meanings\n                        if (this.initializers.resolve(packet.arg1, packet.arg0)) {\n                            // 1. The device has created the Stream\n                        } else if (this.streams.has(packet.arg1)) {\n                            // 2. The device has received last WRTE to the Stream\n                            this.streams.get(packet.arg1)!.ack();\n                        } else {\n                            // Last connection sent an OPEN to device,\n                            // device now sent OKAY to this connection\n                            // tell the device to close the stream\n                            this.sendPacket(AdbCommand.Close, packet.arg1, packet.arg0);\n                        }\n                        break;\n                    case AdbCommand.Close:\n                        // CLSE also has two meanings\n                        if (packet.arg0 === 0) {\n                            // 1. The device don't want to create the Stream\n                            if (this.initializers.reject(packet.arg1, new Error('open failed'))) {\n                                handled = true;\n                            }\n                        } else if (this.streams.has(packet.arg1)) {\n                            // 2. The device has closed the Stream\n                            const stream = this.streams.get(packet.arg1)!;\n                            stream.dispose();\n\n                            this.streams.delete(packet.arg1);\n                            handled = true;\n                        }\n                        break;\n                    case AdbCommand.Write:\n                        if (this.streams.has(packet.arg1)) {\n                            await this.sendPacket(AdbCommand.OK, packet.arg1, packet.arg0);\n                            await this.streams.get(packet.arg1)!.dataEvent.fire(packet.payload!);\n                            handled = true;\n                        }\n                        break;\n                }\n\n                if (!handled) {\n                    const args: AdbPacketArrivedEventArgs = {\n                        handled: false,\n                        packet,\n                    };\n                    this.onPacketEvent.fire(args);\n                    if (!args.handled) {\n                        this.dispose();\n                        return;\n                    }\n                }\n            } catch (e) {\n                if (!this._running) {\n                    // ignore error\n                }\n\n                this.onReceiveErrorEvent.fire(e);\n            }\n        }\n    }\n}\n\nexport class AdbStream {\n    private controller: AdbStreamController;\n\n    public get backend() { return this.controller.backend; }\n\n    public get localId() { return this.controller.localId; }\n\n    public get remoteId() { return this.controller.remoteId; }\n\n    public get onData() { return this.controller.dataEvent.event; }\n\n    public get onClose() { return this.controller.onClose; }\n\n    public constructor(controller: AdbStreamController) {\n        this.controller = controller;\n    }\n\n    public write(data: ArrayBuffer): Promise<void> {\n        return this.controller.write(data);\n    }\n\n    public close(): Promise<void> {\n        return this.controller.close();\n    }\n}\n","import { AutoDisposable } from '@yume-chan/event';\nimport { AdbBackend } from './backend';\nimport { AdbBufferedStream } from './buffered-stream';\nimport { AdbStream } from './stream';\nimport { AutoResetEvent } from './utils';\n\nexport enum AdbSyncRequestId {\n    List = 'LIST',\n    Send = 'SEND',\n    Stat = 'STAT',\n    Data = 'DATA',\n    Done = 'DONE',\n    Receive = 'RECV',\n}\n\nexport enum AdbSyncResponseId {\n    Entry = 'DENT',\n    Done = 'DONE',\n    Data = 'DATA',\n    Ok = 'OKAY',\n}\n\nexport abstract class AdbSyncRequestBase<T extends AdbSyncRequestId = AdbSyncRequestId> {\n    public readonly id: T;\n\n    public constructor(id: T) {\n        this.id = id;\n    }\n\n    public abstract toBuffer(backend: AdbBackend): ArrayBuffer;\n}\n\nexport type AdbSyncNumberRequestId =\n    AdbSyncRequestId.Done;\n\nexport class AdbSyncNumberRequest extends AdbSyncRequestBase<AdbSyncNumberRequestId> {\n    public readonly value: number;\n\n    public constructor(id: AdbSyncNumberRequestId, value: number) {\n        super(id);\n        this.value = value;\n    }\n\n    public toBuffer(backend: AdbBackend): ArrayBuffer {\n        const array = new Uint8Array(8);\n\n        const idBuffer = backend.encodeUtf8(this.id);\n        array.set(new Uint8Array(idBuffer));\n\n        const view = new DataView(array.buffer);\n        view.setUint32(4, this.value, true);\n\n        return array.buffer;\n    }\n}\n\nexport type AdbSyncStringRequestId =\n    AdbSyncRequestId.List |\n    AdbSyncRequestId.Send |\n    AdbSyncRequestId.Stat |\n    AdbSyncRequestId.Receive;\n\nexport class AdbSyncStringRequest extends AdbSyncRequestBase<AdbSyncStringRequestId> {\n    public value: string;\n\n    public constructor(id: AdbSyncStringRequestId, value: string) {\n        super(id);\n        this.value = value;\n    }\n\n    public toBuffer(backend: AdbBackend) {\n        const valueBuffer = backend.encodeUtf8(this.value);\n        const array = new Uint8Array(8 + valueBuffer.byteLength);\n\n        const idBuffer = backend.encodeUtf8(this.id);\n        array.set(new Uint8Array(idBuffer));\n\n        const view = new DataView(array.buffer);\n        view.setUint32(4, valueBuffer.byteLength, true);\n\n        array.set(new Uint8Array(valueBuffer), 8);\n\n        return array.buffer;\n    }\n}\n\n// https://github.com/python/cpython/blob/4e581d64b8aff3e2eda99b12f080c877bb78dfca/Lib/stat.py#L36\nexport enum LinuxFileType {\n    Directory = 0o04,\n    File = 0o10,\n    Link = 0o12,\n}\n\nexport class AdbSyncEntryResponse {\n    public static async parse(stream: AdbBufferedStream): Promise<AdbSyncEntryResponse> {\n        const buffer = await stream.read(16);\n        const view = new DataView(buffer);\n        const mode = view.getUint32(0, true);\n        const size = view.getUint32(4, true);\n        const lastModifiedTime = view.getUint32(8, true);\n        const nameLength = view.getUint32(12, true);\n        const name = stream.backend.decodeUtf8(await stream.read(nameLength));\n        return new AdbSyncEntryResponse(mode, size, lastModifiedTime, name);\n    }\n\n    public readonly id = AdbSyncResponseId.Entry;\n\n    public readonly type: LinuxFileType;\n\n    public readonly mode: number;\n\n    public readonly size: number;\n\n    public readonly lastModifiedTime: number;\n\n    public readonly name: string;\n\n    public constructor(mode: number, size: number, lastModifiedTime: number, name: string) {\n        this.type = mode >> 12 as LinuxFileType;\n        this.mode = mode & 0b00001111_11111111;\n        this.size = size;\n        this.lastModifiedTime = lastModifiedTime;\n        this.name = name;\n    }\n}\n\nexport class AdbSyncDataResponse {\n    public static async parse(stream: AdbBufferedStream): Promise<AdbSyncDataResponse> {\n        const buffer = await stream.read(4);\n        const view = new DataView(buffer);\n        const length = view.getUint32(0, true);\n        const data = await stream.read(length);\n        return new AdbSyncDataResponse(data);\n    }\n\n    public readonly id = AdbSyncResponseId.Data;\n\n    public readonly data: ArrayBuffer;\n\n    public constructor(data: ArrayBuffer) {\n        this.data = data;\n    }\n}\n\nexport class AdbSyncDoneResponse {\n    public readonly id = AdbSyncResponseId.Done;\n}\n\nasync function parseResponse(stream: AdbBufferedStream) {\n    const id = stream.backend.decodeUtf8(await stream.read(4)) as AdbSyncResponseId;\n    switch (id) {\n        case AdbSyncResponseId.Entry:\n            return await AdbSyncEntryResponse.parse(stream);\n        case AdbSyncResponseId.Data:\n            return await AdbSyncDataResponse.parse(stream);\n        case AdbSyncResponseId.Done:\n            await stream.read(4);\n            return new AdbSyncDoneResponse();\n        default:\n            throw new Error('');\n    }\n}\n\nexport class AdbSync extends AutoDisposable {\n    private stream: AdbBufferedStream;\n\n    private sendLock = this.addDisposable(new AutoResetEvent());\n\n    public constructor(stream: AdbStream) {\n        super();\n\n        this.stream = new AdbBufferedStream(stream);\n    }\n\n    public async list(path: string) {\n        await this.sendLock.wait();\n\n        try {\n            await this.write(new AdbSyncStringRequest(AdbSyncRequestId.List, path));\n\n            const results: AdbSyncEntryResponse[] = [];\n            while (true) {\n                const response = await parseResponse(this.stream);\n                switch (response.id) {\n                    case AdbSyncResponseId.Entry:\n                        results.push(response);\n                        break;\n                    case AdbSyncResponseId.Done:\n                        return results;\n                    default:\n                        throw new Error('Unexpected response id');\n                }\n            }\n        } finally {\n            this.sendLock.notify();\n        }\n    }\n\n    public async *receive(path: string): AsyncGenerator<ArrayBuffer, void, void> {\n        await this.sendLock.wait();\n\n        try {\n            await this.write(new AdbSyncStringRequest(AdbSyncRequestId.Receive, path));\n            while (true) {\n                const response = await parseResponse(this.stream);\n                switch (response.id) {\n                    case AdbSyncResponseId.Data:\n                        yield response.data;\n                        break;\n                    case AdbSyncResponseId.Done:\n                        return;\n                    default:\n                        throw new Error('Unexpected response id');\n                }\n            }\n        } finally {\n            this.sendLock.notify();\n        }\n    }\n\n    public dispose() {\n        super.dispose();\n        this.stream.close();\n    }\n\n    private write(request: AdbSyncRequestBase) {\n        return this.stream.write(request.toBuffer(this.stream.backend));\n    }\n}\n","import { PromiseResolver } from '@yume-chan/async-operation-manager';\nimport { DisposableList } from '@yume-chan/event';\nimport { AdbAuthenticationHandler, AdbDefaultAuthenticators } from './auth';\nimport { AdbBackend } from './backend';\nimport { AdbBufferedStream } from './buffered-stream';\nimport { AdbCommand } from './packet';\nimport { AdbPacketDispatcher, AdbStream } from './stream';\nimport { AdbSync } from './sync';\n\nexport enum AdbPropKey {\n    Product = 'ro.product.name',\n    Model = 'ro.product.model',\n    Device = 'ro.product.device',\n    Features = 'features',\n}\n\nexport class Adb {\n    private backend: AdbBackend;\n\n    public get onDisconnected() { return this.backend.onDisconnected; }\n\n    private _connected = false;\n    public get connected() { return this._connected; }\n\n    public get name() { return this.backend.name; }\n\n    private _product: string | undefined;\n    public get product() { return this._product; }\n\n    private _model: string | undefined;\n    public get model() { return this._model; }\n\n    private _device: string | undefined;\n    public get device() { return this._device; }\n\n    private _features: string[] | undefined;\n    public get features() { return this._features; }\n\n    private packetDispatcher: AdbPacketDispatcher;\n\n    public constructor(backend: AdbBackend) {\n        this.backend = backend;\n        this.packetDispatcher = new AdbPacketDispatcher(backend);\n\n        backend.onDisconnected(this.dispose, this);\n    }\n\n    public async connect(authenticators = AdbDefaultAuthenticators) {\n        const version = 0x01000001;\n\n        const features = [\n            'shell_v2',\n            'cmd',\n            'stat_v2',\n            'ls_v2',\n            'fixed_push_mkdir',\n            'apex',\n            'abb',\n            'fixed_push_symlink_timestamp',\n            'abb_exec',\n            'remount_shell',\n            'track_app',\n            'sendrecv_v2',\n            'sendrecv_v2_brotli',\n            'sendrecv_v2_lz4',\n            'sendrecv_v2_zstd',\n            'sendrecv_v2_dry_run_send',\n        ].join(',');\n\n        const resolver = new PromiseResolver<void>();\n        const authHandler = new AdbAuthenticationHandler(authenticators, this.backend);\n        const disposableList = new DisposableList();\n        disposableList.add(this.packetDispatcher.onPacket(async (e) => {\n            e.handled = true;\n\n            const { packet } = e;\n            try {\n                switch (packet.command) {\n                    case AdbCommand.Connect:\n                        if (packet.arg0 !== version) {\n                            throw new Error('Version mismatch');\n                        }\n\n                        this.parseBanner(packet.payloadString!);\n                        resolver.resolve();\n                        break;\n                    case AdbCommand.Auth:\n                        const authPacket = await authHandler.tryNextAuth(e.packet);\n                        await this.packetDispatcher.sendPacket(authPacket);\n                        break;\n                    case AdbCommand.Close:\n                        // Last connection was interrupted\n                        // Ignore this packet, device will recover\n                        break;\n                    default:\n                        throw new Error('Device not in correct state. Reconnect your device and try again');\n                }\n            } catch (e) {\n                resolver.reject(e);\n            }\n        }));\n\n        disposableList.add(this.packetDispatcher.onReceiveError(e => {\n            resolver.reject(e);\n        }));\n\n        await this.packetDispatcher.sendPacket(\n            AdbCommand.Connect,\n            version,\n            0x100000,\n            `host::features=${features}`\n        );\n\n        try {\n            await resolver.promise;\n            this._connected = true;\n        } finally {\n            disposableList.dispose();\n        }\n    }\n\n    private parseBanner(banner: string) {\n        const pieces = banner.split('::');\n        if (pieces.length > 1) {\n            const props = pieces[1];\n            for (const prop of props.split(';')) {\n                if (!prop) {\n                    continue;\n                }\n\n                const keyValue = prop.split('=');\n                if (keyValue.length !== 2) {\n                    continue;\n                }\n\n                const [key, value] = keyValue;\n                switch (key) {\n                    case AdbPropKey.Product:\n                        this._product = value;\n                        break;\n                    case AdbPropKey.Model:\n                        this._model = value;\n                        break;\n                    case AdbPropKey.Device:\n                        this._device = value;\n                        break;\n                    case AdbPropKey.Features:\n                        this._features = value.split(',');\n                        break;\n                }\n            }\n        }\n    }\n\n    public shell(command: string, ...args: string[]): Promise<string>;\n    public shell(): Promise<AdbStream>;\n    public shell(command?: string, ...args: string[]): Promise<AdbStream | string> {\n        if (!command) {\n            return this.createStream('shell:');\n        } else {\n            return this.createStreamAndReadAll(`shell:${command} ${args.join(' ')}`);\n        }\n    }\n\n    public async getDaemonTcpAddresses(): Promise<string[]> {\n        const propAddr = (await this.shell('getprop', 'service.adb.listen_addrs')).trim();\n        if (propAddr) {\n            return propAddr.split(',');\n        }\n\n        let port = (await this.shell('getprop', 'service.adb.tcp.port')).trim();\n        if (port) {\n            return [`0.0.0.0:${port}`];\n        }\n\n        port = (await this.shell('getprop', 'persist.adb.tcp.port')).trim();\n        if (port) {\n            return [`0.0.0.0:${port}`];\n        }\n\n        return [];\n    }\n\n    public setDaemonTcpPort(port = 5555): Promise<string> {\n        return this.createStreamAndReadAll(`tcpip:${port}`);\n    }\n\n    public disableDaemonTcp(): Promise<string> {\n        return this.createStreamAndReadAll('usb:');\n    }\n\n    public async sync(): Promise<AdbSync> {\n        const stream = await this.createStream('sync:\\0');\n        return new AdbSync(stream);\n    }\n\n    public async createStream(service: string): Promise<AdbStream> {\n        return this.packetDispatcher.createStream(service);\n    }\n\n    public async createStreamAndReadAll(payload: string): Promise<string> {\n        const stream = await this.createStream(payload);\n        const buffered = new AdbBufferedStream(stream);\n        return buffered.readAll();\n    }\n\n    public async dispose() {\n        this.packetDispatcher.dispose();\n        await this.backend.dispose();\n    }\n}\n","import { AdbBackend, decodeBase64, encodeBase64 } from '@yume-chan/adb';\nimport { EventEmitter } from '@yume-chan/event';\n\nexport const WebUsbDeviceFilter: USBDeviceFilter = {\n    classCode: 0xFF,\n    subclassCode: 0x42,\n    protocolCode: 1,\n};\n\nconst PrivateKeyStorageKey = 'private-key';\n\nconst Utf8Encoder = new TextEncoder();\nconst Utf8Decoder = new TextDecoder();\n\nexport class WebUsbAdbBackend implements AdbBackend {\n    public static async fromDevice(device: USBDevice) {\n        await device.open();\n\n        for (const configuration of device.configurations) {\n            for (const interface_ of configuration.interfaces) {\n                for (const alternate of interface_.alternates) {\n                    if (alternate.interfaceSubclass === WebUsbDeviceFilter.subclassCode &&\n                        alternate.interfaceClass === WebUsbDeviceFilter.classCode &&\n                        alternate.interfaceSubclass === WebUsbDeviceFilter.subclassCode) {\n                        if (device.configuration?.configurationValue !== configuration.configurationValue) {\n                            await device.selectConfiguration(configuration.configurationValue);\n                        }\n\n                        if (!interface_.claimed) {\n                            await device.claimInterface(interface_.interfaceNumber);\n                        }\n\n                        if (interface_.alternate.alternateSetting !== alternate.alternateSetting) {\n                            await device.selectAlternateInterface(interface_.interfaceNumber, alternate.alternateSetting);\n                        }\n\n                        let inEndpointNumber: number | undefined;\n                        let outEndpointNumber: number | undefined;\n\n                        for (const endpoint of alternate.endpoints) {\n                            switch (endpoint.direction) {\n                                case 'in':\n                                    inEndpointNumber = endpoint.endpointNumber;\n                                    if (outEndpointNumber !== undefined) {\n                                        return new WebUsbAdbBackend(device, inEndpointNumber, outEndpointNumber);\n                                    }\n                                    break;\n                                case 'out':\n                                    outEndpointNumber = endpoint.endpointNumber;\n                                    if (inEndpointNumber !== undefined) {\n                                        return new WebUsbAdbBackend(device, inEndpointNumber, outEndpointNumber);\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        throw new Error('Unknown error');\n    }\n\n    public static async pickDevice() {\n        try {\n            const device = await navigator.usb.requestDevice({ filters: [WebUsbDeviceFilter] });\n            return WebUsbAdbBackend.fromDevice(device);\n        } catch (e) {\n            switch (e.name) {\n                case 'NotFoundError':\n                    return undefined;\n                default:\n                    throw e;\n            }\n        }\n    }\n\n    private _device: USBDevice;\n\n    public get name() { return this._device.productName; }\n\n    private readonly onDisconnectedEvent = new EventEmitter<void>();\n    public readonly onDisconnected = this.onDisconnectedEvent.event;\n\n    private _inEndpointNumber!: number;\n    private _outEndpointNumber!: number;\n\n    private constructor(device: USBDevice, inEndPointNumber: number, outEndPointNumber: number) {\n        this._device = device;\n        this._inEndpointNumber = inEndPointNumber;\n        this._outEndpointNumber = outEndPointNumber;\n    }\n\n    public *iterateKeys(): Generator<ArrayBuffer, void, void> {\n        const privateKey = window.localStorage.getItem(PrivateKeyStorageKey);\n        if (privateKey) {\n            yield decodeBase64(privateKey);\n        }\n    }\n\n    public async generateKey(): Promise<ArrayBuffer> {\n        const { privateKey: cryptoKey } = await crypto.subtle.generateKey(\n            {\n                name: 'RSASSA-PKCS1-v1_5',\n                modulusLength: 2048,\n                // 65537\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                hash: 'SHA-1',\n            },\n            true,\n            ['sign', 'verify']\n        );\n\n        const privateKey = await crypto.subtle.exportKey('pkcs8', cryptoKey);\n        window.localStorage.setItem(PrivateKeyStorageKey, encodeBase64(privateKey));\n        return privateKey;\n    }\n\n    public encodeUtf8(input: string): ArrayBuffer {\n        return Utf8Encoder.encode(input);\n    }\n\n    public decodeUtf8(buffer: ArrayBuffer): string {\n        return Utf8Decoder.decode(buffer);\n    }\n\n    public async write(buffer: ArrayBuffer): Promise<void> {\n        await this._device.transferOut(this._outEndpointNumber, buffer);\n    }\n\n    public async read(length: number): Promise<ArrayBuffer> {\n        try {\n            const result = await this._device.transferIn(this._inEndpointNumber, length);\n\n            if (result.status === 'stall') {\n                await this._device.clearHalt('in', this._inEndpointNumber);\n            }\n\n            return result.data!.buffer;\n        } catch (e) {\n            if (e instanceof Error && e.name === 'NotFoundError') {\n                this.onDisconnectedEvent.fire();\n            }\n\n            throw e;\n        }\n    }\n\n    public async dispose() {\n        this.onDisconnectedEvent.dispose();\n        await this._device.close();\n    }\n}\n","import { memo, NamedExoticComponent } from 'react';\n\nexport default function withDisplayName<P extends object>(\n    name: string,\n    Component: React.FunctionComponent<P>\n): NamedExoticComponent<P> {\n    Component.displayName = name;\n    return memo(Component);\n}\n","import { DefaultButton, Dialog, DialogFooter, DialogType, PrimaryButton, ProgressIndicator, Stack, StackItem } from '@fluentui/react';\nimport { useBoolean } from '@uifabric/react-hooks';\nimport { Adb } from '@yume-chan/adb';\nimport { WebUsbAdbBackend } from '@yume-chan/adb-webusb';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport withDisplayName from './with-display-name';\n\ninterface ConnectProps {\n    device: Adb | undefined;\n\n    onDeviceChange: (device: Adb | undefined) => void;\n}\n\nexport default withDisplayName('Connect', ({\n    device,\n    onDeviceChange,\n}: ConnectProps): JSX.Element | null => {\n    const [connecting, setConnecting] = useState(false);\n\n    const [errorDialogVisible, { setTrue: showErrorDialog, setFalse: hideErrorDialog }] = useBoolean(false);\n    const [errorMessage, setErrorMessage] = useState<string | undefined>();\n\n    const connect = useCallback(async () => {\n        try {\n            const backend = await WebUsbAdbBackend.pickDevice();\n            if (backend) {\n                const device = new Adb(backend);\n                try {\n                    setConnecting(true);\n                    await device.connect();\n                    onDeviceChange(device);\n                } catch (e) {\n                    device.dispose();\n                    throw e;\n                }\n            }\n        } catch (e) {\n            setErrorMessage(e.message);\n            showErrorDialog();\n        } finally {\n            setConnecting(false);\n        }\n    }, [onDeviceChange]);\n\n    const disconnect = useCallback(async () => {\n        try {\n            await device!.dispose();\n            onDeviceChange(undefined);\n        } catch (e) {\n            setErrorMessage(e.message);\n            showErrorDialog();\n        }\n    }, [device]);\n\n    useEffect(() => {\n        return device?.onDisconnected(() => {\n            onDeviceChange(undefined);\n        });\n    }, [device, onDeviceChange]);\n\n    return (\n        <>\n            <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8, padding: 8 }}>\n                {!device && <StackItem>\n                    <PrimaryButton text=\"Connect\" onClick={connect} />\n                </StackItem>}\n                {device && <StackItem>\n                    <DefaultButton text=\"Disconnect\" onClick={disconnect} />\n                </StackItem>}\n                <StackItem>\n                    {device && `Connected to ${device.name}`}\n                </StackItem>\n            </Stack>\n\n            <Dialog\n                hidden={!connecting}\n                dialogContentProps={{\n                    title: 'Connecting',\n                    subText: 'Please authorize the connection on your device'\n                }}\n            >\n                <ProgressIndicator />\n            </Dialog>\n\n            <Dialog\n                hidden={!errorDialogVisible}\n                dialogContentProps={{\n                    type: DialogType.normal,\n                    title: 'Error',\n                    subText: errorMessage,\n                }}\n            >\n                <DialogFooter>\n                    <PrimaryButton text=\"OK\" onClick={hideErrorDialog} />\n                </DialogFooter>\n            </Dialog>\n        </>\n    );\n});\n","import React, { CSSProperties, HTMLAttributes, PropsWithChildren, useCallback, useRef } from 'react';\nimport withDisplayName from './with-display-name';\n\nexport interface ResizeObserverProps extends HTMLAttributes<HTMLDivElement>, PropsWithChildren<{}> {\n    onResize: () => void;\n}\n\nconst iframeStyle: CSSProperties = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    visibility: 'hidden',\n};\n\nexport default withDisplayName('ResizeObserver', ({\n    onResize,\n    style,\n    children,\n    ...rest\n}: ResizeObserverProps): JSX.Element | null => {\n    const onResizeRef = useRef<() => void>(onResize);\n    onResizeRef.current = onResize;\n\n    const handleResize = useCallback(() => {\n        onResizeRef.current();\n    }, []);\n\n    const handleIframeRef = useCallback((element: HTMLIFrameElement | null) => {\n        if (element) {\n            element.contentWindow!.addEventListener('resize', handleResize);\n        }\n    }, []);\n\n    const containerStyle: CSSProperties = React.useMemo(() => {\n        if (!style) {\n            return { position: 'relative' };\n        }\n\n        if (!style.position) {\n            return { ...style, position: 'relative' };\n        }\n\n        return style;\n    }, [style]);\n\n    return (\n        <div style={containerStyle} {...rest}>\n            <iframe ref={handleIframeRef} style={iframeStyle} />\n            {children}\n        </div>\n    );\n});\n","import { Adb } from '@yume-chan/adb';\nimport React, { CSSProperties, useCallback, useEffect, useRef, useState } from 'react';\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\n// import { SearchAddon } from 'xterm-addon-search';\nimport 'xterm/css/xterm.css';\nimport ResizeObserver from './resize-observer';\nimport withDisplayName from './with-display-name';\n\nconst containerStyle: CSSProperties = {\n    width: '100%',\n    height: '100%',\n};\n\nexport interface ShellProps {\n    device: Adb | undefined;\n\n    visible: boolean;\n}\n\nexport default withDisplayName('Shell', ({\n    device,\n    visible,\n}: ShellProps): JSX.Element | null => {\n    const [cached, setCached] = useState(false);\n    useEffect(() => {\n        if (visible) {\n            setCached(true);\n        }\n    }, [visible]);\n\n    const [terminal, setTerminal] = useState<Terminal>();\n    const fitAddonRef = useRef<FitAddon>();\n    const handleContainerRef = useCallback((element: HTMLDivElement | null) => {\n        if (!element) {\n            return;\n        }\n\n        const terminal = new Terminal({\n            scrollback: 9001,\n        });\n\n        const fitAddon = new FitAddon();\n        fitAddonRef.current = fitAddon;\n        terminal.loadAddon(fitAddon);\n\n        setTerminal(terminal);\n        terminal.open(element);\n        fitAddon.fit();\n    }, []);\n    useEffect(() => {\n        return () => terminal?.dispose();\n    }, []);\n\n    useEffect(() => {\n        if (!device || !terminal) {\n            return;\n        }\n\n        (async () => {\n            const shell = await device.shell();\n            const textEncoder = new TextEncoder();\n            terminal.onData(data => {\n                const { buffer } = textEncoder.encode(data);\n                shell.write(buffer);\n            });\n            shell.onData(data => {\n                terminal.write(new Uint8Array(data));\n            });\n        })();\n\n        return () => {\n            terminal.reset();\n            terminal.clear();\n        };\n    }, [device, terminal]);\n\n    const handleResize = useCallback(() => {\n        fitAddonRef.current?.fit();\n    }, []);\n\n    if (!cached) {\n        return null;\n    }\n\n    return (\n        <ResizeObserver style={containerStyle} onResize={handleResize}>\n            <div ref={handleContainerRef} style={{ height: '100%' }} />\n        </ResizeObserver>\n    );\n});\n","import { Breadcrumb, concatStyleSets, ContextualMenu, DetailsListLayoutMode, DirectionalHint, IBreadcrumbItem, IColumn, Icon, IContextualMenuItem, IDetailsHeaderProps, IRenderFunction, Layer, Link, Overlay, ShimmeredDetailsList, Stack, StackItem } from '@fluentui/react';\nimport { FileIconType, getFileTypeIconProps, initializeFileTypeIcons } from '@uifabric/file-type-icons';\nimport { useConstCallback } from '@uifabric/react-hooks';\nimport { Adb, AdbSyncEntryResponse, LinuxFileType } from '@yume-chan/adb';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport StreamSaver from 'streamsaver';\nimport withDisplayName from './with-display-name';\n\ninitializeFileTypeIcons();\nStreamSaver.mitm = '/streamsaver/mitm.html';\n\nexport interface SyncProps {\n    device: Adb | undefined;\n\n    visible: boolean;\n}\n\nconst units = [' B', ' KB', ' MB', ' GB'];\nfunction formatSize(value: number): string {\n    let index = 0;\n    while (index < units.length && value > 1024) {\n        index += 1;\n        value /= 1024;\n    }\n    return value.toLocaleString(undefined, { maximumFractionDigits: 2 }) + units[index];\n}\n\nfunction extensionName(fileName: string): string {\n    const index = fileName.lastIndexOf('.');\n    if (index === -1) {\n        return '';\n    } else {\n        return fileName.slice(index);\n    }\n}\n\nconst renderDetailsHeader: IRenderFunction<IDetailsHeaderProps> = (props?, defaultRender?) => {\n    if (!props || !defaultRender) {\n        return null;\n    }\n\n    return defaultRender({\n        ...props,\n        styles: concatStyleSets(props.styles, { root: { paddingTop: 0 } })\n    });\n};\n\nfunction combinePath(...segments: string[]): string {\n    return segments.reduce((result, item) => {\n        if (result.endsWith('/')) {\n            return `${result}${item}`;\n        } else {\n            return `${result}/${item}`;\n        }\n    }, '');\n}\n\nfunction createReadableStreamFromBufferIterator(iterator: AsyncIterator<ArrayBuffer>): ReadableStream {\n    return new ReadableStream<Uint8Array>({\n        async pull(controller) {\n            const { desiredSize } = controller;\n            if (!desiredSize || desiredSize < 0) {\n                return;\n            }\n\n            let written = 0;\n            while (written < desiredSize) {\n                const result = await iterator.next();\n                if (result.done) {\n                    controller.close();\n                    return;\n                }\n\n                controller.enqueue(new Uint8Array(result.value));\n                written += result.value.byteLength;\n            }\n        },\n    });\n}\n\nexport default withDisplayName('Sync', ({\n    device,\n    visible,\n}: SyncProps): JSX.Element | null => {\n    const [cached, setCached] = useState(false);\n    useEffect(() => {\n        if (visible) {\n            setCached(true);\n        }\n    }, [visible]);\n\n    const [path, setPath] = useState('/');\n    const [loading, setLoading] = useState(false);\n    const [items, setItems] = useState<AdbSyncEntryResponse[]>([]);\n    useEffect(() => {\n        (async () => {\n            if (!cached) {\n                return;\n            }\n\n            if (!device) {\n                setPath('/');\n                setItems([]);\n                return;\n            }\n\n            setLoading(true);\n            const sync = await device.sync();\n            try {\n                let list = await sync.list(path);\n                list = list.filter(item => item.name !== '.' && item.name !== '..');\n                list.sort((a, b) => {\n                    if (a.type === LinuxFileType.Directory) {\n                        if (b.type === LinuxFileType.Directory) {\n                            return a.name < b.name ? -1 : 1;\n                        }\n                        return -1;\n                    }\n                    if (b.type === LinuxFileType.Directory) {\n                        return 1;\n                    }\n                    return a.name < b.name ? -1 : 1;\n                });\n                setItems(list);\n            } finally {\n                setLoading(false);\n                sync.dispose();\n            }\n        })();\n    }, [cached, device, path]);\n\n    const [previewUrl, setPreviewUrl] = useState<string | undefined>();\n    const previewImage = useCallback(async (path: string) => {\n        const sync = await device!.sync();\n        try {\n            const readableStream = createReadableStreamFromBufferIterator(sync.receive(path));\n            const response = new Response(readableStream);\n            const blob = await response.blob();\n            const url = window.URL.createObjectURL(blob);\n            setPreviewUrl(url);\n        } finally {\n            sync.dispose();\n        }\n    }, [device]);\n    const hidePreview = useCallback(() => {\n        setPreviewUrl(undefined);\n    }, []);\n\n    const handleItemInvoked = useCallback((item: AdbSyncEntryResponse) => {\n        switch (item.type) {\n            case LinuxFileType.Link:\n            case LinuxFileType.Directory:\n                setPath(combinePath(path, item.name));\n                break;\n            case LinuxFileType.File:\n                switch (extensionName(item.name)) {\n                    case '.jpg':\n                    case '.png':\n                    case '.svg':\n                    case '.gif':\n                        previewImage(combinePath(path, item.name));\n                        break;\n                }\n                break;\n        }\n    }, [path, previewImage]);\n\n    const columns = useMemo((): IColumn[] => [\n        {\n            key: 'type',\n            name: 'File Type',\n            iconName: 'Page',\n            isIconOnly: true,\n            minWidth: 20,\n            maxWidth: 20,\n            isCollapsible: true,\n            onRender(item: AdbSyncEntryResponse) {\n                switch (item.type) {\n                    case LinuxFileType.Link:\n                        return <Icon {...getFileTypeIconProps({ size: 20, type: FileIconType.linkedFolder })} />;\n                    case LinuxFileType.Directory:\n                        return <Icon {...getFileTypeIconProps({ size: 20, type: FileIconType.folder })} />;\n                    case LinuxFileType.File:\n                        return <Icon {...getFileTypeIconProps({ size: 20, extension: extensionName(item.name) })} />;\n                    default:\n                        return <Icon {...getFileTypeIconProps({ size: 20, extension: 'txt' })} />;\n                }\n            }\n        },\n        {\n            key: 'name',\n            name: 'Name',\n            fieldName: 'name',\n            minWidth: 0,\n            isRowHeader: true,\n            isSorted: true,\n            onRender(item: AdbSyncEntryResponse) {\n                return (\n                    <Link onClick={() => handleItemInvoked(item)} styles={{\n                        root: {\n                            color: 'inherit',\n                            '&:active, &:hover, &:active:hover, &:focus': {\n                                color: 'inherit',\n                            }\n                        }\n                    }} >\n                        {item.name}\n                    </Link>\n                );\n            }\n        },\n        {\n            key: 'mode',\n            name: 'Mode',\n            fieldName: 'mode',\n            minWidth: 0,\n            onRender(item: AdbSyncEntryResponse) {\n                return `0${(item.mode >> 6 & 0b100).toString(8)}${(item.mode >> 3 & 0b100).toString(8)}${(item.mode & 0b100).toString(8)}`;\n            }\n        },\n        {\n            key: 'size',\n            name: 'Size',\n            fieldName: 'size',\n            minWidth: 0,\n            onRender(item: AdbSyncEntryResponse) {\n                if (item.type === LinuxFileType.File) {\n                    return formatSize(item.size);\n                }\n                return '';\n            }\n        },\n        {\n            key: 'lastModifiedTime',\n            name: 'Last Modified Time',\n            fieldName: 'lastModifiedTime',\n            minWidth: 150,\n            onRender(item: AdbSyncEntryResponse) {\n                return new Date(item.lastModifiedTime * 1000).toLocaleString();\n            },\n        },\n    ], [handleItemInvoked]);\n\n    const getKey = useCallback((item: AdbSyncEntryResponse, index?: number) => {\n        return item?.name ?? index?.toString() ?? '';\n    }, []);\n\n    const breadcrumb = useMemo((): IBreadcrumbItem[] => {\n        let part = '';\n        const list: IBreadcrumbItem[] = path.split('/').filter(Boolean).map(segment => {\n            part += '/' + segment;\n            return {\n                key: part,\n                text: segment,\n                onClick: (e, item) => {\n                    if (!item) {\n                        return;\n                    }\n                    setPath(item.key);\n                },\n            };\n        });\n        list.unshift({\n            key: '/',\n            text: '/',\n            onClick: () => setPath('/'),\n        });\n        list[list.length - 1].isCurrentItem = true;\n        list[list.length - 1].onClick = undefined;\n        return list;\n    }, [path]);\n\n    const [contextMenuItems, setContextMenuItems] = useState<IContextualMenuItem[]>([]);\n    const [contextMenuTarget, setContextMenuTarget] = useState<MouseEvent>();\n    const showContextMenu = useCallback((\n        item?: AdbSyncEntryResponse,\n        index?: number,\n        e?: Event\n    ) => {\n        if (!item) {\n            return false;\n        }\n\n        let contextMenuItems: IContextualMenuItem[] = [];\n\n        if (item.type === LinuxFileType.File) {\n            contextMenuItems.push({\n                key: 'download',\n                text: 'Download',\n                onClick() {\n                    (async () => {\n                        const sync = await device!.sync();\n                        try {\n                            const itemPath = combinePath(path, item.name);\n                            const readableStream = createReadableStreamFromBufferIterator(sync.receive(itemPath));\n\n                            const writeableStream = StreamSaver.createWriteStream(item.name, {\n                                size: item.size,\n                            });\n                            await readableStream.pipeTo(writeableStream);\n                        } finally {\n                            sync.dispose();\n                        }\n                    })();\n                    return false;\n                },\n            });\n        }\n\n        if (!contextMenuItems.length) {\n            return false;\n        }\n\n        setContextMenuItems(contextMenuItems);\n        setContextMenuTarget(e as MouseEvent);\n        return false;\n    }, [path, device]);\n    const hideContextMenu = useConstCallback(() => {\n        setContextMenuTarget(undefined);\n    });\n\n    if (!cached) {\n        return null;\n    }\n\n    return (\n        <Stack\n            verticalFill\n            styles={{ root: { overflow: 'auto' } }}\n            tokens={{ childrenGap: 8, padding: 8 }}\n        >\n            {device && (\n                <StackItem >\n                    <Breadcrumb items={breadcrumb} />\n                </StackItem>\n            )}\n            <StackItem grow styles={{ root: { minHeight: 0 } }}>\n                <ShimmeredDetailsList\n                    items={items}\n                    columns={columns}\n                    getKey={getKey}\n                    setKey={path}\n                    layoutMode={DetailsListLayoutMode.justified}\n                    enableShimmer={loading}\n                    onItemInvoked={handleItemInvoked}\n                    onItemContextMenu={showContextMenu}\n                    onRenderDetailsHeader={renderDetailsHeader}\n                    usePageCache\n                />\n            </StackItem>\n            {previewUrl && (\n                <Layer>\n                    <Overlay onClick={hidePreview}>\n                        <div style={{ width: '100%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                            <img src={previewUrl} style={{ maxWidth: '100%', maxHeight: '100%' }} />\n                        </div>\n                    </Overlay>\n                </Layer>\n            )}\n\n            <ContextualMenu\n                items={contextMenuItems}\n                hidden={!contextMenuTarget}\n                directionalHint={DirectionalHint.bottomLeftEdge}\n                target={contextMenuTarget}\n                onDismiss={hideContextMenu}\n            />\n        </Stack>\n    );\n});\n","import { Label, Link, MessageBar, Nav, PrimaryButton, Separator, Stack, StackItem, Text, TextField } from '@fluentui/react';\nimport { initializeIcons } from '@uifabric/icons';\nimport { useId } from '@uifabric/react-hooks';\nimport { Adb } from '@yume-chan/adb';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport Connect from './connect';\nimport './index.css';\nimport Shell from './shell';\nimport Sync from './sync';\n\ninitializeIcons();\n\nfunction App(): JSX.Element | null {\n    const location = useLocation();\n\n    const [device, setDevice] = useState<Adb | undefined>();\n\n    const [tcpPort, setTcpAddresses] = useState<string[] | undefined>();\n    useEffect(() => {\n        if (!device) {\n            setTcpAddresses(undefined);\n        }\n    }, [device]);\n    const queryTcpPort = useCallback(async () => {\n        if (!device) {\n            return;\n        }\n\n        const result = await device.getDaemonTcpAddresses();\n        setTcpAddresses(result);\n    }, [device]);\n\n    const [tcpPortValue, setTcpPortValue] = useState('5555');\n    const tcpPortInputId = useId('tcpPort');\n    const enableTcp = useCallback(async () => {\n        if (!device) {\n            return;\n        }\n\n        const result = await device.setDaemonTcpPort(Number.parseInt(tcpPortValue, 10));\n        console.log(result);\n    }, [device, tcpPortValue]);\n\n    const disableTcp = useCallback(async () => {\n        if (!device) {\n            return;\n        }\n\n        const result = await device.disableDaemonTcp();\n        console.log(result);\n    }, [device]);\n\n    return (\n        <Stack verticalFill>\n            <StackItem tokens={{ padding: 8 }}>\n                <Text variant=\"xxLarge\">WebADB Demo</Text>\n            </StackItem>\n            <StackItem>\n                <Connect device={device} onDeviceChange={setDevice} />\n            </StackItem>\n            <StackItem>\n                <Separator />\n            </StackItem>\n            <StackItem grow styles={{ root: { minHeight: 0 } }}>\n                <Stack horizontal verticalFill tokens={{ childrenGap: 8 }}>\n                    <StackItem>\n                        <Nav\n                            styles={{ root: { width: 250 } }}\n                            groups={[{\n                                links: [\n                                    { key: '/intro', name: 'Introduction', url: '#/intro' },\n                                    { key: '/device-info', name: 'Device Info', url: '#/device-info' },\n                                    { key: '/adb-over-wifi', name: 'ADB over WiFi', url: '#/adb-over-wifi' },\n                                    { key: '/shell', name: 'Interactive Shell', url: '#/shell' },\n                                    { key: '/sync', name: 'File Manager', url: '#/sync' },\n                                ]\n                            }]}\n                            selectedKey={location.pathname}\n                        />\n                    </StackItem>\n                    <StackItem grow styles={{ root: { minHeight: 0, overflow: 'hidden' } }}>\n                        <Switch>\n                            <Route path=\"/intro\">\n                                <Stack\n                                    verticalFill\n                                    styles={{ root: { overflow: 'auto' } }}\n                                    tokens={{ childrenGap: 8, padding: 8 }}\n                                >\n                                    <Text block>\n                                        This demo can connect to your Android devices using the{' '}\n                                        <Link href=\"https://developer.mozilla.org/en-US/docs/Web/API/USB\" target=\"_blank\">WebUSB</Link>{' '}\n                                        API.\n                                    </Text>\n                                    <Text block>\n                                        Before start, please make sure your adb server is not running (`adb kill-server`), as there can be only one connection to your device at same time.\n                                    </Text>\n                                </Stack>\n                            </Route>\n                            <Route path='/device-info'>\n                                <Stack\n                                    verticalFill\n                                    styles={{ root: { overflow: 'auto' } }}\n                                    tokens={{ childrenGap: 8, padding: 8 }}\n                                >\n                                    <StackItem>\n                                        Product: {device?.product}<br />\n                                        Model: {device?.model}<br />\n                                        Device: {device?.device}<br />\n                                        Features: {device?.features?.join(',')}<br />\n                                    </StackItem>\n                                </Stack>\n                            </Route>\n                            <Route path=\"/adb-over-wifi\">\n                                <Stack\n                                    verticalFill\n                                    styles={{ root: { overflow: 'auto' } }}\n                                    tokens={{ childrenGap: 8, padding: 8 }}\n                                >\n                                    <StackItem>\n                                        <MessageBar >\n                                            <Text>Although WebADB can enable ADB over WiFi for you, it can't connect to your device wirelessly.</Text>\n                                        </MessageBar>\n                                    </StackItem>\n                                    <StackItem>\n                                        <MessageBar >\n                                            <Text>Your device will disconnect after changing ADB over WiFi config.</Text>\n                                        </MessageBar>\n                                    </StackItem>\n                                    <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\n                                        <StackItem>\n                                            <PrimaryButton text=\"Update Status\" disabled={!device} onClick={queryTcpPort} />\n                                        </StackItem>\n                                        <StackItem>\n                                            {tcpPort !== undefined &&\n                                                (tcpPort.length !== 0\n                                                    ? `Enabled at ${tcpPort.join(', ')}`\n                                                    : 'Disabled')}\n                                        </StackItem>\n                                    </Stack>\n                                    <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\n                                        <StackItem>\n                                            <Label htmlFor={tcpPortInputId}>Port: </Label>\n                                        </StackItem>\n                                        <StackItem>\n                                            <TextField\n                                                id={tcpPortInputId}\n                                                width={300}\n                                                disabled={!device}\n                                                value={tcpPortValue}\n                                                onChange={(e, value) => setTcpPortValue(value!)}\n                                            />\n                                        </StackItem>\n                                        <StackItem>\n                                            <PrimaryButton\n                                                text=\"Enable\"\n                                                disabled={!device}\n                                                onClick={enableTcp}\n                                            />\n                                        </StackItem>\n                                    </Stack>\n                                    <StackItem>\n                                        <PrimaryButton\n                                            text=\"Disable\"\n                                            disabled={!device || tcpPort === undefined || tcpPort.length === 0}\n                                            onClick={disableTcp}\n                                        />\n                                    </StackItem>\n                                </Stack>\n                            </Route>\n\n                            <Route path=\"/shell\" />\n                            <Route path=\"/sync\" />\n\n                            <Redirect to=\"/intro\" />\n                        </Switch>\n                        <Route path=\"/shell\" >\n                            {({ match }) => (\n                                <Stack\n                                    verticalFill\n                                    styles={{ root: { overflow: 'auto', display: match ? 'flex' : 'none' } }}\n                                    tokens={{ childrenGap: 8, padding: 8 }}\n                                >\n                                    <StackItem grow styles={{ root: { minHeight: 0 } }}>\n                                        <Shell device={device} visible={!!match} />\n                                    </StackItem>\n                                </Stack>\n                            )}\n                        </Route>\n                        <Route path=\"/sync\" >\n                            {({ match }) => (\n                                <Stack\n                                    verticalFill\n                                    styles={{ root: { overflow: 'auto', display: match ? 'flex' : 'none' } }}\n                                    tokens={{ childrenGap: 8, padding: 8 }}\n                                >\n                                    <StackItem grow styles={{ root: { minHeight: 0 } }}>\n                                        <Sync device={device} visible={!!match} />\n                                    </StackItem>\n                                </Stack>\n                            )}\n                        </Route>\n                    </StackItem>\n                </Stack>\n            </StackItem>\n        </Stack>\n    );\n}\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('container')\n);\n\n// (new WebAdb({} as any) as any).getPublicKey();\n\n// document.getElementById('start')!.onclick = async () => {\n//     const transportation = await WebUsbTransportation.pickDevice();\n//     const device = new WebAdb(transportation);\n\n//     const textEncoder = new TextEncoder();\n\n//     const output = await device.shell('echo', '1');\n//     console.log(output);\n\n//     const shell = await device.shell();\n\n//     const terminal = new Terminal({\n//         scrollback: 9001,\n//     });\n\n//     const searchAddon = new SearchAddon();\n//     terminal.loadAddon(searchAddon);\n\n//     const keyword = document.getElementById('search-keyword')! as HTMLInputElement;\n//     keyword.addEventListener('input', () => {\n//         searchAddon.findNext(keyword.value, { incremental: true });\n//     });\n\n//     const next = document.getElementById('search-next')!;\n//     next.addEventListener('click', () => {\n//         searchAddon.findNext(keyword.value);\n//     });\n\n//     const prev = document.getElementById('search-prev')!;\n//     prev.addEventListener('click', () => {\n//         searchAddon.findPrevious(keyword.value);\n//     });\n\n//     terminal.open(document.getElementById('terminal')!);\n//     terminal.onData(data => {\n//         const { buffer } = textEncoder.encode(data);\n//         shell.write(buffer);\n//     });\n//     shell.onData(data => {\n//         terminal.write(new Uint8Array(data));\n//     });\n// };\n"],"sourceRoot":""}