{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../event/src/event-emitter.ts","webpack:///../event/src/async-event-emitter.ts","webpack:///../event/src/disposable.ts","webpack:///../adb/src/crypto.ts","webpack:///../adb/src/packet.ts","webpack:///../adb/src/utils/auto-reset-event.ts","webpack:///../adb/src/utils/base64.ts","webpack:///../adb/src/utils/event-iterator.ts","webpack:///../adb/src/auth.ts","webpack:///../adb/src/buffered-stream.ts","webpack:///../adb/src/stream.ts","webpack:///../adb/src/sync.ts","webpack:///../adb/src/adb.ts","webpack:///../adb-webusb/src/index.ts","webpack:///./src/with-display-name.ts","webpack:///./src/connect.tsx","webpack:///./src/router.tsx","webpack:///./src/routes/file-manager.tsx","webpack:///./src/resize-observer.tsx","webpack:///./src/routes/shell.tsx","webpack:///./src/routes/tcp-ip.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","EventEmitter","listeners","this","event","listener","thisArg","args","info","remove","index","indexOf","dispose","e","AutoDisposable","disposables","disposable","DisposableList","addDisposable","BigInt0","BigInt","BigInt1","BigInt2","BigInt2To64","getBig","buffer","offset","byteLength","view","DataView","getBigUint64","setBigLE","setBigUint64","parsePrivateKey","calculatePublicKey","privateKey","publicKey","ArrayBuffer","publicKeyView","setUint32","n0inv","a","Number","isNaN","NaN","b","x","y","Math","floor","modInverse","asUintN","Sha1DigestInfo","sign","padded","Uint8Array","fillLength","set","signature","base","exponent","modulus","powMod","uint64Array","setBig","Assert","AdbCommand","command","Error","magic","expected","getUint32","actual","getInt32","AdbPacket","backend","arg0","arg1","payload","payloadString","read","decodeUtf8","payloadLength","send","_payloadLength","_payload","undefined","_payloadString","encodeUtf8","write","initialSet","list","blocking","Promise","resolve","resolver","promise","pop","item","reject","ranges","chars","addRange","start","end","startCharCode","charCodeAt","endCharCode","String","fromCharCode","toValue","char","charCode","range","encodeBase64","array","remainder","z","sort","pullQueue","pushQueue","ended","pendingLowWaterEvent","lowWaterEvent","EventIteratorController","state","maxConsumerCount","Infinity","highWaterMark","lowWaterMark","done","cleanup","initializer","asyncIterator","controller","fire","return","AdbAuthType","AdbDefaultAuthenticators","iteratorDone","iterator","iterateKeys","packet","Token","next","Auth","Signature","generateKey","PublicKey","authenticators","super","map","Constructor","tryAuth","stream","extraBuffers","localId","remoteId","readIterator","readBuffer","output","close","resetEvent","add","onData","wait","onClose","onLowWater","notify","buffers","dispatcher","writeLock","dataEvent","closeEvent","sendPacket","Write","Close","initializers","streams","Map","onPacketEvent","onPacket","onReceiveErrorEvent","onReceiveError","_running","receiveLoop","service","Open","AdbStream","packetOrCommand","arguments","values","clear","parse","handled","OK","has","ack","delete","AdbSyncRequestId","AdbSyncResponseId","LinuxFileType","AdbPropKey","AdbSyncRequestBase","id","AdbSyncStringRequest","valueBuffer","idBuffer","AdbSyncEntryResponse","size","lastModifiedTime","Entry","type","logicalSize","File","nameLength","AdbSyncDataResponse","Data","AdbSyncDoneResponse","Done","async","parseResponse","sendLock","path","List","response","results","entry","iterate","Receive","request","toBuffer","_connected","packetDispatcher","onDisconnected","_product","_model","_device","_features","features","join","authHandler","disposableList","Connect","parseBanner","authPacket","tryNextAuth","banner","pieces","split","props","prop","keyValue","Product","Model","Device","Features","createStreamAndReadAll","createStream","propAddr","shell","trim","port","readAll","WebUsbDeviceFilter","classCode","subclassCode","protocolCode","Utf8Encoder","TextEncoder","Utf8Decoder","TextDecoder","device","inEndPointNumber","outEndPointNumber","onDisconnectedEvent","_inEndpointNumber","_outEndpointNumber","open","configuration","configurations","interface_","interfaces","alternate","alternates","interfaceSubclass","interfaceClass","inEndpointNumber","outEndpointNumber","configurationValue","selectConfiguration","claimed","claimInterface","interfaceNumber","alternateSetting","selectAlternateInterface","endpoint","endpoints","direction","endpointNumber","navigator","usb","requestDevice","filters","fromDevice","productName","localStorage","getItem","input","padding","sIndex","dIndex","decodeBase64","cryptoKey","crypto","subtle","modulusLength","publicExponent","hash","exportKey","setItem","encode","decode","transferOut","transferIn","status","clearHalt","withDisplayName","Component","displayName","onDeviceChange","connecting","setConnecting","errorDialogVisible","setTrue","showErrorDialog","setFalse","hideErrorDialog","useBoolean","errorMessage","setErrorMessage","connect","pickDevice","message","disconnect","Stack","horizontal","verticalAlign","tokens","childrenGap","StackItem","PrimaryButton","text","onClick","DefaultButton","Dialog","hidden","dialogContentProps","title","subText","ProgressIndicator","normal","DialogFooter","RouteStackProps","verticalFill","className","slideUpIn10","styles","root","overflow","CacheRoute","match","everMatched","current","stackProps","display","children","CacheSwitch","location","element","computedMatch","contextMatch","cached","Children","forEach","child","isValidElement","isCacheRoute","from","pathname","cloneElement","initializeFileTypeIcons","mitm","classNames","cursor","textDecoration","units","extensionName","fileName","lastIndexOf","renderDetailsHeader","defaultRender","paddingTop","combinePath","segments","reduce","endsWith","delay","time","setTimeout","createReadableStreamFromBufferIterator","ReadableStream","desiredSize","written","enqueue","setPath","pathRef","breadcrumbItems","part","filter","Boolean","segment","unshift","isCurrentItem","items","setItems","loading","setLoading","listRef","sync","intervalId","setInterval","lastBreak","Date","now","scrollToIndex","clearInterval","sortedList","setSortedList","sortKey","setSortKey","sortDescending","setSortDescendent","aIsFile","bIsFile","aSortKey","bSortKey","columns","iconName","isIconOnly","minWidth","maxWidth","isCollapsible","Link","Icon","getFileTypeIconProps","FileIconType","linkedFolder","Directory","folder","extension","isRowHeader","onRender","toString","toLocaleString","maximumFractionDigits","formatSize","onColumnClick","column","isSorted","isSortedDescending","previewUrl","setPreviewUrl","previewImage","readableStream","receive","Response","blob","url","URL","createObjectURL","hidePreview","handleItemInvoked","selection","useConst","Selection","contextMenuItems","setContextMenuItems","contextMenuTarget","setContextMenuTarget","showContextMenu","selectedItems","getSelection","itemPath","writeableStream","createWriteStream","pipeTo","hideContextMenu","useConstCallback","MarqueeSelection","Breadcrumb","grow","minHeight","ShimmeredDetailsList","componentRef","setKey","layoutMode","justified","enableShimmer","onItemInvoked","onItemContextMenu","onRenderDetailsHeader","usePageCache","Layer","Overlay","style","width","height","alignItems","justifyContent","src","maxHeight","ContextualMenu","directionalHint","DirectionalHint","bottomLeftEdge","target","onDismiss","iframeStyle","position","top","left","visibility","onResize","rest","onResizeRef","handleResize","handleIframeRef","contentWindow","addEventListener","containerStyle","useMemo","ref","findKeyword","setFindKeyword","findAddonRef","handleFindKeywordChange","newValue","findNext","incremental","findPrevious","terminal","setTerminal","fitAddonRef","handleContainerRef","scrollback","findAddon","loadAddon","fitAddon","fit","textEncoder","reset","SearchBox","placeholder","onChange","onSearch","IconButton","disabled","iconProps","tcpPort","setTcpAddresses","queryTcpAddress","getDaemonTcpAddresses","tcpPortValue","setTcpPortValue","tcpPortInputId","useId","enableTcp","setDaemonTcpPort","parseInt","console","log","disableTcp","disableDaemonTcp","MessageBar","Text","Label","htmlFor","TextField","render","setDevice","routes","exact","block","href","fontWeight","product","model","variant","Separator","Nav","groups","links","route","selectedKey","to","document","getElementById"],"mappings":"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","file":"index.30204015cbe3cd1a4250.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"2YZa\",1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Disposable } from './disposable';\nimport { EventListener, RemoveEventListener } from './event';\n\ninterface EventListenerInfo<TEvent, TResult = unknown> {\n    listener: EventListener<TEvent, any, any, TResult>;\n\n    thisArg: unknown;\n\n    args: unknown[];\n}\n\nexport class EventEmitter<TEvent, TResult = unknown> implements Disposable {\n    protected listeners: EventListenerInfo<TEvent, TResult>[] = [];\n\n    public constructor() {\n        this.event = this.event.bind(this);\n    }\n\n    public event(\n        listener: EventListener<TEvent, unknown, [], TResult>\n    ): RemoveEventListener;\n    public event<TThis, TArgs extends unknown[]>(\n        listener: EventListener<TEvent, TThis, TArgs, TResult>,\n        thisArg: TThis,\n        ...args: TArgs\n    ): RemoveEventListener;\n    public event<TThis, TArgs extends unknown[]>(\n        listener: EventListener<TEvent, TThis, TArgs, TResult>,\n        thisArg?: TThis,\n        ...args: TArgs\n    ): RemoveEventListener {\n        const info: EventListenerInfo<TEvent, TResult> = {\n            listener,\n            thisArg,\n            args,\n        };\n        this.listeners.push(info);\n\n        const remove: RemoveEventListener = () => {\n            const index = this.listeners.indexOf(info);\n            if (index > 0) {\n                this.listeners.splice(index, 1);\n            }\n        };\n        remove.dispose = remove;\n        return remove;\n    }\n\n    public fire(e: TEvent) {\n        for (const info of this.listeners.slice()) {\n            info.listener.apply(info.thisArg, [e, ...info.args]);\n        }\n    }\n\n    public dispose() {\n        this.listeners.length = 0;\n    }\n}\n","import { Event } from './event';\nimport { EventEmitter } from './event-emitter';\n\nexport type AsyncEventResult = void | Promise<void>;\n\nexport type AsyncEvent<TEvent> = Event<TEvent, AsyncEventResult>;\n\nexport class AsyncEventEmitter<TEvent> extends EventEmitter<TEvent, AsyncEventResult> {\n    public async fire(e: TEvent) {\n        for (const info of this.listeners) {\n            await info.listener.apply(info.thisArg, [e, ...info.args]);\n        }\n    }\n}\n","export interface Disposable {\n    dispose(): void;\n}\n\nexport class AutoDisposable implements Disposable {\n    private disposables: Disposable[] = [];\n\n    protected addDisposable<T extends Disposable>(disposable: T): T {\n        this.disposables.push(disposable);\n        return disposable;\n    }\n\n    public dispose() {\n        for (const disposable of this.disposables) {\n            disposable.dispose();\n        }\n\n        this.disposables = [];\n    }\n}\n\nexport class DisposableList extends AutoDisposable {\n    public add<T extends Disposable>(disposable: T): T {\n        return this.addDisposable(disposable);\n    }\n}\n","const BigInt0 = BigInt(0);\nconst BigInt1 = BigInt(1);\nconst BigInt2 = BigInt(2);\n\nconst BigInt2To64 = BigInt2 ** BigInt(64);\n\nexport function getBig(\n    buffer: ArrayBuffer,\n    offset = 0,\n    length = buffer.byteLength - offset\n): bigint {\n    const view = new DataView(buffer);\n\n    let result = BigInt0;\n\n    // Now `length` must be a multiplication of 8\n    // Support for arbitrary length can be easily added\n\n    for (let i = offset; i < offset + length; i += 8) {\n        result *= BigInt2To64;\n        const value = view.getBigUint64(i, false);\n        result += value;\n    }\n\n    return result;\n}\n\nexport function setBig(buffer: ArrayBuffer, value: bigint, offset: number = 0) {\n    const uint64Array: bigint[] = [];\n    while (value > BigInt0) {\n        uint64Array.push(BigInt.asUintN(64, value));\n        value /= BigInt2To64;\n    }\n\n    const view = new DataView(buffer);\n    for (let i = uint64Array.length - 1; i >= 0; i -= 1) {\n        view.setBigUint64(offset, uint64Array[i], false);\n        offset += 8;\n    }\n}\n\nexport function setBigLE(buffer: ArrayBuffer, value: bigint, offset = 0) {\n    const view = new DataView(buffer);\n    while (value > BigInt0) {\n        view.setBigUint64(offset, value, true);\n        offset += 8;\n        value /= BigInt2To64;\n    }\n}\n\n// These values are correct only if\n// modulus length is 2048 and\n// public exponent (e) is 65537\n// Anyway, that's how this library generates keys\n\n// To support other parameters,\n// a proper ASN.1 parser can be used\n\n// References:\n//\n//   https://tools.ietf.org/html/rfc8017#appendix-A.1.2\n//   PKCS #1: RSA Cryptography Specifications Version 2.2\n//     A.1.2.  RSA Private Key Syntax\n//\n//   https://lapo.it/asn1js/\n//   https://github.com/lapo-luchini/asn1js\n//   ASN.1 JavaScript decoder\n//\n//   https://www.itu.int/rec/T-REC-X.690-201508-I/en\n//   X.690: Specification of Distinguished Encoding Rules (DER)\n\nconst RsaPrivateKeyNOffset = 38;\nconst RsaPrivateKeyNLength = 2048 / 8;\nconst RsaPrivateKeyDOffset = 303;\nconst RsaPrivateKeyDLength = 2048 / 8;\n\nexport function parsePrivateKey(key: ArrayBuffer): [n: bigint, d: bigint] {\n    let n = getBig(key, RsaPrivateKeyNOffset, RsaPrivateKeyNLength);\n    let d = getBig(key, RsaPrivateKeyDOffset, RsaPrivateKeyDLength);\n\n    return [n, d];\n}\n\n// Taken from https://stackoverflow.com/a/51562038\n// I can't understand, but it does work\n// Only used with numbers less than 2^32 so doesn't need BigInt\nexport function modInverse(a: number, m: number) {\n    // validate inputs\n    [a, m] = [Number(a), Number(m)];\n    if (Number.isNaN(a) || Number.isNaN(m)) {\n        return NaN; // invalid input\n    }\n    a = (a % m + m) % m;\n    if (!a || m < 2) {\n        return NaN; // invalid input\n    }\n    // find the gcd\n    const s = [];\n    let b = m;\n    while (b) {\n        [a, b] = [b, a % b];\n        s.push({ a, b });\n    }\n    if (a !== 1) {\n        return NaN; // inverse does not exists\n    }\n    // find the inverse\n    let x = 1;\n    let y = 0;\n    for (let i = s.length - 2; i >= 0; --i) {\n        [x, y] = [y, x - y * Math.floor(s[i].a / s[i].b)];\n    }\n    return (y % m + m) % m;\n}\n\nexport function calculatePublicKey(privateKey: ArrayBuffer): ArrayBuffer {\n    // Android has its own public key generation algorithm\n    // See https://github.com/aosp-mirror/platform_system_core/blob/e5c9bbd45381d7bd72fef232d1c6668946253ac8/libcrypto_utils/android_pubkey.cpp#L111\n\n    // The public key is an array of\n    //\n    // [\n    //   modulusLengthInWords, // 32-bit integer, a \"word\" is 32-bit so it must be 2048 / 8 / 4\n    //                         // Actually the comment in Android source code was wrong\n    //   n0inv,                // 32-bit integer, the modular inverse of (lower 32 bits of) n\n    //   modulus,              // n\n    //   rr,                   // Montgomery parameter R^2\n    //   exponent,             // 32-bit integer, must be 65537\n    // ]\n    //\n    // (All in little endian)\n    // See https://github.com/aosp-mirror/platform_system_core/blob/e5c9bbd45381d7bd72fef232d1c6668946253ac8/libcrypto_utils/android_pubkey.cpp#L38\n\n    // extract `n` from private key\n    const [n] = parsePrivateKey(privateKey);\n\n    const publicKey = new ArrayBuffer(4 + 4 + 2048 / 8 + 2048 / 8 + 4);\n    const publicKeyView = new DataView(publicKey);\n\n    // modulusLengthInWords\n    publicKeyView.setUint32(0, 2048 / 8 / 4, true);\n\n    // Calculate `n0inv`\n    // Don't know why need to multiple -1\n    // Didn't exist in Android codebase\n    const n0inv = modInverse(Number(BigInt.asUintN(32, n) * BigInt(-1)), 2 ** 32);\n    publicKeyView.setUint32(4, n0inv, true);\n\n    // Write n\n    setBigLE(publicKey, n, 8);\n\n    // Calculate rr = (2^(rsa_size)) ^ 2 mod n\n    let rr = BigInt(2) ** BigInt(4096) % n;\n    setBigLE(publicKey, rr, 8 + 256);\n\n    // exponent\n    publicKeyView.setUint32(8 + 256 + 256, 65537, true);\n\n    return publicKey;\n}\n\n// Modular exponentiation\n// See https://en.wikipedia.org/wiki/Modular_exponentiation#Implementation_in_Lua\nexport function powMod(base: bigint, exponent: bigint, modulus: bigint): bigint {\n    if (modulus === BigInt1) {\n        return BigInt0;\n    }\n\n    let r = BigInt1;\n    base = base % modulus;\n\n    while (exponent > BigInt0) {\n        if (BigInt.asUintN(1, exponent) === BigInt1) {\n            r = r * base % modulus;\n        }\n\n        exponent >>= BigInt1;\n        base = base ** BigInt2 % modulus;\n    }\n\n    return r;\n}\n\nexport const Sha1DigestLength = 20;\n\nexport const Asn1Sequence = 0x30;\nexport const Asn1OctetString = 0x04;\nexport const Asn1Null = 0x05;\nexport const Asn1Oid = 0x06;\n\n// PKCS#1 SHA-1 hash digest info\nexport const Sha1DigestInfo = [\n    Asn1Sequence, 0x0d + Sha1DigestLength,\n    Asn1Sequence, 0x09,\n    // SHA-1 (1 3 14 3 2 26)\n    Asn1Oid, 0x05, 1 * 40 + 3, 14, 3, 2, 26,\n    Asn1Null, 0x00,\n    Asn1OctetString, Sha1DigestLength\n];\n\n// SubtleCrypto.sign() will hash the given data and sign the hash\n// But we don't need the hashing step\n// (In another word, ADB just requires the client to\n// encrypt the given data with its private key)\n// However SubtileCrypto.encrypt() doesn't accept 'RSASSA-PKCS1-v1_5' algorithm\n// So we need to implement the encryption by ourself\nexport function sign(privateKey: ArrayBuffer, data: ArrayBuffer): ArrayBuffer {\n    const [n, d] = parsePrivateKey(privateKey);\n\n    // PKCS#1 padding\n    const padded = new Uint8Array(256);\n    let index = 0;\n\n    padded[index] = 0;\n    index += 1;\n\n    padded[index] = 1;\n    index += 1;\n\n    const fillLength = padded.length - Sha1DigestInfo.length - data.byteLength - 1;\n    while (index < fillLength) {\n        padded[index] = 0xff;\n        index++;\n    }\n\n    padded[index] = 0;\n    index += 1;\n\n    padded.set(new Uint8Array(Sha1DigestInfo), index);\n    index += Sha1DigestInfo.length;\n\n    padded.set(new Uint8Array(data), index);\n\n    // Encryption\n    // signature = padded ** d % n\n    let signature = powMod(getBig(padded.buffer), d, n);\n\n    // Put into an ArrayBuffer\n    const result = new ArrayBuffer(256);\n    setBig(result, signature);\n\n    return result;\n}\n","import { AdbBackend } from './backend';\n\nnamespace Assert {\n    export function command(command: string): void {\n        const length = command.length;\n        if (length !== 4) {\n            throw new Error(`AdbPacket: command.length mismatch. Expected 4, but got ${length}`);\n        }\n    }\n\n    export function magic(view: DataView): void {\n        const expected = view.getUint32(0) ^ 0xFFFFFFFF;\n        const actual = view.getInt32(20);\n        if (expected !== actual) {\n            throw new Error(`AdbPacket: magic number mismatch. Expected ${expected}, but got ${actual}`);\n        }\n    }\n}\n\nexport enum AdbCommand {\n    Connect = 'CNXN',\n    Auth = 'AUTH',\n    OK = 'OKAY',\n    Close = 'CLSE',\n    Write = 'WRTE',\n    Open = 'OPEN',\n}\n\nexport class AdbPacket {\n    public static async parse(backend: AdbBackend): Promise<AdbPacket> {\n        let buffer = await backend.read(24);\n        if (buffer.byteLength !== 24) {\n            // Maybe it's a payload from last connection.\n            // Ignore and try again\n            buffer = await backend.read(24);\n        }\n        const view = new DataView(buffer);\n        Assert.magic(view);\n\n        const command = backend.decodeUtf8(buffer.slice(0, 4));\n        const arg0 = view.getUint32(4, true);\n        const arg1 = view.getUint32(8, true);\n        const payloadLength = view.getUint32(12, true);\n\n        let payload: ArrayBuffer | undefined;\n        if (payloadLength !== 0) {\n            payload = await backend.read(payloadLength);\n        }\n\n        return new AdbPacket(backend, command, arg0, arg1, payload);\n    }\n\n    public static send(\n        backend: AdbBackend,\n        command: AdbCommand,\n        arg0: number,\n        arg1: number,\n        payload?: string | ArrayBuffer\n    ): Promise<void> {\n        const packet = new AdbPacket(backend, command, arg0, arg1, payload);\n        return packet.send();\n    }\n\n    private backend: AdbBackend;\n\n    public command: string;\n\n    public arg0: number;\n\n    public arg1: number;\n\n    private _payloadLength!: number;\n    public get payloadLength(): number { return this._payloadLength; }\n\n    private _payload: ArrayBuffer | undefined;\n    public get payload(): ArrayBuffer | undefined { return this._payload; }\n    public set payload(value: ArrayBuffer | undefined) {\n        if (value !== undefined) {\n            this._payloadLength = value.byteLength;\n            this._payload = value;\n        } else {\n            this._payloadLength = 0;\n            this._payload = undefined;\n        }\n\n        this._payloadString = undefined;\n    }\n\n    private _payloadString: string | undefined;\n    public get payloadString(): string | undefined {\n        if (!this._payload) {\n            return undefined;\n        }\n\n        if (!this._payloadString) {\n            this._payloadString = this.backend.decodeUtf8(this._payload);\n        }\n        return this._payloadString;\n    }\n    public set payloadString(value: string | undefined) {\n        if (value !== undefined) {\n            this.payload = this.backend.encodeUtf8(value);\n            this._payloadString = value;\n        } else {\n            this.payload = undefined;\n        }\n    }\n\n    public constructor(\n        backend: AdbBackend,\n        command: string,\n        arg0: number,\n        arg1: number,\n        payload?: string | ArrayBuffer\n    ) {\n        this.backend = backend;\n\n        Assert.command(command);\n        this.command = command;\n\n        this.arg0 = arg0;\n        this.arg1 = arg1;\n\n        if (typeof payload === \"string\") {\n            this.payloadString = payload;\n        } else {\n            this.payload = payload;\n        }\n    }\n\n    public async send(): Promise<void> {\n        const buffer = new ArrayBuffer(24);\n        const array = new Uint8Array(buffer);\n        array.set(new Uint8Array(this.backend.encodeUtf8(this.command)));\n\n        const view = new DataView(buffer);\n        view.setUint32(4, this.arg0, true);\n        view.setUint32(8, this.arg1, true);\n        view.setUint32(12, this.payloadLength, true);\n        view.setUint32(16, /* checksum */ 0, true);\n        view.setUint32(20, /* magic */ view.getUint32(0, true) ^ 0xFFFFFFFF, true);\n\n        await this.backend.write(buffer);\n\n        if (this.payload) {\n            await this.backend.write(this.payload);\n        }\n    }\n}\n","import { PromiseResolver } from '@yume-chan/async-operation-manager';\nimport { Disposable } from '@yume-chan/event';\n\nexport class AutoResetEvent implements Disposable {\n    private readonly list: PromiseResolver<void>[] = [];\n\n    private blocking: boolean;\n\n    public constructor(initialSet = false) {\n        this.blocking = initialSet;\n    }\n\n    public wait(): Promise<void> {\n        if (!this.blocking) {\n            this.blocking = true;\n\n            if (this.list.length === 0) {\n                return Promise.resolve();\n            }\n        }\n\n        const resolver = new PromiseResolver<void>();\n        this.list.push(resolver);\n        return resolver.promise;\n    }\n\n    public notify() {\n        if (this.list.length !== 0) {\n            this.list.pop()!.resolve();\n        } else {\n            this.blocking = false;\n        }\n    }\n\n    public dispose() {\n        for (const item of this.list) {\n            item.reject(new Error('The AutoResetEvent has been disposed'));\n        }\n        this.list.length = 0;\n    }\n}\n","interface Base64CharRange {\n    start: number;\n\n    length: number;\n\n    end: number;\n\n    offset: number;\n}\n\nlet ranges: Base64CharRange[] = [];\nlet chars: string[] = [];\n\nlet offset = 0;\nfunction addRange(start: string, end: string) {\n    const startCharCode = start.charCodeAt(0);\n    const endCharCode = end.charCodeAt(0);\n    const length = endCharCode - startCharCode + 1;\n\n    for (let i = startCharCode; i <= endCharCode; i++) {\n        chars.push(String.fromCharCode(i));\n    }\n\n    ranges.push({\n        start: startCharCode,\n        length: length,\n        end: endCharCode,\n        offset: startCharCode - offset,\n    });\n\n    offset += length;\n}\n\naddRange('A', 'Z');\naddRange('a', 'z');\naddRange('0', '9');\naddRange('+', '+');\naddRange('/', '/');\n\nranges = ranges.sort((a, b) => a.end - b.end);\n\nfunction toValue(char: string): number {\n    const charCode = char.charCodeAt(0);\n\n    let start = 0;\n    let end = ranges.length - 1;\n    let i = end >> 1;\n\n    while (true) {\n        const range = ranges[i];\n        if (charCode < range.start) {\n            end = i - 1;\n        } else if (charCode > range.end) {\n            start = i + 1;\n        } else {\n            return charCode - range.offset;\n        }\n        i = (start + end) >> 1;\n    }\n}\n\nexport function encodeBase64(buffer: ArrayBuffer): string {\n    const array = new Uint8Array(buffer);\n    const length = buffer.byteLength;\n    const remainder = length % 3;\n    let result = '';\n\n    let i = 0;\n    for (; i < length - remainder;) {\n        // aaaaaabb\n        const x = array[i];\n        i += 1;\n        // bbbbcccc\n        const y = array[i];\n        i += 1;\n        // ccdddddd\n        const z = array[i];\n        i += 1;\n\n        result += chars[x >> 2];\n        result += chars[((x & 0b11) << 4) | (y >> 4)];\n        result += chars[((y & 0b1111) << 2) | (z >> 6)];\n        result += chars[z & 0b111111];\n    }\n\n    if (remainder === 1) {\n        // aaaaaabb\n        const x = array[i];\n\n        result += chars[x >> 2];\n        result += chars[((x & 0b11) << 4)];\n        result += '==';\n    } else if (remainder === 2) {\n        // aaaaaabb\n        const x = array[i];\n        i += 1;\n        // bbbbcccc\n        const y = array[i];\n\n        result += chars[x >> 2];\n        result += chars[((x & 0b11) << 4) | (y >> 4)];\n        result += chars[((y & 0b1111) << 2)];\n        result += '=';\n    }\n\n    return result;\n}\n\nexport function decodeBase64(input: string): ArrayBuffer {\n    let padding: number;\n    if (input[input.length - 2] === '=') {\n        padding = 2;\n    } else if (input[input.length - 1] === '=') {\n        padding = 1;\n    } else {\n        padding = 0;\n    }\n\n    const result = new Uint8Array(input.length / 4 * 3 - padding);\n    let sIndex = 0;\n    let dIndex = 0;\n\n    while (sIndex < input.length - (padding !== 0 ? 4 : 0)) {\n        const a = toValue(input[sIndex]);\n        sIndex += 1;\n\n        const b = toValue(input[sIndex]);\n        sIndex += 1;\n\n        const c = toValue(input[sIndex]);\n        sIndex += 1;\n\n        const d = toValue(input[sIndex]);\n        sIndex += 1;\n\n        result[dIndex] = (a << 2) | ((b & 0b11_0000) >> 4);\n        dIndex += 1;\n\n        result[dIndex] = ((b & 0b1111) << 4) | ((c & 0b11_1100) >> 2);\n        dIndex += 1;\n\n        result[dIndex] = ((c & 0b11) << 6) | d;\n        dIndex += 1;\n    }\n\n    if (padding === 1) {\n        const a = toValue(input[sIndex]);\n        sIndex += 1;\n\n        const b = toValue(input[sIndex]);\n        sIndex += 1;\n\n        const c = toValue(input[sIndex]);\n\n        result[dIndex] = (a << 2) | ((b & 0b11_0000) >> 4);\n        dIndex += 1;\n\n        result[dIndex] = ((b & 0b1111) << 4) | ((c & 0b11_1100) >> 2);\n    } else if (padding === 2) {\n        const a = toValue(input[sIndex]);\n        sIndex += 1;\n\n        const b = toValue(input[sIndex]);\n\n        result[dIndex] = (a << 2) | ((b & 0b11_0000) >> 4);\n    }\n\n    return result.buffer;\n}\n","import { PromiseResolver } from '@yume-chan/async-operation-manager';\nimport { EventEmitter } from '@yume-chan/event';\n\nexport type EventIteratorDestroyer<T> = (items: T[]) => void;\n\nexport class EventIteratorState<T> {\n    public pullQueue: PromiseResolver<IteratorResult<T>>[] = [];\n\n    public pushQueue: T[] = [];\n\n    public ended = false;\n\n    public pendingLowWaterEvent = false;\n\n    public lowWaterEvent = new EventEmitter<void>();\n\n    public get onLowWater() { return this.lowWaterEvent.event; }\n\n    public cleanup!: EventIteratorDestroyer<T>;\n}\n\nexport class EventIteratorController<T> {\n    private state: EventIteratorState<T>;\n\n    public maxConsumerCount = Infinity;\n\n    public highWaterMark: number = 10;\n\n    public lowWaterMark: number = 0;\n\n    public get onLowWater() { return this.state.lowWaterEvent.event; }\n\n    public constructor(state: EventIteratorState<T>) {\n        this.state = state;\n    }\n\n    public push(value: T): boolean {\n        if (this.state.pullQueue.length) {\n            this.state.pullQueue.shift()!.resolve({ done: false, value });\n            return true;\n        }\n\n        this.state.pushQueue.push(value);\n        if (this.state.pushQueue.length < this.highWaterMark) {\n            return true;\n        }\n\n        this.state.pendingLowWaterEvent = true;\n        return false;\n    }\n\n    end(): void {\n        this.state.ended = true;\n        while (this.state.pullQueue.length) {\n            this.state.pullQueue.shift()!.resolve({ done: true, value: undefined });\n        }\n        this.state.cleanup(this.state.pushQueue);\n    }\n}\n\nexport interface EventIteratorInitializer<T> {\n    (controller: EventIteratorController<T>): EventIteratorDestroyer<T>;\n}\n\nexport class EventIterable<T> implements AsyncIterable<T> {\n    private initializer: EventIteratorInitializer<T>;\n\n    public constructor(initializer: EventIteratorInitializer<T>) {\n        this.initializer = initializer;\n    }\n\n    public [Symbol.asyncIterator](): AsyncIterator<T> {\n        const state = new EventIteratorState<T>();\n        const controller = new EventIteratorController<T>(state);\n        state.cleanup = this.initializer(controller);\n        return {\n            next() {\n                if (state.pushQueue.length) {\n                    const value = state.pushQueue.shift()!;\n                    if (state.pendingLowWaterEvent &&\n                        state.pushQueue.length <= controller.lowWaterMark) {\n                        state.lowWaterEvent.fire();\n                    }\n                    return Promise.resolve({ done: false, value });\n                }\n\n                if (state.ended) {\n                    return Promise.resolve({ done: true, value: undefined });\n                }\n\n                if (state.pullQueue.length < controller.maxConsumerCount) {\n                    const resolver = new PromiseResolver<IteratorResult<T>>();\n                    state.pullQueue.push(resolver);\n                    return resolver.promise;\n                }\n\n                return Promise.reject(new Error('Max consumer count exceeded'));\n            },\n            return() {\n                controller.end();\n                return Promise.resolve({ done: true, value: undefined });\n            },\n        };\n    }\n}\n","import { AutoDisposable, Disposable } from '@yume-chan/event';\nimport { AdbBackend, AdbKeyIterator } from './backend';\nimport { calculatePublicKey, sign } from './crypto';\nimport { AdbCommand, AdbPacket } from './packet';\nimport { encodeBase64 } from './utils';\n\nexport enum AdbAuthType {\n    Token = 1,\n    Signature = 2,\n    PublicKey = 3,\n}\n\nexport interface AdbAuthenticator extends Disposable {\n    tryAuth(packet: AdbPacket): Promise<AdbPacket | undefined>;\n}\n\nexport interface AdbAuthenticatorConstructor {\n    new(backend: AdbBackend): AdbAuthenticator;\n}\n\nexport class AdbSignatureAuthenticator implements AdbAuthenticator {\n    private readonly backend: AdbBackend;\n\n    private readonly iterator: AdbKeyIterator;\n\n    private iteratorDone = false;\n\n    public constructor(backend: AdbBackend) {\n        this.backend = backend;\n        this.iterator = backend.iterateKeys();\n    }\n\n    public async tryAuth(packet: AdbPacket): Promise<AdbPacket | undefined> {\n        if (packet.arg0 !== AdbAuthType.Token) {\n            return undefined;\n        }\n\n        const next = await this.iterator.next();\n        if (next.done) {\n            this.iteratorDone = true;\n            return undefined;\n        }\n\n        const signature = sign(next.value, packet.payload!);\n        return new AdbPacket(\n            this.backend,\n            AdbCommand.Auth,\n            AdbAuthType.Signature,\n            0,\n            signature\n        );\n    }\n\n    public dispose() {\n        if (!this.iteratorDone) {\n            this.iterator.return?.();\n        }\n    }\n}\n\nexport class AdbPublicKeyAuthenticator implements AdbAuthenticator {\n    private backend: AdbBackend;\n\n    public constructor(backend: AdbBackend) {\n        this.backend = backend;\n    }\n\n    public async tryAuth(): Promise<AdbPacket> {\n        let privateKey: ArrayBuffer;\n\n        const iterator = this.backend.iterateKeys();\n        const next = await iterator.next();\n        if (!next.done) {\n            privateKey = next.value;\n            await iterator.return?.();\n        } else {\n            privateKey = await this.backend.generateKey();\n        }\n\n        const publicKey = calculatePublicKey(privateKey);\n        return new AdbPacket(\n            this.backend,\n            AdbCommand.Auth,\n            AdbAuthType.PublicKey,\n            0,\n            // adbd needs the extra null character\n            encodeBase64(publicKey) + '\\0'\n        );\n    }\n\n    public dispose() {\n        // do nothing\n    }\n}\n\nexport const AdbDefaultAuthenticators: AdbAuthenticatorConstructor[] = [\n    AdbSignatureAuthenticator,\n    AdbPublicKeyAuthenticator\n];\n\nexport class AdbAuthenticationHandler extends AutoDisposable {\n    public readonly authenticators: readonly AdbAuthenticator[];\n\n    private index = 0;\n\n    public constructor(\n        authenticators: readonly AdbAuthenticatorConstructor[],\n        backend: AdbBackend\n    ) {\n        super();\n\n        this.authenticators = authenticators.map(\n            Constructor => this.addDisposable(new Constructor(backend))\n        );\n    }\n\n    public async tryNextAuth(packet: AdbPacket): Promise<AdbPacket> {\n        while (this.index < this.authenticators.length) {\n            const result = await this.authenticators[this.index].tryAuth(packet);\n            if (result) {\n                return result;\n            }\n\n            this.index += 1;\n        }\n\n        throw new Error('Cannot authenticate with device');\n    }\n}\n","import { DisposableList } from '@yume-chan/event';\nimport { AdbStream } from './stream';\nimport { AutoResetEvent, EventIterable } from './utils';\n\nexport class AdbBufferedStream implements AsyncIterable<ArrayBuffer>{\n    private stream: AdbStream;\n\n    public get backend() { return this.stream.backend; }\n\n    public get localId() { return this.stream.localId; }\n\n    public get remoteId() { return this.stream.remoteId; }\n\n    private mode: 'none' | 'read' | 'iterate' = 'read';\n\n    private readBuffer: ArrayBuffer | undefined;\n\n    private readIterator: AsyncIterator<ArrayBuffer> | undefined;\n\n    private extraBuffers: ArrayBuffer[] = [];\n\n    public constructor(stream: AdbStream) {\n        this.stream = stream;\n    }\n\n    public async read(length: number): Promise<ArrayBuffer> {\n        if (this.mode !== 'none' && this.mode !== 'read') {\n            throw new Error(`This BufferedStream is in ${this.mode} mode`);\n        }\n\n        if (!this.readIterator) {\n            this.readIterator = this[Symbol.asyncIterator]();\n        }\n\n        this.mode = 'read';\n\n        let array: Uint8Array;\n        let index: number;\n        if (this.readBuffer) {\n            const buffer = this.readBuffer;\n            if (buffer.byteLength > length) {\n                this.readBuffer = buffer.slice(length);\n                return buffer.slice(0, length);\n            }\n\n            array = new Uint8Array(length);\n            array.set(new Uint8Array(buffer));\n            index = buffer.byteLength;\n            this.readBuffer = undefined;\n        } else {\n            array = new Uint8Array(length);\n            index = 0;\n        }\n\n        while (index < length) {\n            const result = await this.readIterator.next();\n            if (result.done) {\n                throw new Error('This BufferedStream has been closed');\n            }\n\n            const buffer = result.value;\n            if (buffer.byteLength > length - index) {\n                array.set(new Uint8Array(buffer.slice(0, length)), index);\n                this.readBuffer = buffer.slice(length);\n                return array.buffer;\n            }\n\n            array.set(new Uint8Array(buffer), index);\n            index += buffer.byteLength;\n        }\n\n        return array.buffer;\n    }\n\n    public async readAll(): Promise<string> {\n        let output = '';\n        for await (const buffer of this) {\n            output += this.stream.backend.decodeUtf8(buffer);\n        }\n        return output;\n    }\n\n    public write(data: ArrayBuffer): Promise<void> {\n        return this.stream.write(data);\n    }\n\n    public close() {\n        return this.stream.close();\n    }\n\n    public [Symbol.asyncIterator]() {\n        if (this.readIterator) {\n            this.readIterator.return?.();\n            this.readIterator = undefined;\n        }\n\n        return new EventIterable<ArrayBuffer>(controller => {\n            controller.maxConsumerCount = 1;\n\n            for (const item of this.extraBuffers) {\n                controller.push(item);\n            }\n            this.extraBuffers.length = 0;\n\n            const disposable = new DisposableList();\n            const resetEvent = new AutoResetEvent(true);\n            disposable.add(this.stream.onData(buffer => {\n                if (!controller.push(buffer)) {\n                    return resetEvent.wait();\n                }\n                return;\n            }));\n            disposable.add(this.stream.onClose(() => {\n                controller.end();\n            }));\n            disposable.add(controller.onLowWater(() => {\n                resetEvent.notify();\n            }));\n\n            this.mode = 'iterate';\n\n            return (buffers) => {\n                this.extraBuffers = buffers;\n                this.mode = 'none';\n                disposable.dispose();\n            };\n        })[Symbol.asyncIterator]();\n    }\n}\n","import AsyncOperationManager from '@yume-chan/async-operation-manager';\nimport { AsyncEventEmitter, AutoDisposable, EventEmitter } from '@yume-chan/event';\nimport { AdbBackend } from './backend';\nimport { AdbCommand, AdbPacket } from './packet';\nimport { AutoResetEvent } from './utils';\n\nexport class AdbStreamController extends AutoDisposable {\n    private readonly writeLock = this.addDisposable(new AutoResetEvent());\n\n    public readonly dispatcher: AdbPacketDispatcher;\n\n    public get backend() { return this.dispatcher.backend; }\n\n    public readonly localId: number;\n\n    public readonly remoteId: number;\n\n    public readonly dataEvent = this.addDisposable(new AsyncEventEmitter<ArrayBuffer>());\n\n    private readonly closeEvent = this.addDisposable(new EventEmitter<void>());\n\n    public get onClose() { return this.closeEvent.event; }\n\n    public constructor(localId: number, remoteId: number, dispatcher: AdbPacketDispatcher) {\n        super();\n\n        this.localId = localId;\n        this.remoteId = remoteId;\n        this.dispatcher = dispatcher;\n    }\n\n    public async write(data: ArrayBuffer): Promise<void> {\n        await this.writeLock.wait();\n        await this.dispatcher.sendPacket(AdbCommand.Write, this.localId, this.remoteId, data);\n    }\n\n    public ack() {\n        this.writeLock.notify();\n    }\n\n    public close() {\n        return this.dispatcher.sendPacket(AdbCommand.Close, this.localId, this.remoteId);\n    }\n\n    public dispose() {\n        this.closeEvent.fire();\n        super.dispose();\n    }\n}\n\nexport interface AdbPacketArrivedEventArgs {\n    handled: boolean;\n\n    packet: AdbPacket;\n}\n\nexport class AdbPacketDispatcher extends AutoDisposable {\n    public readonly backend: AdbBackend;\n\n    // ADB requires stream id to start from 1\n    // (0 means open failed)\n    private readonly initializers = new AsyncOperationManager(1);\n    private readonly streams = new Map<number, AdbStreamController>();\n\n    private readonly onPacketEvent = this.addDisposable(new EventEmitter<AdbPacketArrivedEventArgs>());\n    public readonly onPacket = this.onPacketEvent.event;\n\n    private readonly onReceiveErrorEvent = this.addDisposable(new EventEmitter<Error>());\n    public readonly onReceiveError = this.onReceiveErrorEvent.event;\n\n    private _running = true;\n    public get running() { return this._running; }\n\n    public constructor(backend: AdbBackend) {\n        super();\n\n        this.backend = backend;\n        this.receiveLoop();\n    }\n\n    public async createStream(service: string): Promise<AdbStream> {\n        const [localId, initializer] = this.initializers.add<number>();\n        await this.sendPacket(AdbCommand.Open, localId, 0, service);\n\n        const remoteId = await initializer;\n        const controller = new AdbStreamController(localId, remoteId, this);\n        this.streams.set(controller.localId, controller);\n\n        return new AdbStream(controller);\n    }\n\n    public sendPacket(packet: AdbPacket): Promise<void>;\n    public sendPacket(\n        command: AdbCommand,\n        arg0: number,\n        arg1: number,\n        payload?: string | ArrayBuffer\n    ): Promise<void>;\n    public sendPacket(\n        packetOrCommand: AdbPacket | AdbCommand,\n        arg0?: number,\n        arg1?: number,\n        payload?: string | ArrayBuffer\n    ): Promise<void> {\n        if (arguments.length === 1) {\n            return (packetOrCommand as AdbPacket).send();\n        } else {\n            return AdbPacket.send(\n                this.backend,\n                packetOrCommand as AdbCommand,\n                arg0 as number,\n                arg1 as number,\n                payload\n            );\n        }\n    }\n\n    public dispose() {\n        this._running = false;\n\n        for (const stream of this.streams.values()) {\n            stream.dispose();\n        }\n        this.streams.clear();\n\n        super.dispose();\n    }\n\n    private async receiveLoop() {\n        while (this._running) {\n            try {\n                const packet = await AdbPacket.parse(this.backend);\n                let handled = false;\n                switch (packet.command) {\n                    case AdbCommand.OK:\n                        handled = true;\n                        // OKAY has two meanings\n                        if (this.initializers.resolve(packet.arg1, packet.arg0)) {\n                            // 1. The device has created the Stream\n                        } else if (this.streams.has(packet.arg1)) {\n                            // 2. The device has received last WRTE to the Stream\n                            this.streams.get(packet.arg1)!.ack();\n                        } else {\n                            // Last connection sent an OPEN to device,\n                            // device now sent OKAY to this connection\n                            // tell the device to close the stream\n                            this.sendPacket(AdbCommand.Close, packet.arg1, packet.arg0);\n                        }\n                        break;\n                    case AdbCommand.Close:\n                        // CLSE also has two meanings\n                        if (packet.arg0 === 0) {\n                            // 1. The device don't want to create the Stream\n                            if (this.initializers.reject(packet.arg1, new Error('open failed'))) {\n                                handled = true;\n                            }\n                        } else if (this.streams.has(packet.arg1)) {\n                            // 2. The device has closed the Stream\n                            const stream = this.streams.get(packet.arg1)!;\n                            stream.dispose();\n\n                            this.streams.delete(packet.arg1);\n                            handled = true;\n                        }\n                        break;\n                    case AdbCommand.Write:\n                        if (this.streams.has(packet.arg1)) {\n                            await this.sendPacket(AdbCommand.OK, packet.arg1, packet.arg0);\n                            await this.streams.get(packet.arg1)!.dataEvent.fire(packet.payload!);\n                            handled = true;\n                        }\n                        break;\n                }\n\n                if (!handled) {\n                    const args: AdbPacketArrivedEventArgs = {\n                        handled: false,\n                        packet,\n                    };\n                    this.onPacketEvent.fire(args);\n                    if (!args.handled) {\n                        this.dispose();\n                        return;\n                    }\n                }\n            } catch (e) {\n                if (!this._running) {\n                    // ignore error\n                }\n\n                this.onReceiveErrorEvent.fire(e);\n            }\n        }\n    }\n}\n\nexport class AdbStream {\n    private controller: AdbStreamController;\n\n    public get backend() { return this.controller.backend; }\n\n    public get localId() { return this.controller.localId; }\n\n    public get remoteId() { return this.controller.remoteId; }\n\n    public get onData() { return this.controller.dataEvent.event; }\n\n    public get onClose() { return this.controller.onClose; }\n\n    public constructor(controller: AdbStreamController) {\n        this.controller = controller;\n    }\n\n    public write(data: ArrayBuffer): Promise<void> {\n        return this.controller.write(data);\n    }\n\n    public close(): Promise<void> {\n        return this.controller.close();\n    }\n}\n","import { AutoDisposable } from '@yume-chan/event';\nimport { AdbBackend } from './backend';\nimport { AdbBufferedStream } from './buffered-stream';\nimport { AdbStream } from './stream';\nimport { AutoResetEvent } from './utils';\n\nexport enum AdbSyncRequestId {\n    List = 'LIST',\n    Send = 'SEND',\n    Stat = 'STAT',\n    Data = 'DATA',\n    Done = 'DONE',\n    Receive = 'RECV',\n}\n\nexport enum AdbSyncResponseId {\n    Entry = 'DENT',\n    Done = 'DONE',\n    Data = 'DATA',\n    Ok = 'OKAY',\n}\n\nexport abstract class AdbSyncRequestBase<T extends AdbSyncRequestId = AdbSyncRequestId> {\n    public readonly id: T;\n\n    public constructor(id: T) {\n        this.id = id;\n    }\n\n    public abstract toBuffer(backend: AdbBackend): ArrayBuffer;\n}\n\nexport type AdbSyncNumberRequestId =\n    AdbSyncRequestId.Done;\n\nexport class AdbSyncNumberRequest extends AdbSyncRequestBase<AdbSyncNumberRequestId> {\n    public readonly value: number;\n\n    public constructor(id: AdbSyncNumberRequestId, value: number) {\n        super(id);\n        this.value = value;\n    }\n\n    public toBuffer(backend: AdbBackend): ArrayBuffer {\n        const array = new Uint8Array(8);\n\n        const idBuffer = backend.encodeUtf8(this.id);\n        array.set(new Uint8Array(idBuffer));\n\n        const view = new DataView(array.buffer);\n        view.setUint32(4, this.value, true);\n\n        return array.buffer;\n    }\n}\n\nexport type AdbSyncStringRequestId =\n    AdbSyncRequestId.List |\n    AdbSyncRequestId.Send |\n    AdbSyncRequestId.Stat |\n    AdbSyncRequestId.Receive;\n\nexport class AdbSyncStringRequest extends AdbSyncRequestBase<AdbSyncStringRequestId> {\n    public value: string;\n\n    public constructor(id: AdbSyncStringRequestId, value: string) {\n        super(id);\n        this.value = value;\n    }\n\n    public toBuffer(backend: AdbBackend) {\n        const valueBuffer = backend.encodeUtf8(this.value);\n        const array = new Uint8Array(8 + valueBuffer.byteLength);\n\n        const idBuffer = backend.encodeUtf8(this.id);\n        array.set(new Uint8Array(idBuffer));\n\n        const view = new DataView(array.buffer);\n        view.setUint32(4, valueBuffer.byteLength, true);\n\n        array.set(new Uint8Array(valueBuffer), 8);\n\n        return array.buffer;\n    }\n}\n\n// https://github.com/python/cpython/blob/4e581d64b8aff3e2eda99b12f080c877bb78dfca/Lib/stat.py#L36\nexport enum LinuxFileType {\n    Directory = 0o04,\n    File = 0o10,\n    Link = 0o12,\n}\n\nexport class AdbSyncEntryResponse {\n    public static async parse(stream: AdbBufferedStream): Promise<AdbSyncEntryResponse> {\n        const buffer = await stream.read(16);\n        const view = new DataView(buffer);\n        const mode = view.getUint32(0, true);\n        const size = view.getUint32(4, true);\n        const lastModifiedTime = view.getUint32(8, true);\n        const nameLength = view.getUint32(12, true);\n        const name = stream.backend.decodeUtf8(await stream.read(nameLength));\n        return new AdbSyncEntryResponse(mode, size, lastModifiedTime, name);\n    }\n\n    public readonly id = AdbSyncResponseId.Entry;\n\n    public readonly type: LinuxFileType;\n\n    public readonly mode: number;\n\n    public readonly size: number;\n\n    public readonly logicalSize: number;\n\n    public readonly lastModifiedTime: number;\n\n    public readonly name: string;\n\n    public constructor(mode: number, size: number, lastModifiedTime: number, name: string) {\n        this.type = mode >> 12 as LinuxFileType;\n        this.mode = mode & 0b00001111_11111111;\n        this.size = size;\n        this.logicalSize = this.type === LinuxFileType.File ? this.size : 0;\n        this.lastModifiedTime = lastModifiedTime;\n        this.name = name;\n    }\n}\n\nexport class AdbSyncDataResponse {\n    public static async parse(stream: AdbBufferedStream): Promise<AdbSyncDataResponse> {\n        const buffer = await stream.read(4);\n        const view = new DataView(buffer);\n        const length = view.getUint32(0, true);\n        const data = await stream.read(length);\n        return new AdbSyncDataResponse(data);\n    }\n\n    public readonly id = AdbSyncResponseId.Data;\n\n    public readonly data: ArrayBuffer;\n\n    public constructor(data: ArrayBuffer) {\n        this.data = data;\n    }\n}\n\nexport class AdbSyncDoneResponse {\n    public readonly id = AdbSyncResponseId.Done;\n}\n\nasync function parseResponse(stream: AdbBufferedStream) {\n    const id = stream.backend.decodeUtf8(await stream.read(4)) as AdbSyncResponseId;\n    switch (id) {\n        case AdbSyncResponseId.Entry:\n            return AdbSyncEntryResponse.parse(stream);\n        case AdbSyncResponseId.Data:\n            return AdbSyncDataResponse.parse(stream);\n        case AdbSyncResponseId.Done:\n            await stream.read(4);\n            return new AdbSyncDoneResponse();\n        default:\n            throw new Error('');\n    }\n}\n\nexport class AdbSync extends AutoDisposable {\n    private stream: AdbBufferedStream;\n\n    private sendLock = this.addDisposable(new AutoResetEvent());\n\n    public constructor(stream: AdbStream) {\n        super();\n\n        this.stream = new AdbBufferedStream(stream);\n    }\n\n    public async *iterate(path: string) {\n        await this.sendLock.wait();\n\n        try {\n            await this.write(new AdbSyncStringRequest(AdbSyncRequestId.List, path));\n\n            while (true) {\n                const response = await parseResponse(this.stream);\n                switch (response.id) {\n                    case AdbSyncResponseId.Entry:\n                        yield response;\n                        break;\n                    case AdbSyncResponseId.Done:\n                        return;\n                    default:\n                        throw new Error('Unexpected response id');\n                }\n            }\n        } finally {\n            this.sendLock.notify();\n        }\n    }\n\n    public async list(path: string) {\n        const results: AdbSyncEntryResponse[] = [];\n        for await (const entry of this.iterate(path)) {\n            results.push(entry);\n        }\n        return results;\n    }\n\n    public async *receive(path: string): AsyncGenerator<ArrayBuffer, void, void> {\n        await this.sendLock.wait();\n\n        try {\n            await this.write(new AdbSyncStringRequest(AdbSyncRequestId.Receive, path));\n            while (true) {\n                const response = await parseResponse(this.stream);\n                switch (response.id) {\n                    case AdbSyncResponseId.Data:\n                        yield response.data;\n                        break;\n                    case AdbSyncResponseId.Done:\n                        return;\n                    default:\n                        throw new Error('Unexpected response id');\n                }\n            }\n        } finally {\n            this.sendLock.notify();\n        }\n    }\n\n    public dispose() {\n        super.dispose();\n        this.stream.close();\n    }\n\n    private write(request: AdbSyncRequestBase) {\n        return this.stream.write(request.toBuffer(this.stream.backend));\n    }\n}\n","import { PromiseResolver } from '@yume-chan/async-operation-manager';\nimport { DisposableList } from '@yume-chan/event';\nimport { AdbAuthenticationHandler, AdbDefaultAuthenticators } from './auth';\nimport { AdbBackend } from './backend';\nimport { AdbBufferedStream } from './buffered-stream';\nimport { AdbCommand } from './packet';\nimport { AdbPacketDispatcher, AdbStream } from './stream';\nimport { AdbSync } from './sync';\n\nexport enum AdbPropKey {\n    Product = 'ro.product.name',\n    Model = 'ro.product.model',\n    Device = 'ro.product.device',\n    Features = 'features',\n}\n\nexport class Adb {\n    private backend: AdbBackend;\n    public get onDisconnected() { return this.backend.onDisconnected; }\n\n    private _connected = false;\n    public get connected() { return this._connected; }\n\n    public get name() { return this.backend.name; }\n\n    private _product: string | undefined;\n    public get product() { return this._product; }\n\n    private _model: string | undefined;\n    public get model() { return this._model; }\n\n    private _device: string | undefined;\n    public get device() { return this._device; }\n\n    private _features: string[] | undefined;\n    public get features() { return this._features; }\n\n    private packetDispatcher: AdbPacketDispatcher;\n\n    public constructor(backend: AdbBackend) {\n        this.backend = backend;\n        this.packetDispatcher = new AdbPacketDispatcher(backend);\n\n        backend.onDisconnected(this.dispose, this);\n    }\n\n    public async connect(authenticators = AdbDefaultAuthenticators) {\n        const version = 0x01000001;\n\n        const features = [\n            'shell_v2',\n            'cmd',\n            'stat_v2',\n            'ls_v2',\n            'fixed_push_mkdir',\n            'apex',\n            'abb',\n            'fixed_push_symlink_timestamp',\n            'abb_exec',\n            'remount_shell',\n            'track_app',\n            'sendrecv_v2',\n            'sendrecv_v2_brotli',\n            'sendrecv_v2_lz4',\n            'sendrecv_v2_zstd',\n            'sendrecv_v2_dry_run_send',\n        ].join(',');\n\n        const resolver = new PromiseResolver<void>();\n        const authHandler = new AdbAuthenticationHandler(authenticators, this.backend);\n        const disposableList = new DisposableList();\n        disposableList.add(this.packetDispatcher.onPacket(async (e) => {\n            e.handled = true;\n\n            const { packet } = e;\n            try {\n                switch (packet.command) {\n                    case AdbCommand.Connect:\n                        if (packet.arg0 !== version) {\n                            throw new Error('Version mismatch');\n                        }\n\n                        this.parseBanner(packet.payloadString!);\n                        resolver.resolve();\n                        break;\n                    case AdbCommand.Auth:\n                        const authPacket = await authHandler.tryNextAuth(e.packet);\n                        await this.packetDispatcher.sendPacket(authPacket);\n                        break;\n                    case AdbCommand.Close:\n                        // Last connection was interrupted\n                        // Ignore this packet, device will recover\n                        break;\n                    default:\n                        throw new Error('Device not in correct state. Reconnect your device and try again');\n                }\n            } catch (e) {\n                resolver.reject(e);\n            }\n        }));\n\n        disposableList.add(this.packetDispatcher.onReceiveError(e => {\n            resolver.reject(e);\n        }));\n\n        await this.packetDispatcher.sendPacket(\n            AdbCommand.Connect,\n            version,\n            0x100000,\n            `host::features=${features}`\n        );\n\n        try {\n            await resolver.promise;\n            this._connected = true;\n        } finally {\n            disposableList.dispose();\n        }\n    }\n\n    private parseBanner(banner: string) {\n        const pieces = banner.split('::');\n        if (pieces.length > 1) {\n            const props = pieces[1];\n            for (const prop of props.split(';')) {\n                if (!prop) {\n                    continue;\n                }\n\n                const keyValue = prop.split('=');\n                if (keyValue.length !== 2) {\n                    continue;\n                }\n\n                const [key, value] = keyValue;\n                switch (key) {\n                    case AdbPropKey.Product:\n                        this._product = value;\n                        break;\n                    case AdbPropKey.Model:\n                        this._model = value;\n                        break;\n                    case AdbPropKey.Device:\n                        this._device = value;\n                        break;\n                    case AdbPropKey.Features:\n                        this._features = value.split(',');\n                        break;\n                }\n            }\n        }\n    }\n\n    public shell(command: string, ...args: string[]): Promise<string>;\n    public shell(): Promise<AdbStream>;\n    public shell(command?: string, ...args: string[]): Promise<AdbStream | string> {\n        if (!command) {\n            return this.createStream('shell:');\n        } else {\n            return this.createStreamAndReadAll(`shell:${command} ${args.join(' ')}`);\n        }\n    }\n\n    public async getDaemonTcpAddresses(): Promise<string[]> {\n        const propAddr = (await this.shell('getprop', 'service.adb.listen_addrs')).trim();\n        if (propAddr) {\n            return propAddr.split(',');\n        }\n\n        let port = (await this.shell('getprop', 'service.adb.tcp.port')).trim();\n        if (port) {\n            return [`0.0.0.0:${port}`];\n        }\n\n        port = (await this.shell('getprop', 'persist.adb.tcp.port')).trim();\n        if (port) {\n            return [`0.0.0.0:${port}`];\n        }\n\n        return [];\n    }\n\n    public setDaemonTcpPort(port = 5555): Promise<string> {\n        return this.createStreamAndReadAll(`tcpip:${port}`);\n    }\n\n    public disableDaemonTcp(): Promise<string> {\n        return this.createStreamAndReadAll('usb:');\n    }\n\n    public async sync(): Promise<AdbSync> {\n        const stream = await this.createStream('sync:\\0');\n        return new AdbSync(stream);\n    }\n\n    public async createStream(service: string): Promise<AdbStream> {\n        return this.packetDispatcher.createStream(service);\n    }\n\n    public async createStreamAndReadAll(payload: string): Promise<string> {\n        const stream = await this.createStream(payload);\n        const buffered = new AdbBufferedStream(stream);\n        return buffered.readAll();\n    }\n\n    public async dispose() {\n        this.packetDispatcher.dispose();\n        await this.backend.dispose();\n    }\n}\n","import { AdbBackend, decodeBase64, encodeBase64 } from '@yume-chan/adb';\nimport { EventEmitter } from '@yume-chan/event';\n\nexport const WebUsbDeviceFilter: USBDeviceFilter = {\n    classCode: 0xFF,\n    subclassCode: 0x42,\n    protocolCode: 1,\n};\n\nconst PrivateKeyStorageKey = 'private-key';\n\nconst Utf8Encoder = new TextEncoder();\nconst Utf8Decoder = new TextDecoder();\n\nexport class WebUsbAdbBackend implements AdbBackend {\n    public static async fromDevice(device: USBDevice) {\n        await device.open();\n\n        for (const configuration of device.configurations) {\n            for (const interface_ of configuration.interfaces) {\n                for (const alternate of interface_.alternates) {\n                    if (alternate.interfaceSubclass === WebUsbDeviceFilter.subclassCode &&\n                        alternate.interfaceClass === WebUsbDeviceFilter.classCode &&\n                        alternate.interfaceSubclass === WebUsbDeviceFilter.subclassCode) {\n                        if (device.configuration?.configurationValue !== configuration.configurationValue) {\n                            await device.selectConfiguration(configuration.configurationValue);\n                        }\n\n                        if (!interface_.claimed) {\n                            await device.claimInterface(interface_.interfaceNumber);\n                        }\n\n                        if (interface_.alternate.alternateSetting !== alternate.alternateSetting) {\n                            await device.selectAlternateInterface(interface_.interfaceNumber, alternate.alternateSetting);\n                        }\n\n                        let inEndpointNumber: number | undefined;\n                        let outEndpointNumber: number | undefined;\n\n                        for (const endpoint of alternate.endpoints) {\n                            switch (endpoint.direction) {\n                                case 'in':\n                                    inEndpointNumber = endpoint.endpointNumber;\n                                    if (outEndpointNumber !== undefined) {\n                                        return new WebUsbAdbBackend(device, inEndpointNumber, outEndpointNumber);\n                                    }\n                                    break;\n                                case 'out':\n                                    outEndpointNumber = endpoint.endpointNumber;\n                                    if (inEndpointNumber !== undefined) {\n                                        return new WebUsbAdbBackend(device, inEndpointNumber, outEndpointNumber);\n                                    }\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        throw new Error('Unknown error');\n    }\n\n    public static async pickDevice() {\n        try {\n            const device = await navigator.usb.requestDevice({ filters: [WebUsbDeviceFilter] });\n            return WebUsbAdbBackend.fromDevice(device);\n        } catch (e) {\n            switch (e.name) {\n                case 'NotFoundError':\n                    return undefined;\n                default:\n                    throw e;\n            }\n        }\n    }\n\n    private _device: USBDevice;\n\n    public get name() { return this._device.productName; }\n\n    private readonly onDisconnectedEvent = new EventEmitter<void>();\n    public readonly onDisconnected = this.onDisconnectedEvent.event;\n\n    private _inEndpointNumber!: number;\n    private _outEndpointNumber!: number;\n\n    private constructor(device: USBDevice, inEndPointNumber: number, outEndPointNumber: number) {\n        this._device = device;\n        this._inEndpointNumber = inEndPointNumber;\n        this._outEndpointNumber = outEndPointNumber;\n    }\n\n    public *iterateKeys(): Generator<ArrayBuffer, void, void> {\n        const privateKey = window.localStorage.getItem(PrivateKeyStorageKey);\n        if (privateKey) {\n            yield decodeBase64(privateKey);\n        }\n    }\n\n    public async generateKey(): Promise<ArrayBuffer> {\n        const { privateKey: cryptoKey } = await crypto.subtle.generateKey(\n            {\n                name: 'RSASSA-PKCS1-v1_5',\n                modulusLength: 2048,\n                // 65537\n                publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n                hash: 'SHA-1',\n            },\n            true,\n            ['sign', 'verify']\n        );\n\n        const privateKey = await crypto.subtle.exportKey('pkcs8', cryptoKey);\n        window.localStorage.setItem(PrivateKeyStorageKey, encodeBase64(privateKey));\n        return privateKey;\n    }\n\n    public encodeUtf8(input: string): ArrayBuffer {\n        return Utf8Encoder.encode(input);\n    }\n\n    public decodeUtf8(buffer: ArrayBuffer): string {\n        return Utf8Decoder.decode(buffer);\n    }\n\n    public async write(buffer: ArrayBuffer): Promise<void> {\n        await this._device.transferOut(this._outEndpointNumber, buffer);\n    }\n\n    public async read(length: number): Promise<ArrayBuffer> {\n        try {\n            const result = await this._device.transferIn(this._inEndpointNumber, length);\n\n            if (result.status === 'stall') {\n                await this._device.clearHalt('in', this._inEndpointNumber);\n            }\n\n            return result.data!.buffer;\n        } catch (e) {\n            if (e instanceof Error && e.name === 'NotFoundError') {\n                this.onDisconnectedEvent.fire();\n            }\n\n            throw e;\n        }\n    }\n\n    public async dispose() {\n        this.onDisconnectedEvent.dispose();\n        await this._device.close();\n    }\n}\n","import { memo, NamedExoticComponent } from 'react';\n\nexport default function withDisplayName<P extends object>(\n    name: string,\n    Component: React.FunctionComponent<P>\n): NamedExoticComponent<P> {\n    Component.displayName = name;\n    return memo(Component);\n}\n","import { DefaultButton, Dialog, DialogFooter, DialogType, PrimaryButton, ProgressIndicator, Stack, StackItem } from '@fluentui/react';\nimport { useBoolean } from '@uifabric/react-hooks';\nimport { Adb } from '@yume-chan/adb';\nimport { WebUsbAdbBackend } from '@yume-chan/adb-webusb';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport withDisplayName from './with-display-name';\n\ninterface ConnectProps {\n    device: Adb | undefined;\n\n    onDeviceChange: (device: Adb | undefined) => void;\n}\n\nexport default withDisplayName('Connect', ({\n    device,\n    onDeviceChange,\n}: ConnectProps): JSX.Element | null => {\n    const [connecting, setConnecting] = useState(false);\n\n    const [errorDialogVisible, { setTrue: showErrorDialog, setFalse: hideErrorDialog }] = useBoolean(false);\n    const [errorMessage, setErrorMessage] = useState<string | undefined>();\n\n    const connect = useCallback(async () => {\n        try {\n            const backend = await WebUsbAdbBackend.pickDevice();\n            if (backend) {\n                const device = new Adb(backend);\n                try {\n                    setConnecting(true);\n                    await device.connect();\n                    onDeviceChange(device);\n                } catch (e) {\n                    device.dispose();\n                    throw e;\n                }\n            }\n        } catch (e) {\n            setErrorMessage(e.message);\n            showErrorDialog();\n        } finally {\n            setConnecting(false);\n        }\n    }, [onDeviceChange]);\n\n    const disconnect = useCallback(async () => {\n        try {\n            await device!.dispose();\n            onDeviceChange(undefined);\n        } catch (e) {\n            setErrorMessage(e.message);\n            showErrorDialog();\n        }\n    }, [device]);\n\n    useEffect(() => {\n        return device?.onDisconnected(() => {\n            onDeviceChange(undefined);\n        });\n    }, [device, onDeviceChange]);\n\n    return (\n        <>\n            <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8, padding: 8 }}>\n                {!device && <StackItem>\n                    <PrimaryButton text=\"Connect\" onClick={connect} />\n                </StackItem>}\n                {device && <StackItem>\n                    <DefaultButton text=\"Disconnect\" onClick={disconnect} />\n                </StackItem>}\n                <StackItem>\n                    {device && `Connected to ${device.name}`}\n                </StackItem>\n            </Stack>\n\n            <Dialog\n                hidden={!connecting}\n                dialogContentProps={{\n                    title: 'Connecting',\n                    subText: 'Please authorize the connection on your device'\n                }}\n            >\n                <ProgressIndicator />\n            </Dialog>\n\n            <Dialog\n                hidden={!errorDialogVisible}\n                dialogContentProps={{\n                    type: DialogType.normal,\n                    title: 'Error',\n                    subText: errorMessage,\n                }}\n            >\n                <DialogFooter>\n                    <PrimaryButton text=\"OK\" onClick={hideErrorDialog} />\n                </DialogFooter>\n            </Dialog>\n        </>\n    );\n});\n","import { AnimationClassNames, concatStyleSets, IStackProps, Stack } from '@fluentui/react';\nimport React, { useMemo, useRef } from 'react';\nimport { match, matchPath, RedirectProps, RouteProps, useLocation, useRouteMatch } from 'react-router-dom';\nimport withDisplayName from './with-display-name';\n\nexport const DefaultStackProps: IStackProps = {\n    tokens: { childrenGap: 8, padding: 8 },\n    verticalFill: true,\n};\n\nexport const RouteStackProps: IStackProps = {\n    ...DefaultStackProps,\n    className: AnimationClassNames.slideUpIn10,\n    styles: { root: { overflow: 'auto' } },\n};\n\nexport const CacheRoute = withDisplayName('CacheRoute', (props: RouteProps) => {\n    const match = useRouteMatch(props);\n\n    const everMatched = useRef(!!match);\n    if (!everMatched.current && match) {\n        everMatched.current = true;\n    }\n\n    const stackProps = useMemo((): IStackProps => ({\n        ...RouteStackProps,\n        styles: concatStyleSets(\n            RouteStackProps.styles,\n            { root: { display: match ? 'flex' : 'none' } }\n        ),\n    }), [!!match]);\n\n    if (!everMatched.current) {\n        return null;\n    }\n\n    return (\n        <Stack {...stackProps} >\n            {props.children}\n        </Stack>\n    );\n});\n\nexport interface CacheSwitchProps {\n    children: React.ReactNodeArray;\n}\n\nexport const CacheSwitch = withDisplayName('CacheSwitch', (props: CacheSwitchProps) => {\n    const location = useLocation();\n    let contextMatch = useRouteMatch();\n\n    let element: React.ReactElement | undefined;\n    let computedMatch: match | null | undefined;\n    let cached: React.ReactElement[] = [];\n    React.Children.forEach(props.children, child => {\n        if (React.isValidElement<RouteProps & RedirectProps>(child)) {\n            // Always render all cached routes\n            const isCacheRoute = child.type === CacheRoute;\n            if (isCacheRoute) {\n                cached.push(child);\n            }\n\n            // If we already found the matched route,\n            // Don't care about others\n            if (computedMatch) {\n                return;\n            }\n\n            const path = child.props.path ?? child.props.from;\n            const match = path\n                ? matchPath(location.pathname, { ...child.props, path })\n                : contextMatch;\n\n            if (match) {\n                computedMatch = match;\n\n                if (isCacheRoute) {\n                    // Don't render a CacheRoute twice\n                    element = undefined;\n                } else {\n                    element = child;\n                }\n            }\n        }\n    });\n\n    return (\n        <>\n            {cached}\n            {element ? React.cloneElement(element, { location, computedMatch }) : null}\n        </>\n    );\n});\n","import { Breadcrumb, concatStyleSets, ContextualMenu, DetailsListLayoutMode, DirectionalHint, IBreadcrumbItem, IColumn, Icon, IContextualMenuItem, IDetailsHeaderProps, IDetailsList, IRenderFunction, Layer, MarqueeSelection, mergeStyleSets, Overlay, Selection, ShimmeredDetailsList, StackItem } from '@fluentui/react';\nimport { FileIconType, getFileTypeIconProps, initializeFileTypeIcons } from '@uifabric/file-type-icons';\nimport { IHTMLSlot } from '@uifabric/foundation';\nimport { useConst, useConstCallback } from '@uifabric/react-hooks';\nimport { AdbSyncEntryResponse, LinuxFileType } from '@yume-chan/adb';\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport StreamSaver from 'streamsaver';\nimport withDisplayName from '../with-display-name';\nimport { RouteProps } from './type';\n\ninitializeFileTypeIcons();\nStreamSaver.mitm = 'streamsaver/mitm.html';\n\ninterface ListItem extends AdbSyncEntryResponse {\n    key: string;\n}\n\nfunction toListItem(item: AdbSyncEntryResponse): ListItem {\n    return { ...item, key: item.name };\n}\n\nconst classNames = mergeStyleSets({\n    name: {\n        cursor: 'pointer',\n        '&:hover': {\n            textDecoration: 'underline',\n        },\n    },\n});\n\nconst units = [' B', ' KB', ' MB', ' GB'];\nfunction formatSize(value: number): string {\n    let index = 0;\n    while (index < units.length && value > 1024) {\n        index += 1;\n        value /= 1024;\n    }\n    return value.toLocaleString(undefined, { maximumFractionDigits: 2 }) + units[index];\n}\n\nfunction extensionName(fileName: string): string {\n    const index = fileName.lastIndexOf('.');\n    if (index === -1) {\n        return '';\n    } else {\n        return fileName.slice(index);\n    }\n}\n\nconst renderDetailsHeader: IRenderFunction<IDetailsHeaderProps> = (props?, defaultRender?) => {\n    if (!props || !defaultRender) {\n        return null;\n    }\n\n    return defaultRender({\n        ...props,\n        styles: concatStyleSets(props.styles, { root: { paddingTop: 0 } })\n    });\n};\n\nfunction combinePath(...segments: string[]): string {\n    return segments.reduce((result, item) => {\n        if (result.endsWith('/')) {\n            return `${result}${item}`;\n        } else {\n            return `${result}/${item}`;\n        }\n    }, '');\n}\n\nfunction delay(time: number): Promise<void> {\n    return new Promise(resolve => {\n        setTimeout(resolve, time);\n    });\n}\n\nfunction createReadableStreamFromBufferIterator(\n    iterator: AsyncIterator<ArrayBuffer>\n): ReadableStream<Uint8Array> {\n    return new ReadableStream<Uint8Array>({\n        async pull(controller) {\n            const { desiredSize } = controller;\n            if (!desiredSize || desiredSize < 0) {\n                return;\n            }\n\n            let written = 0;\n            while (written < desiredSize) {\n                const result = await iterator.next();\n                if (result.done) {\n                    controller.close();\n                    return;\n                }\n\n                controller.enqueue(new Uint8Array(result.value));\n                written += result.value.byteLength;\n            }\n        },\n    });\n}\n\nexport default withDisplayName('FileManager', ({\n    device,\n}: RouteProps): JSX.Element | null => {\n    const [path, setPath] = useState('/');\n    const pathRef = useRef(path);\n    pathRef.current = path;\n\n    const breadcrumbItems = useMemo((): IBreadcrumbItem[] => {\n        let part = '';\n        const list: IBreadcrumbItem[] = path.split('/').filter(Boolean).map(segment => {\n            part += '/' + segment;\n            return {\n                key: part,\n                text: segment,\n                onClick: (e, item) => {\n                    if (!item) {\n                        return;\n                    }\n                    setPath(item.key);\n                },\n            };\n        });\n        list.unshift({\n            key: '/',\n            text: '/',\n            onClick: () => setPath('/'),\n        });\n        list[list.length - 1].isCurrentItem = true;\n        list[list.length - 1].onClick = undefined;\n        return list;\n    }, [path]);\n\n    const [items, setItems] = useState<ListItem[]>([]);\n    const [loading, setLoading] = useState(false);\n    const listRef = useRef<IDetailsList | null>(null);\n    useEffect(() => {\n        (async () => {\n            setItems([]);\n\n            if (!device) {\n                setPath('/');\n                return;\n            }\n\n            setLoading(true);\n            const sync = await device.sync();\n\n            let items: ListItem[] = [];\n            const intervalId = setInterval(() => {\n                setItems(items.slice());\n            }, 1000);\n\n            try {\n                let lastBreak = Date.now();\n                for await (const entry of sync.iterate(path)) {\n                    if (path !== pathRef.current) {\n                        break;\n                    }\n\n                    if (entry.name === '.' || entry.name === '..') {\n                        continue;\n                    }\n\n                    items.push(toListItem(entry));\n\n                    const now = Date.now();\n                    if (now - lastBreak > 16) {\n                        await delay(0);\n                        lastBreak = now;\n                    }\n                }\n\n                setItems(items);\n                listRef.current?.scrollToIndex(0);\n            } finally {\n                if (path === pathRef.current) {\n                    setLoading(false);\n                }\n                clearInterval(intervalId);\n                sync.dispose();\n            }\n        })();\n    }, [device, path]);\n\n    const [sortedList, setSortedList] = useState<ListItem[]>([]);\n    const [sortKey, setSortKey] = useState<keyof ListItem>('name');\n    const [sortDescending, setSortDescendent] = useState(false);\n    useEffect(() => {\n        const list = items.slice();\n        list.sort((a, b) => {\n            const aIsFile = a.type === LinuxFileType.File ? 1 : 0;\n            const bIsFile = b.type === LinuxFileType.File ? 1 : 0;\n\n            let result: number;\n            if (aIsFile !== bIsFile) {\n                result = aIsFile - bIsFile;\n            } else {\n                const aSortKey = a[sortKey];\n                const bSortKey = b[sortKey];\n\n                if (aSortKey === bSortKey) {\n                    result = a.name < b.name ? -1 : 1;\n                } else {\n                    result = aSortKey < bSortKey ? -1 : 1;\n                }\n            }\n\n            if (sortDescending) {\n                result *= -1;\n            }\n            return result;\n        });\n        setSortedList(list);\n    }, [items, sortKey, sortDescending]);\n\n    const columns: IColumn[] = useMemo(() => {\n        const list: IColumn[] = [\n            {\n                key: 'type',\n                name: 'File Type',\n                iconName: 'Page',\n                isIconOnly: true,\n                minWidth: 20,\n                maxWidth: 20,\n                isCollapsible: true,\n                onRender(item: AdbSyncEntryResponse) {\n                    switch (item.type) {\n                        case LinuxFileType.Link:\n                            return <Icon {...getFileTypeIconProps({ size: 20, type: FileIconType.linkedFolder })} />;\n                        case LinuxFileType.Directory:\n                            return <Icon {...getFileTypeIconProps({ size: 20, type: FileIconType.folder })} />;\n                        case LinuxFileType.File:\n                            return <Icon {...getFileTypeIconProps({ size: 20, extension: extensionName(item.name) })} />;\n                        default:\n                            return <Icon {...getFileTypeIconProps({ size: 20, extension: 'txt' })} />;\n                    }\n                }\n            },\n            {\n                key: 'name',\n                name: 'Name',\n                minWidth: 0,\n                isRowHeader: true,\n                onRender(item: AdbSyncEntryResponse) {\n                    return (\n                        <span className={classNames.name} data-selection-invoke>\n                            {item.name}\n                        </span>\n                    );\n                }\n            },\n            {\n                key: 'mode',\n                name: 'Mode',\n                minWidth: 0,\n                onRender(item: AdbSyncEntryResponse) {\n                    return `0${(item.mode >> 6 & 0b100).toString(8)}${(item.mode >> 3 & 0b100).toString(8)}${(item.mode & 0b100).toString(8)}`;\n                }\n            },\n            {\n                key: 'logicalSize',\n                name: 'Size',\n                minWidth: 0,\n                onRender(item: AdbSyncEntryResponse) {\n                    if (item.type === LinuxFileType.File) {\n                        return formatSize(item.logicalSize);\n                    }\n                    return '';\n                }\n            },\n            {\n                key: 'lastModifiedTime',\n                name: 'Last Modified Time',\n                minWidth: 150,\n                onRender(item: AdbSyncEntryResponse) {\n                    return new Date(item.lastModifiedTime * 1000).toLocaleString();\n                },\n            }\n        ];\n\n        for (const item of list) {\n            item.onColumnClick = (e, column) => {\n                if (sortKey === column.key) {\n                    setSortDescendent(!sortDescending);\n                } else {\n                    setSortKey(column.key as keyof ListItem);\n                    setSortDescendent(false);\n                }\n            };\n\n            if (item.key === sortKey) {\n                item.isSorted = true;\n                item.isSortedDescending = sortDescending;\n            }\n        }\n\n        return list;\n    }, [sortKey, sortDescending]);\n\n    const [previewUrl, setPreviewUrl] = useState<string | undefined>();\n    const previewImage = useCallback(async (path: string) => {\n        const sync = await device!.sync();\n        try {\n            const readableStream = createReadableStreamFromBufferIterator(sync.receive(path));\n            const response = new Response(readableStream);\n            const blob = await response.blob();\n            const url = window.URL.createObjectURL(blob);\n            setPreviewUrl(url);\n        } finally {\n            sync.dispose();\n        }\n    }, [device]);\n    const hidePreview = useCallback(() => {\n        setPreviewUrl(undefined);\n    }, []);\n\n    const handleItemInvoked = useCallback((item: AdbSyncEntryResponse) => {\n        switch (item.type) {\n            case LinuxFileType.Link:\n            case LinuxFileType.Directory:\n                setPath(combinePath(path, item.name));\n                break;\n            case LinuxFileType.File:\n                switch (extensionName(item.name)) {\n                    case '.jpg':\n                    case '.png':\n                    case '.svg':\n                    case '.gif':\n                        previewImage(combinePath(path, item.name));\n                        break;\n                }\n                break;\n        }\n    }, [path, previewImage]);\n\n    const selection = useConst(() => new Selection());\n\n    const [contextMenuItems, setContextMenuItems] = useState<IContextualMenuItem[]>([]);\n    const [contextMenuTarget, setContextMenuTarget] = useState<MouseEvent>();\n    const showContextMenu = useCallback((\n        item?: AdbSyncEntryResponse,\n        index?: number,\n        e?: Event\n    ) => {\n        if (!e) {\n            return false;\n        }\n\n        const selectedItems = selection.getSelection() as ListItem[];\n        if (selectedItems.length !== 1) {\n            return false;\n        }\n\n        let contextMenuItems: IContextualMenuItem[] = [];\n\n        if (selectedItems[0].type === LinuxFileType.File) {\n            contextMenuItems.push({\n                key: 'download',\n                text: 'Download',\n                onClick() {\n                    (async () => {\n                        const sync = await device!.sync();\n                        try {\n                            const itemPath = combinePath(path, selectedItems[0].name);\n                            const readableStream = createReadableStreamFromBufferIterator(sync.receive(itemPath));\n\n                            const writeableStream = StreamSaver.createWriteStream(selectedItems[0].name, {\n                                size: selectedItems[0].size,\n                            });\n                            await readableStream.pipeTo(writeableStream);\n                        } finally {\n                            sync.dispose();\n                        }\n                    })();\n                    return false;\n                },\n            });\n        }\n\n        if (!contextMenuItems.length) {\n            return false;\n        }\n\n        setContextMenuItems(contextMenuItems);\n        setContextMenuTarget(e as MouseEvent);\n        return false;\n    }, [path, device]);\n    const hideContextMenu = useConstCallback(() => {\n        setContextMenuTarget(undefined);\n    });\n\n    return (\n        <MarqueeSelection selection={selection}>\n            {device && (\n                <StackItem>\n                    <Breadcrumb items={breadcrumbItems} />\n                </StackItem>\n            )}\n\n            <StackItem\n                grow\n                styles={{ root: { minHeight: 0 } }}\n            >\n                <ShimmeredDetailsList\n                    componentRef={listRef}\n                    items={sortedList}\n                    columns={columns}\n                    setKey={path}\n                    selection={selection}\n                    layoutMode={DetailsListLayoutMode.justified}\n                    enableShimmer={loading && items.length === 0}\n                    onItemInvoked={handleItemInvoked}\n                    onItemContextMenu={showContextMenu}\n                    onRenderDetailsHeader={renderDetailsHeader}\n                    usePageCache\n                />\n            </StackItem>\n\n            {previewUrl && (\n                <Layer>\n                    <Overlay onClick={hidePreview}>\n                        <div style={{ width: '100%', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                            <img src={previewUrl} style={{ maxWidth: '100%', maxHeight: '100%' }} />\n                        </div>\n                    </Overlay>\n                </Layer>\n            )}\n\n            <ContextualMenu\n                items={contextMenuItems}\n                hidden={!contextMenuTarget}\n                directionalHint={DirectionalHint.bottomLeftEdge}\n                target={contextMenuTarget}\n                onDismiss={hideContextMenu}\n            />\n        </MarqueeSelection>\n    );\n});\n","import React, { CSSProperties, HTMLAttributes, PropsWithChildren, useCallback, useRef } from 'react';\nimport withDisplayName from './with-display-name';\n\nexport interface ResizeObserverProps extends HTMLAttributes<HTMLDivElement>, PropsWithChildren<{}> {\n    onResize: () => void;\n}\n\nconst iframeStyle: CSSProperties = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    visibility: 'hidden',\n};\n\nexport default withDisplayName('ResizeObserver', ({\n    onResize,\n    style,\n    children,\n    ...rest\n}: ResizeObserverProps): JSX.Element | null => {\n    const onResizeRef = useRef<() => void>(onResize);\n    onResizeRef.current = onResize;\n\n    const handleResize = useCallback(() => {\n        onResizeRef.current();\n    }, []);\n\n    const handleIframeRef = useCallback((element: HTMLIFrameElement | null) => {\n        if (element) {\n            element.contentWindow!.addEventListener('resize', handleResize);\n        }\n    }, []);\n\n    const containerStyle: CSSProperties = React.useMemo(() => {\n        if (!style) {\n            return { position: 'relative' };\n        }\n\n        if (!style.position) {\n            return { ...style, position: 'relative' };\n        }\n\n        return style;\n    }, [style]);\n\n    return (\n        <div style={containerStyle} {...rest}>\n            <iframe ref={handleIframeRef} style={iframeStyle} />\n            {children}\n        </div>\n    );\n});\n","import { IconButton, SearchBox, Stack, StackItem } from '@fluentui/react';\nimport React, { CSSProperties, useCallback, useEffect, useRef, useState } from 'react';\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { SearchAddon } from 'xterm-addon-search';\nimport 'xterm/css/xterm.css';\nimport ResizeObserver from '../resize-observer';\nimport withDisplayName from '../with-display-name';\nimport { RouteProps } from './type';\n\nconst containerStyle: CSSProperties = {\n    width: '100%',\n    height: '100%',\n};\n\nexport default withDisplayName('Shell', ({\n    device,\n}: RouteProps): JSX.Element | null => {\n    const [findKeyword, setFindKeyword] = useState('');\n    const findAddonRef = useRef<SearchAddon>();\n    const handleFindKeywordChange = useCallback((e, newValue?: string) => {\n        setFindKeyword(newValue ?? '');\n        if (newValue) {\n            findAddonRef.current!.findNext(newValue, { incremental: true });\n        }\n    }, []);\n    const findPrevious = useCallback(() => {\n        findAddonRef.current!.findPrevious(findKeyword);\n    }, [findKeyword]);\n    const findNext = useCallback(() => {\n        findAddonRef.current!.findNext(findKeyword);\n    }, [findKeyword]);\n\n    const [terminal, setTerminal] = useState<Terminal>();\n    const fitAddonRef = useRef<FitAddon>();\n    const handleContainerRef = useCallback((element: HTMLDivElement | null) => {\n        if (!element) {\n            return;\n        }\n\n        const terminal = new Terminal({\n            scrollback: 9001,\n        });\n\n        const findAddon = new SearchAddon();\n        findAddonRef.current = findAddon;\n        terminal.loadAddon(findAddon);\n\n        const fitAddon = new FitAddon();\n        fitAddonRef.current = fitAddon;\n        terminal.loadAddon(fitAddon);\n\n        setTerminal(terminal);\n        terminal.open(element);\n        fitAddon.fit();\n    }, []);\n    useEffect(() => {\n        return () => terminal?.dispose();\n    }, []);\n\n    useEffect(() => {\n        if (!device || !terminal) {\n            return;\n        }\n\n        (async () => {\n            const shell = await device.shell();\n            const textEncoder = new TextEncoder();\n            terminal.onData(data => {\n                const { buffer } = textEncoder.encode(data);\n                shell.write(buffer);\n            });\n            shell.onData(data => {\n                terminal.write(new Uint8Array(data));\n            });\n        })();\n\n        return () => {\n            terminal.reset();\n            terminal.clear();\n        };\n    }, [device, terminal]);\n\n    const handleResize = useCallback(() => {\n        fitAddonRef.current?.fit();\n    }, []);\n\n    return (\n        <>\n            <StackItem>\n                <Stack horizontal>\n                    <StackItem grow>\n                        <SearchBox\n                            placeholder=\"Find\"\n                            value={findKeyword}\n                            onChange={handleFindKeywordChange}\n                            onSearch={findNext}\n                        />\n                    </StackItem>\n                    <StackItem>\n                        <IconButton\n                            disabled={!findKeyword}\n                            iconProps={{ iconName: 'ChevronUp' }}\n                            onClick={findPrevious}\n                        />\n                    </StackItem>\n                    <StackItem>\n                        <IconButton\n                            disabled={!findKeyword}\n                            iconProps={{ iconName: 'ChevronDown' }}\n                            onClick={findNext}\n                        />\n                    </StackItem>\n                </Stack>\n            </StackItem>\n            <StackItem grow styles={{ root: { minHeight: 0 } }}>\n                <ResizeObserver style={containerStyle} onResize={handleResize}>\n                    <div ref={handleContainerRef} style={{ height: '100%' }} />\n                </ResizeObserver>\n            </StackItem>\n        </>\n    );\n});\n","import { Label, MessageBar, PrimaryButton, Stack, StackItem, Text, TextField } from '@fluentui/react';\nimport { useId } from '@uifabric/react-hooks';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport withDisplayName from '../with-display-name';\nimport { RouteProps } from './type';\n\nexport default withDisplayName('TcpIp', ({\n    device\n}: RouteProps): JSX.Element | null => {\n    const [tcpPort, setTcpAddresses] = useState<string[] | undefined>();\n    useEffect(() => {\n        if (!device) {\n            setTcpAddresses(undefined);\n        }\n    }, [device]);\n\n    const queryTcpAddress = useCallback(async () => {\n        if (!device) {\n            return;\n        }\n\n        const result = await device.getDaemonTcpAddresses();\n        setTcpAddresses(result);\n    }, [device]);\n\n    const [tcpPortValue, setTcpPortValue] = useState('5555');\n    const tcpPortInputId = useId('tcpPort');\n    const enableTcp = useCallback(async () => {\n        if (!device) {\n            return;\n        }\n\n        const result = await device.setDaemonTcpPort(Number.parseInt(tcpPortValue, 10));\n        console.log(result);\n    }, [device, tcpPortValue]);\n\n    const disableTcp = useCallback(async () => {\n        if (!device) {\n            return;\n        }\n\n        const result = await device.disableDaemonTcp();\n        console.log(result);\n    }, [device]);\n\n    return (\n        <>\n            <StackItem>\n                <MessageBar>\n                    <Text>Although WebADB can enable ADB over WiFi for you, it can't connect to your device wirelessly.</Text>\n                </MessageBar>\n            </StackItem>\n            <StackItem>\n                <MessageBar >\n                    <Text>Your device will disconnect after changing ADB over WiFi config.</Text>\n                </MessageBar>\n            </StackItem>\n            <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\n                <StackItem>\n                    <PrimaryButton text=\"Update Status\" disabled={!device} onClick={queryTcpAddress} />\n                </StackItem>\n                <StackItem>\n                    {tcpPort !== undefined &&\n                        (tcpPort.length !== 0\n                            ? `Enabled at ${tcpPort.join(', ')}`\n                            : 'Disabled')}\n                </StackItem>\n            </Stack>\n            <Stack horizontal verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\n                <StackItem>\n                    <Label htmlFor={tcpPortInputId}>Port: </Label>\n                </StackItem>\n                <StackItem>\n                    <TextField\n                        id={tcpPortInputId}\n                        width={300}\n                        disabled={!device}\n                        value={tcpPortValue}\n                        onChange={(e, value) => setTcpPortValue(value!)}\n                    />\n                </StackItem>\n                <StackItem>\n                    <PrimaryButton\n                        text=\"Enable\"\n                        disabled={!device}\n                        onClick={enableTcp}\n                    />\n                </StackItem>\n            </Stack>\n            <StackItem>\n                <PrimaryButton\n                    text=\"Disable\"\n                    disabled={!device || tcpPort === undefined || tcpPort.length === 0}\n                    onClick={disableTcp}\n                />\n            </StackItem>\n        </>\n    );\n});\n","import { Link, Nav, Separator, Stack, StackItem, Text } from '@fluentui/react';\nimport { initializeIcons } from '@uifabric/icons';\nimport { Adb } from '@yume-chan/adb';\nimport React, { useMemo, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Redirect, useLocation } from 'react-router-dom';\nimport Connect from './connect';\nimport './index.css';\nimport { CacheRoute, CacheSwitch } from './router';\nimport FileManager from './routes/file-manager';\nimport Shell from './routes/shell';\nimport TcpIp from './routes/tcp-ip';\n\ninitializeIcons();\n\ninterface RouteInfo {\n    path: string;\n\n    exact?: boolean;\n\n    name: string;\n\n    children: JSX.Element | null;\n}\n\nfunction App(): JSX.Element | null {\n    const location = useLocation();\n\n    const [device, setDevice] = useState<Adb | undefined>();\n\n    const routes = useMemo((): RouteInfo[] => [\n        {\n            path: '/',\n            exact: true,\n            name: 'Introduction',\n            children: (\n                <>\n                    <Text block>\n                        This demo can connect to your Android devices using the{' '}\n                        <Link href=\"https://developer.mozilla.org/en-US/docs/Web/API/USB\" target=\"_blank\">WebUSB</Link>{' '}\n                        API.\n                    </Text>\n                    <Text block>\n                        The latest version of Google Chrome (or Microsoft Edge) is recommended for best compatibility.\n                    </Text>\n                    <Text block styles={{ root: { fontWeight: '600' } }}>\n                        Windows user?\n                    </Text>\n                    <Text block>\n                        The experimental new backend is required. Enable from  {' '}\n                        <Link href=\"chrome://flags/#new-usb-backend\">\n                            chrome://flags/#new-usb-backend\n                        </Link>\n                    </Text>\n                    <Text block styles={{ root: { fontWeight: '600' } }}>\n                        Got \"Unable to claim interface\"?\n                    </Text>\n                    <Text block >\n                        1. Make sure ADB server is not running (run `adb kill-server` to stop it).<br />\n                        2. Make sure no other Android management tools are running\n                    </Text>\n                    <Text block styles={{ root: { fontWeight: '600' } }}>\n                        Got \"Access denied\"?\n                    </Text>\n                    <Text block >\n                        If you have a Samsung device, it's caused by the custom driver. See {' '}\n                        <Link href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1127206\">\n                            https://bugs.chromium.org/p/chromium/issues/detail?id=1127206\n                        </Link>\n                    </Text>\n                </>\n            )\n        },\n        {\n            path: '/device-info',\n            name: 'Device Info',\n            children: (\n                <>\n                    <StackItem>\n                        Product: {device?.product}\n                    </StackItem>\n                    <StackItem>\n                        Model: {device?.model}\n                    </StackItem>\n                    <StackItem>\n                        Device: {device?.device}\n                    </StackItem>\n                    <StackItem>\n                        Features: {device?.features?.join(',')}\n                    </StackItem>\n                </>\n            )\n        },\n        {\n            path: '/adb-over-wifi',\n            name: 'ADB over WiFi',\n            children: (\n                <TcpIp device={device} />\n            )\n        },\n        {\n            path: '/shell',\n            name: 'Interactive Shell',\n            children: (\n                <Shell device={device} />\n            ),\n        },\n        {\n            path: '/file-manager',\n            name: 'File Manager',\n            children: (\n                <FileManager device={device} />\n            ),\n        },\n    ], [device]);\n\n    return (\n        <Stack verticalFill>\n            <StackItem tokens={{ padding: 8 }}>\n                <Text variant=\"xxLarge\">WebADB Demo</Text>\n            </StackItem>\n            <StackItem>\n                <Connect device={device} onDeviceChange={setDevice} />\n            </StackItem>\n            <StackItem>\n                <Separator />\n            </StackItem>\n            <StackItem grow styles={{ root: { minHeight: 0 } }}>\n                <Stack horizontal verticalFill tokens={{ childrenGap: 8 }}>\n                    <StackItem>\n                        <Nav\n                            styles={{ root: { width: 250 } }}\n                            groups={[{\n                                links: routes.map(route => ({\n                                    key: route.path,\n                                    name: route.name,\n                                    url: `#${route.path}`,\n                                })),\n                            }]}\n                            selectedKey={location.pathname}\n                        />\n                    </StackItem>\n                    <StackItem grow styles={{ root: { minHeight: 0, overflow: 'hidden' } }}>\n                        <CacheSwitch>\n                            {routes.map<React.ReactElement>(route => (\n                                <CacheRoute exact={route.exact} path={route.path}>\n                                    {route.children}\n                                </CacheRoute>\n                            ))}\n\n                            <Redirect to=\"/\" />\n                        </CacheSwitch>\n                    </StackItem>\n                </Stack>\n            </StackItem>\n        </Stack>\n    );\n}\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('container')\n);\n"],"sourceRoot":""}