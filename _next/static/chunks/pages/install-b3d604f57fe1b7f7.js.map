{"version":3,"file":"static/chunks/pages/install-b3d604f57fe1b7f7.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,WACA,WACE,OAAO,EAAQ,U,+CCMlBC,E,kXAAAA,EAAA,MAAK,KAALA,EACQ,UAAT,eADCA,EAAAA,EAGS,WAAV,gBAHCA,EAAAA,EAKQ,UAAT,e,IA+EEC,EAAQ,IAhEQ,SAAhBC,I,yGAAAA,GAAN,KACIC,YAAa,EADjB,KAGIC,cAAiCC,EAHrC,KAYIC,S,EAAO,UAAG,SAAS,I,MACTC,E,yFAAaC,EAAAA,EAAAA,IAAS,CAAEC,OAAQ,S,UAAhCF,EAAO,EAAH,KACC,C,uDAIXG,EAAAA,EAAAA,IAAY,W,EACHP,YAAa,E,EACbC,SAAW,CACZO,SAAUJ,EAAKK,KACfC,MAAOb,EAAMc,UACbC,aAAc,EACdC,UAAWT,EAAKU,KAChBC,MAAO,M,SAITC,EAAAA,GAAAA,OAAAA,SAAuBC,EAAAA,EAAAA,IAAUb,EAAMc,EAAAA,KAAuBC,SAAAA,G,SAChEZ,EAAAA,EAAAA,IAAY,WACJY,IAAaf,EAAKU,K,EACbb,SAAW,CACZO,SAAUJ,EAAKK,KACfC,MAAOb,EAAMc,UACbC,aAAcO,EACdN,UAAWT,EAAKU,KAChBC,MAAOI,EAAWf,EAAKU,KAAO,I,EAG7Bb,SAAW,CACZO,SAAUJ,EAAKK,KACfC,MAAOb,EAAMuB,WACbR,aAAcO,EACdN,UAAWT,EAAKU,KAChBC,MAAO,U,QAMvBR,EAAAA,EAAAA,IAAY,W,EACHN,SAAW,CACZO,SAAUJ,EAAKK,KACfC,MAAOb,EAAMwB,UACbT,aAAcR,EAAKU,KACnBD,UAAWT,EAAKU,KAChBC,MAAO,G,EAENf,YAAa,K,gDAEzB,W,+KAAA,YAvDGsB,EAAAA,EAAAA,IAAmBC,KAAM,CACrBtB,SAAUuB,EAAAA,GAAAA,IACVrB,SAAS,KAqFrB,WAAesB,EAAAA,EAAAA,KA3BW,WACtB,OAAM,UACDC,EAAAA,E,uUAAK,IAAKC,EAAAA,GAAe,C,oBACrBC,EAAAA,QAAI,C,mBACAC,QAAK,C,SAAC,4B,SAGVH,EAAAA,EAAK,CAACI,YAAU,E,mBACZC,EAAAA,EAAa,CACVC,UAAWhB,EAAAA,GAAAA,QAAiBlB,EAAME,WAClCiC,KAAK,OACLC,QAASpC,EAAMK,YAItBL,EAAMG,WAAQ,SACVkC,EAAAA,EAAiB,CACdC,OAAQ,CAAEC,KAAM,CAAEC,MAAO,MACzBC,MAAOzC,EAAMG,SAASO,SACtBgC,gBAAiB1C,EAAMG,SAASc,MAChC0B,YAAa5C,EAAMC,EAAMG,SAASS,iB,qBCpHtDgC,EAAOC,QAAU,EAAjB,Q","sources":["webpack://_N_E/?5e58","webpack://_N_E/./pages/install.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/next@12.0.7_react-dom@17.0.2+react@17.0.2/node_modules/next/head.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/install\",\n      function () {\n        return require(\"private-next-pages/install.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/install\"])\n      });\n    }\n  ","import { DefaultButton, ProgressIndicator, Stack } from \"@fluentui/react\";\nimport { AdbSyncMaxPacketSize } from \"@yume-chan/adb\";\nimport { makeAutoObservable, observable, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport React from \"react\";\nimport { global } from \"../state\";\nimport { chunkFile, pickFile, RouteStackProps } from \"../utils\";\n\nenum Stage {\n    Uploading,\n\n    Installing,\n\n    Completed,\n}\n\ninterface Progress {\n    filename: string;\n\n    stage: Stage;\n\n    uploadedSize: number;\n\n    totalSize: number;\n\n    value: number | undefined;\n}\n\nclass InstallPageState {\n    installing = false;\n\n    progress: Progress | undefined = undefined;\n\n    constructor() {\n        makeAutoObservable(this, {\n            progress: observable.ref,\n            install: false,\n        });\n    }\n\n    install = async () => {\n        const file = await pickFile({ accept: '.apk' });\n        if (!file) {\n            return;\n        }\n\n        runInAction(() => {\n            this.installing = true;\n            this.progress = {\n                filename: file.name,\n                stage: Stage.Uploading,\n                uploadedSize: 0,\n                totalSize: file.size,\n                value: 0,\n            };\n        });\n\n        await global.device!.install(chunkFile(file, AdbSyncMaxPacketSize), uploaded => {\n            runInAction(() => {\n                if (uploaded !== file.size) {\n                    this.progress = {\n                        filename: file.name,\n                        stage: Stage.Uploading,\n                        uploadedSize: uploaded,\n                        totalSize: file.size,\n                        value: uploaded / file.size * 0.8,\n                    };\n                } else {\n                    this.progress = {\n                        filename: file.name,\n                        stage: Stage.Installing,\n                        uploadedSize: uploaded,\n                        totalSize: file.size,\n                        value: 0.8,\n                    };\n                }\n            });\n        });\n\n        runInAction(() => {\n            this.progress = {\n                filename: file.name,\n                stage: Stage.Completed,\n                uploadedSize: file.size,\n                totalSize: file.size,\n                value: 1,\n            };\n            this.installing = false;\n        });\n    };\n}\n\nconst state = new InstallPageState();\n\nconst Install: NextPage = () => {\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Install APK - WebADB</title>\n            </Head>\n\n            <Stack horizontal>\n                <DefaultButton\n                    disabled={!global.device || state.installing}\n                    text=\"Open\"\n                    onClick={state.install}\n                />\n            </Stack>\n\n            {state.progress && (\n                <ProgressIndicator\n                    styles={{ root: { width: 300 } }}\n                    label={state.progress.filename}\n                    percentComplete={state.progress.value}\n                    description={Stage[state.progress.stage]}\n                />\n            )}\n        </Stack>\n    );\n};\n\nexport default observer(Install);\n","module.exports = require('./dist/shared/lib/head')\n"],"names":["window","__NEXT_P","push","Stage","state","InstallPageState","installing","progress","undefined","install","file","pickFile","accept","runInAction","filename","name","stage","Uploading","uploadedSize","totalSize","size","value","global","chunkFile","AdbSyncMaxPacketSize","uploaded","Installing","Completed","makeAutoObservable","this","observable","observer","Stack","RouteStackProps","Head","title","horizontal","DefaultButton","disabled","text","onClick","ProgressIndicator","styles","root","width","label","percentComplete","description","module","exports"],"sourceRoot":""}