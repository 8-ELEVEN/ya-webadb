{"version":3,"file":"static/chunks/pages/scrcpy-bc7702b0befa8f49.js","mappings":"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","sources":["webpack://_N_E/?6587","webpack://_N_E/../../libraries/scrcpy/esm/message.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.48.1_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/Layer/LayerHost.js","webpack://_N_E/../../libraries/scrcpy/esm/codec.js","webpack://_N_E/../../libraries/scrcpy/esm/utils.js","webpack://_N_E/../../libraries/scrcpy/esm/connection.js","webpack://_N_E/../../libraries/scrcpy/esm/options/common.js","webpack://_N_E/../../libraries/scrcpy/esm/options/1_16.js","webpack://_N_E/../../libraries/scrcpy/esm/options/1_18.js","webpack://_N_E/../../libraries/scrcpy/esm/options/1_21.js","webpack://_N_E/../../libraries/scrcpy/esm/push-server.js","webpack://_N_E/../../libraries/scrcpy/esm/sps.js","webpack://_N_E/../../libraries/scrcpy/esm/client.js","webpack://_N_E/../../libraries/scrcpy/esm/decoder/tinyh264/wrapper.js","webpack://_N_E/../../libraries/scrcpy/esm/decoder/tinyh264/index.js","webpack://_N_E/../../libraries/scrcpy/esm/decoder/web-codecs/index.js","webpack://_N_E/../../libraries/scrcpy/bin/version.js","webpack://_N_E/./pages/scrcpy.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/next@12.0.7_react-dom@17.0.2+react@17.0.2/node_modules/next/head.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/scrcpy\",\n      function () {\n        return require(\"private-next-pages/scrcpy.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/scrcpy\"])\n      });\n    }\n  ","import Struct, { placeholder } from '@yume-chan/struct';\nexport var ScrcpyControlMessageType;\n(function (ScrcpyControlMessageType) {\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"InjectKeycode\"] = 0] = \"InjectKeycode\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"InjectText\"] = 1] = \"InjectText\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"InjectTouch\"] = 2] = \"InjectTouch\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"InjectScroll\"] = 3] = \"InjectScroll\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"BackOrScreenOn\"] = 4] = \"BackOrScreenOn\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"ExpandNotificationPanel\"] = 5] = \"ExpandNotificationPanel\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"CollapseNotificationPanel\"] = 6] = \"CollapseNotificationPanel\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"GetClipboard\"] = 7] = \"GetClipboard\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"SetClipboard\"] = 8] = \"SetClipboard\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"SetScreenPowerMode\"] = 9] = \"SetScreenPowerMode\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"RotateDevice\"] = 10] = \"RotateDevice\";\n})(ScrcpyControlMessageType || (ScrcpyControlMessageType = {}));\nexport var AndroidMotionEventAction;\n(function (AndroidMotionEventAction) {\n    AndroidMotionEventAction[AndroidMotionEventAction[\"Down\"] = 0] = \"Down\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"Up\"] = 1] = \"Up\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"Move\"] = 2] = \"Move\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"Cancel\"] = 3] = \"Cancel\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"Outside\"] = 4] = \"Outside\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"PointerDown\"] = 5] = \"PointerDown\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"PointerUp\"] = 6] = \"PointerUp\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"HoverMove\"] = 7] = \"HoverMove\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"Scroll\"] = 8] = \"Scroll\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"HoverEnter\"] = 9] = \"HoverEnter\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"HoverExit\"] = 10] = \"HoverExit\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"ButtonPress\"] = 11] = \"ButtonPress\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"ButtonRelease\"] = 12] = \"ButtonRelease\";\n})(AndroidMotionEventAction || (AndroidMotionEventAction = {}));\nexport const ScrcpyInjectTouchControlMessage = new Struct()\n    .uint8('type', ScrcpyControlMessageType.InjectTouch)\n    .uint8('action', placeholder())\n    .uint64('pointerId')\n    .uint32('pointerX')\n    .uint32('pointerY')\n    .uint16('screenWidth')\n    .uint16('screenHeight')\n    .uint16('pressure')\n    .uint32('buttons');\nexport const ScrcpyInjectTextControlMessage = new Struct()\n    .uint8('type', ScrcpyControlMessageType.InjectText)\n    .uint32('length')\n    .string('text', { lengthField: 'length' });\nexport var AndroidKeyEventAction;\n(function (AndroidKeyEventAction) {\n    AndroidKeyEventAction[AndroidKeyEventAction[\"Down\"] = 0] = \"Down\";\n    AndroidKeyEventAction[AndroidKeyEventAction[\"Up\"] = 1] = \"Up\";\n})(AndroidKeyEventAction || (AndroidKeyEventAction = {}));\nexport var AndroidKeyCode;\n(function (AndroidKeyCode) {\n    AndroidKeyCode[AndroidKeyCode[\"Home\"] = 3] = \"Home\";\n    AndroidKeyCode[AndroidKeyCode[\"Back\"] = 4] = \"Back\";\n    AndroidKeyCode[AndroidKeyCode[\"A\"] = 29] = \"A\";\n    AndroidKeyCode[AndroidKeyCode[\"B\"] = 30] = \"B\";\n    AndroidKeyCode[AndroidKeyCode[\"C\"] = 31] = \"C\";\n    AndroidKeyCode[AndroidKeyCode[\"D\"] = 32] = \"D\";\n    AndroidKeyCode[AndroidKeyCode[\"E\"] = 33] = \"E\";\n    AndroidKeyCode[AndroidKeyCode[\"F\"] = 34] = \"F\";\n    AndroidKeyCode[AndroidKeyCode[\"G\"] = 35] = \"G\";\n    AndroidKeyCode[AndroidKeyCode[\"H\"] = 36] = \"H\";\n    AndroidKeyCode[AndroidKeyCode[\"I\"] = 37] = \"I\";\n    AndroidKeyCode[AndroidKeyCode[\"J\"] = 38] = \"J\";\n    AndroidKeyCode[AndroidKeyCode[\"K\"] = 39] = \"K\";\n    AndroidKeyCode[AndroidKeyCode[\"L\"] = 40] = \"L\";\n    AndroidKeyCode[AndroidKeyCode[\"M\"] = 41] = \"M\";\n    AndroidKeyCode[AndroidKeyCode[\"N\"] = 42] = \"N\";\n    AndroidKeyCode[AndroidKeyCode[\"O\"] = 43] = \"O\";\n    AndroidKeyCode[AndroidKeyCode[\"P\"] = 44] = \"P\";\n    AndroidKeyCode[AndroidKeyCode[\"Q\"] = 45] = \"Q\";\n    AndroidKeyCode[AndroidKeyCode[\"R\"] = 46] = \"R\";\n    AndroidKeyCode[AndroidKeyCode[\"S\"] = 47] = \"S\";\n    AndroidKeyCode[AndroidKeyCode[\"T\"] = 48] = \"T\";\n    AndroidKeyCode[AndroidKeyCode[\"U\"] = 49] = \"U\";\n    AndroidKeyCode[AndroidKeyCode[\"V\"] = 50] = \"V\";\n    AndroidKeyCode[AndroidKeyCode[\"W\"] = 51] = \"W\";\n    AndroidKeyCode[AndroidKeyCode[\"X\"] = 52] = \"X\";\n    AndroidKeyCode[AndroidKeyCode[\"Y\"] = 53] = \"Y\";\n    AndroidKeyCode[AndroidKeyCode[\"Z\"] = 54] = \"Z\";\n    AndroidKeyCode[AndroidKeyCode[\"Space\"] = 62] = \"Space\";\n    AndroidKeyCode[AndroidKeyCode[\"Delete\"] = 67] = \"Delete\";\n    AndroidKeyCode[AndroidKeyCode[\"AppSwitch\"] = 187] = \"AppSwitch\";\n})(AndroidKeyCode || (AndroidKeyCode = {}));\nexport const ScrcpyInjectKeyCodeControlMessage = new Struct()\n    .uint8('type', ScrcpyControlMessageType.InjectKeycode)\n    .uint8('action', placeholder())\n    .uint32('keyCode')\n    .uint32('repeat')\n    .uint32('metaState');\nexport const ScrcpyInjectScrollControlMessage = new Struct()\n    .uint8('type', ScrcpyControlMessageType.InjectScroll)\n    .uint32('pointerX')\n    .uint32('pointerY')\n    .uint16('screenWidth')\n    .uint16('screenHeight')\n    .int32('scrollX')\n    .int32('scrollY');\n//# sourceMappingURL=message.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '../../Utilities';\nimport { notifyHostChanged } from './Layer.notification';\nexport var LayerHost = function (props) {\n    var id = props.id, className = props.className;\n    React.useEffect(function () {\n        notifyHostChanged(id);\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n    }, []);\n    useUnmount(function () {\n        notifyHostChanged(id);\n    });\n    return React.createElement(\"div\", __assign({}, props, { className: css('ms-LayerHost', className) }));\n};\nvar useUnmount = function (unmountFunction) {\n    var unmountRef = React.useRef(unmountFunction);\n    unmountRef.current = unmountFunction;\n    React.useEffect(function () { return function () {\n        if (unmountRef.current) {\n            unmountRef.current();\n        }\n    }; }, []);\n};\n//# sourceMappingURL=LayerHost.js.map","// From https://developer.android.com/reference/android/media/MediaCodecInfo.CodecProfileLevel\nexport var AndroidCodecProfile;\n(function (AndroidCodecProfile) {\n    AndroidCodecProfile[AndroidCodecProfile[\"Baseline\"] = 1] = \"Baseline\";\n    AndroidCodecProfile[AndroidCodecProfile[\"Main\"] = 2] = \"Main\";\n    AndroidCodecProfile[AndroidCodecProfile[\"Extended\"] = 4] = \"Extended\";\n    AndroidCodecProfile[AndroidCodecProfile[\"High\"] = 8] = \"High\";\n    AndroidCodecProfile[AndroidCodecProfile[\"High10\"] = 16] = \"High10\";\n    AndroidCodecProfile[AndroidCodecProfile[\"High422\"] = 32] = \"High422\";\n    AndroidCodecProfile[AndroidCodecProfile[\"High444\"] = 64] = \"High444\";\n    AndroidCodecProfile[AndroidCodecProfile[\"ConstrainedBaseline\"] = 65536] = \"ConstrainedBaseline\";\n    AndroidCodecProfile[AndroidCodecProfile[\"ConstrainedHigh\"] = 524288] = \"ConstrainedHigh\";\n})(AndroidCodecProfile || (AndroidCodecProfile = {}));\nexport var AndroidCodecLevel;\n(function (AndroidCodecLevel) {\n    AndroidCodecLevel[AndroidCodecLevel[\"Level1\"] = 1] = \"Level1\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level1b\"] = 2] = \"Level1b\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level11\"] = 4] = \"Level11\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level12\"] = 8] = \"Level12\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level13\"] = 16] = \"Level13\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level2\"] = 32] = \"Level2\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level21\"] = 64] = \"Level21\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level22\"] = 128] = \"Level22\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level3\"] = 256] = \"Level3\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level31\"] = 512] = \"Level31\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level32\"] = 1024] = \"Level32\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level4\"] = 2048] = \"Level4\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level41\"] = 4096] = \"Level41\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level42\"] = 8192] = \"Level42\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level5\"] = 16384] = \"Level5\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level51\"] = 32768] = \"Level51\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level52\"] = 65536] = \"Level52\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level6\"] = 131072] = \"Level6\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level61\"] = 262144] = \"Level61\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level62\"] = 524288] = \"Level62\";\n})(AndroidCodecLevel || (AndroidCodecLevel = {}));\n//# sourceMappingURL=codec.js.map","export function delay(time) {\n    return new Promise(resolve => {\n        globalThis.setTimeout(resolve, time);\n    });\n}\n//# sourceMappingURL=utils.js.map","import { __awaiter } from \"tslib\";\nimport { AdbBufferedStream, EventQueue } from \"@yume-chan/adb\";\nimport { delay } from \"./utils\";\nexport class ScrcpyClientConnection {\n    constructor(device) {\n        this.device = device;\n    }\n    initialize() { }\n    dispose() { }\n}\nexport class ScrcpyClientForwardConnection extends ScrcpyClientConnection {\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new AdbBufferedStream(yield this.device.createSocket('localabstract:scrcpy'));\n        });\n    }\n    connectAndRetry() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let i = 0; i < 100; i++) {\n                try {\n                    return yield this.connect();\n                }\n                catch (e) {\n                    yield delay(100);\n                }\n            }\n            throw new Error(`Can't connect to server after 100 retries`);\n        });\n    }\n    connectAndReadByte() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stream = yield this.connectAndRetry();\n            // server will write a `0` to signal connection success\n            yield stream.read(1);\n            return stream;\n        });\n    }\n    getStreams() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return [\n                yield this.connectAndReadByte(),\n                yield this.connectAndRetry()\n            ];\n        });\n    }\n}\nexport class ScrcpyClientReverseConnection extends ScrcpyClientConnection {\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // try to unbind first\n                yield this.device.reverse.remove('localabstract:scrcpy');\n            }\n            catch (_a) {\n                // ignore error\n            }\n            this.streams = new EventQueue();\n            this.address = yield this.device.reverse.add('localabstract:scrcpy', 27183, {\n                onSocket: (packet, stream) => {\n                    this.streams.enqueue(stream);\n                },\n            });\n        });\n    }\n    accept() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new AdbBufferedStream(yield this.streams.dequeue());\n        });\n    }\n    getStreams() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return [\n                yield this.accept(),\n                yield this.accept(),\n            ];\n        });\n    }\n    dispose() {\n        // Don't await this!\n        // `reverse.remove`'s response will never arrive\n        // before we read all pending data from `videoStream`\n        this.device.reverse.remove(this.address);\n    }\n}\n//# sourceMappingURL=connection.js.map","export const DEFAULT_SERVER_PATH = '/data/local/tmp/scrcpy-server.jar';\nexport var ScrcpyLogLevel;\n(function (ScrcpyLogLevel) {\n    ScrcpyLogLevel[\"Verbose\"] = \"verbose\";\n    ScrcpyLogLevel[\"Debug\"] = \"debug\";\n    ScrcpyLogLevel[\"Info\"] = \"info\";\n    ScrcpyLogLevel[\"Warn\"] = \"warn\";\n    ScrcpyLogLevel[\"Error\"] = \"error\";\n})(ScrcpyLogLevel || (ScrcpyLogLevel = {}));\nexport var ScrcpyScreenOrientation;\n(function (ScrcpyScreenOrientation) {\n    ScrcpyScreenOrientation[ScrcpyScreenOrientation[\"Initial\"] = -2] = \"Initial\";\n    ScrcpyScreenOrientation[ScrcpyScreenOrientation[\"Unlocked\"] = -1] = \"Unlocked\";\n    ScrcpyScreenOrientation[ScrcpyScreenOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    ScrcpyScreenOrientation[ScrcpyScreenOrientation[\"Landscape\"] = 1] = \"Landscape\";\n    ScrcpyScreenOrientation[ScrcpyScreenOrientation[\"PortraitFlipped\"] = 2] = \"PortraitFlipped\";\n    ScrcpyScreenOrientation[ScrcpyScreenOrientation[\"LandscapeFlipped\"] = 3] = \"LandscapeFlipped\";\n})(ScrcpyScreenOrientation || (ScrcpyScreenOrientation = {}));\nexport function isToScrcpyOption(value) {\n    return typeof value === 'object' &&\n        value !== null &&\n        typeof value.toScrcpyOption === 'function';\n}\nexport function toScrcpyOption(value, empty) {\n    if (value === undefined) {\n        return empty;\n    }\n    if (isToScrcpyOption(value)) {\n        return value.toScrcpyOption();\n    }\n    return `${value}`;\n}\n//# sourceMappingURL=common.js.map","import Struct, { placeholder } from \"@yume-chan/struct\";\nimport { AndroidCodecLevel, AndroidCodecProfile } from \"../codec\";\nimport { ScrcpyClientForwardConnection, ScrcpyClientReverseConnection } from \"../connection\";\nimport { AndroidKeyEventAction, ScrcpyControlMessageType } from \"../message\";\nimport { ScrcpyLogLevel, ScrcpyScreenOrientation, toScrcpyOption } from \"./common\";\nexport class CodecOptions {\n    constructor({ profile = AndroidCodecProfile.Baseline, level = AndroidCodecLevel.Level4, }) {\n        this.value = {\n            profile,\n            level,\n        };\n    }\n    toScrcpyOption() {\n        return Object.entries(this.value)\n            .map(([key, value]) => `${key}=${value}`)\n            .join(',');\n    }\n}\nexport const ScrcpyBackOrScreenOnEvent1_16 = new Struct()\n    .uint8('type', placeholder());\nexport class ScrcpyOptions1_16 {\n    constructor({ logLevel = ScrcpyLogLevel.Error, maxSize = 0, bitRate = 8000000, maxFps = 0, lockVideoOrientation = ScrcpyScreenOrientation.Unlocked, tunnelForward = false, crop, sendFrameMeta = true, control = true, displayId = 0, showTouches = false, stayAwake = true, codecOptions, encoderName, }) {\n        if (new.target === ScrcpyOptions1_16 &&\n            logLevel === ScrcpyLogLevel.Verbose) {\n            logLevel = ScrcpyLogLevel.Debug;\n        }\n        if (new.target === ScrcpyOptions1_16 &&\n            lockVideoOrientation === ScrcpyScreenOrientation.Initial) {\n            lockVideoOrientation = ScrcpyScreenOrientation.Unlocked;\n        }\n        this.value = {\n            logLevel,\n            maxSize,\n            bitRate,\n            maxFps,\n            lockVideoOrientation,\n            tunnelForward,\n            crop,\n            sendFrameMeta,\n            control,\n            displayId,\n            showTouches,\n            stayAwake,\n            codecOptions,\n            encoderName,\n        };\n    }\n    getArgumnetOrder() {\n        return [\n            'logLevel',\n            'maxSize',\n            'bitRate',\n            'maxFps',\n            'lockVideoOrientation',\n            'tunnelForward',\n            'crop',\n            'sendFrameMeta',\n            'control',\n            'displayId',\n            'showTouches',\n            'stayAwake',\n            'codecOptions',\n            'encoderName',\n        ];\n    }\n    formatServerArguments() {\n        return this.getArgumnetOrder().map(key => {\n            return toScrcpyOption(this.value[key], '-');\n        });\n    }\n    formatGetEncoderListArguments() {\n        return this.getArgumnetOrder().map(key => {\n            if (key === 'encoderName') {\n                // Provide an invalid encoder name\n                // So the server will return all available encoders\n                return '_';\n            }\n            return toScrcpyOption(this.value[key], '-');\n        });\n    }\n    createConnection(device) {\n        if (this.value.tunnelForward) {\n            return new ScrcpyClientForwardConnection(device);\n        }\n        else {\n            return new ScrcpyClientReverseConnection(device);\n        }\n    }\n    getOutputEncoderNameRegex() {\n        return /^\\s+scrcpy --encoder-name '(.*?)'/;\n    }\n    createBackOrScreenOnEvent(action, device) {\n        if (action === AndroidKeyEventAction.Down) {\n            return ScrcpyBackOrScreenOnEvent1_16.serialize({ type: ScrcpyControlMessageType.BackOrScreenOn }, device.backend);\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=1_16.js.map","import Struct, { placeholder } from \"@yume-chan/struct\";\nimport { ScrcpyControlMessageType } from \"../message\";\nimport { ScrcpyOptions1_16 } from \"./1_16\";\nexport const ScrcpyBackOrScreenOnEvent1_18 = new Struct()\n    .uint8('type', placeholder())\n    .uint8('action', placeholder());\nexport class ScrcpyOptions1_18 extends ScrcpyOptions1_16 {\n    constructor(init) {\n        super(init);\n        const { powerOffOnClose = false, } = init;\n        this.value.powerOffOnClose = powerOffOnClose;\n    }\n    getArgumnetOrder() {\n        return super.getArgumnetOrder().concat(['powerOffOnClose']);\n    }\n    getOutputEncoderNameRegex() {\n        return /^\\s+scrcpy --encoder '(.*?)'/;\n    }\n    createBackOrScreenOnEvent(action, device) {\n        return ScrcpyBackOrScreenOnEvent1_18.serialize({\n            type: ScrcpyControlMessageType.BackOrScreenOn,\n            action,\n        }, device.backend);\n    }\n}\n//# sourceMappingURL=1_18.js.map","import { ScrcpyOptions1_18 } from './1_18';\nimport { toScrcpyOption } from \"./common\";\nfunction toSnakeCase(input) {\n    return input.replace(/([A-Z])/g, '_$1').toLowerCase();\n}\nexport class ScrcpyOptions1_21 extends ScrcpyOptions1_18 {\n    constructor(init) {\n        super(init);\n        const { clipboardAutosync = true, } = init;\n        this.value.clipboardAutosync = clipboardAutosync;\n    }\n    formatServerArguments() {\n        return Object.entries(this.value).map(([key, value]) => {\n            return `${toSnakeCase(key)}=${toScrcpyOption(value, '')}`;\n        });\n    }\n    formatGetEncoderListArguments() {\n        return Object.entries(this.value).map(([key, value]) => {\n            if (key === 'encoderName') {\n                value = '_';\n            }\n            return `${toSnakeCase(key)}=${toScrcpyOption(value, '')}`;\n        });\n    }\n}\n//# sourceMappingURL=1_21.js.map","import { __awaiter } from \"tslib\";\nimport { DEFAULT_SERVER_PATH } from \"./options\";\nexport function pushServer(device, file, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { path = DEFAULT_SERVER_PATH, onProgress, } = options;\n        const sync = yield device.sync();\n        return sync.write(path, file, undefined, undefined, onProgress);\n    });\n}\n//# sourceMappingURL=push-server.js.map","class BitReader {\n    constructor(buffer) {\n        this.bytePosition = 0;\n        this.bitPosition = 0;\n        this.buffer = buffer;\n    }\n    read(length) {\n        let result = 0;\n        for (let i = 0; i < length; i += 1) {\n            result = (result << 1) | this.next();\n        }\n        return result;\n    }\n    next() {\n        const value = (this.buffer[this.bytePosition] >> (7 - this.bitPosition)) & 1;\n        this.bitPosition += 1;\n        if (this.bitPosition === 8) {\n            this.bytePosition += 1;\n            this.bitPosition = 0;\n        }\n        return value;\n    }\n    decodeExponentialGolombNumber() {\n        let length = 0;\n        while (this.next() === 0) {\n            length += 1;\n        }\n        if (length === 0) {\n            return 0;\n        }\n        return (1 << length | this.read(length)) - 1;\n    }\n}\nfunction* iterateNalu(buffer) {\n    // -1 means we haven't found the first start code\n    let start = -1;\n    let writeIndex = 0;\n    // How many `0x00`s in a row we have counted\n    let zeroCount = 0;\n    let inEmulation = false;\n    for (const byte of buffer) {\n        buffer[writeIndex] = byte;\n        writeIndex += 1;\n        if (inEmulation) {\n            if (byte > 0x03) {\n                // `0x00000304` or larger are invalid\n                throw new Error('Invalid data');\n            }\n            inEmulation = false;\n            continue;\n        }\n        if (byte == 0x00) {\n            zeroCount += 1;\n            continue;\n        }\n        const lastZeroCount = zeroCount;\n        zeroCount = 0;\n        if (start === -1) {\n            // 0x000001 is the start code\n            // But it can be preceded by any number of zeros\n            // So 2 is the minimal\n            if (lastZeroCount >= 2 && byte === 0x01) {\n                // Found start of first NAL unit\n                writeIndex = 0;\n                start = 0;\n                continue;\n            }\n            // Not begin with start code\n            throw new Error('Invalid data');\n        }\n        if (lastZeroCount < 2) {\n            // zero or one `0x00`s are acceptable\n            continue;\n        }\n        if (byte === 0x01) {\n            // Remove all leading `0x00`s and this `0x01`\n            writeIndex -= lastZeroCount + 1;\n            // Found another NAL unit\n            yield buffer.subarray(start, writeIndex);\n            start = writeIndex;\n            continue;\n        }\n        if (lastZeroCount > 2) {\n            // Too much `0x00`s\n            throw new Error('Invalid data');\n        }\n        switch (byte) {\n            case 0x02:\n                // Didn't find why, but 7.4.1 NAL unit semantics forbids `0x000002` appearing in NAL units\n                throw new Error('Invalid data');\n            case 0x03:\n                // `0x000003` is the \"emulation_prevention_three_byte\"\n                // `0x00000300`, `0x00000301`, `0x00000302` and `0x00000303` represent\n                // `0x000000`, `0x000001`, `0x000002` and `0x000003` respectively\n                // Remove current byte\n                writeIndex -= 1;\n                inEmulation = true;\n                break;\n            default:\n                // `0x000004` or larger are ok\n                break;\n        }\n    }\n    if (inEmulation || zeroCount !== 0) {\n        throw new Error('Invalid data');\n    }\n    yield buffer.subarray(start, writeIndex);\n}\n// 7.3.2.1.1 Sequence parameter set data syntax\nexport function parse_sequence_parameter_set(buffer) {\n    for (const nalu of iterateNalu(new Uint8Array(buffer))) {\n        const reader = new BitReader(nalu);\n        if (reader.next() !== 0) {\n            throw new Error('Invalid data');\n        }\n        const nal_ref_idc = reader.read(2);\n        const nal_unit_type = reader.read(5);\n        if (nal_unit_type !== 7) {\n            continue;\n        }\n        if (nal_ref_idc === 0) {\n            throw new Error('Invalid data');\n        }\n        const profile_idc = reader.read(8);\n        const constraint_set = reader.read(8);\n        const constraint_set_reader = new BitReader(new Uint8Array([constraint_set]));\n        const constraint_set0_flag = !!constraint_set_reader.next();\n        const constraint_set1_flag = !!constraint_set_reader.next();\n        const constraint_set2_flag = !!constraint_set_reader.next();\n        const constraint_set3_flag = !!constraint_set_reader.next();\n        const constraint_set4_flag = !!constraint_set_reader.next();\n        const constraint_set5_flag = !!constraint_set_reader.next();\n        // reserved_zero_2bits\n        if (constraint_set_reader.read(2) !== 0) {\n            throw new Error('Invalid data');\n        }\n        const level_idc = reader.read(8);\n        const seq_parameter_set_id = reader.decodeExponentialGolombNumber();\n        if (profile_idc === 100 || profile_idc === 110 ||\n            profile_idc === 122 || profile_idc === 244 || profile_idc === 44 ||\n            profile_idc === 83 || profile_idc === 86 || profile_idc === 118 ||\n            profile_idc === 128 || profile_idc === 138 || profile_idc === 139 ||\n            profile_idc === 134) {\n            const chroma_format_idc = reader.decodeExponentialGolombNumber();\n            if (chroma_format_idc === 3) {\n                const separate_colour_plane_flag = !!reader.next();\n            }\n            const bit_depth_luma_minus8 = reader.decodeExponentialGolombNumber();\n            const bit_depth_chroma_minus8 = reader.decodeExponentialGolombNumber();\n            const qpprime_y_zero_transform_bypass_flag = !!reader.next();\n            const seq_scaling_matrix_present_flag = !!reader.next();\n            if (seq_scaling_matrix_present_flag) {\n                const seq_scaling_list_present_flag = [];\n                for (let i = 0; i < ((chroma_format_idc !== 3) ? 8 : 12); i++) {\n                    seq_scaling_list_present_flag[i] = !!reader.next();\n                    if (seq_scaling_list_present_flag[i])\n                        if (i < 6) {\n                            // TODO\n                            // scaling_list( ScalingList4x4[ i ], 16,\n                            //               UseDefaultScalingMatrix4x4Flag[ i ])\n                        }\n                        else {\n                            // TODO\n                            // scaling_list( ScalingList8x8[ i − 6 ], 64,\n                            //               UseDefaultScalingMatrix8x8Flag[ i − 6 ] )\n                        }\n                }\n            }\n        }\n        const log2_max_frame_num_minus4 = reader.decodeExponentialGolombNumber();\n        const pic_order_cnt_type = reader.decodeExponentialGolombNumber();\n        if (pic_order_cnt_type === 0) {\n            const log2_max_pic_order_cnt_lsb_minus4 = reader.decodeExponentialGolombNumber();\n        }\n        else if (pic_order_cnt_type === 1) {\n            const delta_pic_order_always_zero_flag = reader.next();\n            const offset_for_non_ref_pic = reader.decodeExponentialGolombNumber();\n            const offset_for_top_to_bottom_field = reader.decodeExponentialGolombNumber();\n            const num_ref_frames_in_pic_order_cnt_cycle = reader.decodeExponentialGolombNumber();\n            const offset_for_ref_frame = [];\n            for (let i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\n                offset_for_ref_frame[i] = reader.decodeExponentialGolombNumber();\n            }\n        }\n        const max_num_ref_frames = reader.decodeExponentialGolombNumber();\n        const gaps_in_frame_num_value_allowed_flag = reader.next();\n        const pic_width_in_mbs_minus1 = reader.decodeExponentialGolombNumber();\n        const pic_height_in_map_units_minus1 = reader.decodeExponentialGolombNumber();\n        const frame_mbs_only_flag = reader.next();\n        if (!frame_mbs_only_flag) {\n            const mb_adaptive_frame_field_flag = !!reader.next();\n        }\n        const direct_8x8_inference_flag = reader.next();\n        const frame_cropping_flag = !!reader.next();\n        let frame_crop_left_offset;\n        let frame_crop_right_offset;\n        let frame_crop_top_offset;\n        let frame_crop_bottom_offset;\n        if (frame_cropping_flag) {\n            frame_crop_left_offset = reader.decodeExponentialGolombNumber();\n            frame_crop_right_offset = reader.decodeExponentialGolombNumber();\n            frame_crop_top_offset = reader.decodeExponentialGolombNumber();\n            frame_crop_bottom_offset = reader.decodeExponentialGolombNumber();\n        }\n        else {\n            frame_crop_left_offset = 0;\n            frame_crop_right_offset = 0;\n            frame_crop_top_offset = 0;\n            frame_crop_bottom_offset = 0;\n        }\n        const vui_parameters_present_flag = !!reader.next();\n        if (vui_parameters_present_flag) {\n            // TODO\n            // vui_parameters( )\n        }\n        return {\n            profile_idc,\n            constraint_set,\n            constraint_set0_flag,\n            constraint_set1_flag,\n            constraint_set2_flag,\n            constraint_set3_flag,\n            constraint_set4_flag,\n            constraint_set5_flag,\n            level_idc,\n            seq_parameter_set_id,\n            pic_width_in_mbs_minus1,\n            pic_height_in_map_units_minus1,\n            frame_mbs_only_flag,\n            frame_cropping_flag,\n            frame_crop_left_offset,\n            frame_crop_right_offset,\n            frame_crop_top_offset,\n            frame_crop_bottom_offset,\n        };\n    }\n    throw new Error('Invalid data');\n}\n//# sourceMappingURL=sps.js.map","import { __awaiter } from \"tslib\";\nimport { AdbLegacyShell, DataEventEmitter } from '@yume-chan/adb';\nimport { PromiseResolver } from '@yume-chan/async';\nimport { EventEmitter } from '@yume-chan/event';\nimport Struct from '@yume-chan/struct';\nimport { AndroidMotionEventAction, ScrcpyControlMessageType, ScrcpyInjectKeyCodeControlMessage, ScrcpyInjectScrollControlMessage, ScrcpyInjectTextControlMessage, ScrcpyInjectTouchControlMessage } from './message';\nimport { ScrcpyLogLevel } from \"./options\";\nimport { pushServer } from \"./push-server\";\nimport { parse_sequence_parameter_set } from './sps';\nclass LineReader {\n    constructor(text) {\n        this.start = 0;\n        this.peekEnd = 0;\n        this.text = text;\n    }\n    next() {\n        let result = this.peek();\n        this.start = this.peekEnd;\n        this.peekEnd = 0;\n        return result;\n    }\n    peek() {\n        if (this.peekEnd) {\n            return this.peekLine;\n        }\n        const index = this.text.indexOf('\\n', this.start);\n        if (index === -1) {\n            this.peekLine = undefined;\n            this.peekEnd = this.text.length;\n            return undefined;\n        }\n        const line = this.text.substring(this.start, index);\n        this.peekLine = line;\n        this.peekEnd = index + 1;\n        return line;\n    }\n}\nfunction* parseScrcpyOutput(text) {\n    const lines = new LineReader(text);\n    let line;\n    while ((line = lines.next()) !== undefined) {\n        if (line === '') {\n            continue;\n        }\n        if (line.startsWith('[server] ')) {\n            line = line.substring('[server] '.length);\n            if (line.startsWith('DEBUG: ')) {\n                yield {\n                    level: ScrcpyLogLevel.Debug,\n                    message: line.substring('DEBUG: '.length),\n                };\n                continue;\n            }\n            if (line.startsWith('INFO: ')) {\n                yield {\n                    level: ScrcpyLogLevel.Info,\n                    message: line.substring('INFO: '.length),\n                };\n                continue;\n            }\n            if (line.startsWith('ERROR: ')) {\n                line = line.substring('ERROR: '.length);\n                const message = line;\n                let error;\n                if (line.startsWith('Exception on thread')) {\n                    if (line = lines.next()) {\n                        const [errorType, errorMessage] = line.split(': ', 2);\n                        const stackTrace = [];\n                        while (line = lines.peek()) {\n                            if (line.startsWith('\\t')) {\n                                stackTrace.push(line.trim());\n                                lines.next();\n                                continue;\n                            }\n                            break;\n                        }\n                        error = {\n                            type: errorType,\n                            message: errorMessage,\n                            stackTrace,\n                        };\n                    }\n                }\n                yield {\n                    level: ScrcpyLogLevel.Error,\n                    message,\n                    error,\n                };\n                continue;\n            }\n        }\n        yield {\n            level: ScrcpyLogLevel.Info,\n            message: line,\n        };\n    }\n}\nconst Size = new Struct()\n    .uint16('width')\n    .uint16('height');\nconst VideoPacket = new Struct()\n    .int64('pts')\n    .uint32('size')\n    .arrayBuffer('data', { lengthField: 'size' });\nexport const NoPts = BigInt(-1);\nconst ClipboardMessage = new Struct()\n    .uint32('length')\n    .string('content', { lengthField: 'length' });\nexport class ScrcpyClient {\n    constructor(device) {\n        this.debugEvent = new EventEmitter();\n        this.infoEvent = new EventEmitter();\n        this.errorEvent = new EventEmitter();\n        this.closeEvent = new EventEmitter();\n        this._running = false;\n        this.sizeChangedEvent = new EventEmitter();\n        this.videoDataEvent = new DataEventEmitter();\n        this.clipboardChangeEvent = new EventEmitter();\n        this.sendingTouchMessage = false;\n        this.device = device;\n    }\n    static pushServer(device, file, options) {\n        pushServer(device, file, options);\n    }\n    static getEncoders(device, path, version, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const client = new ScrcpyClient(device);\n            const encoderNameRegex = options.getOutputEncoderNameRegex();\n            const resolver = new PromiseResolver();\n            const encoders = [];\n            client.onError(({ message, error }) => {\n                if (error && error.type !== 'com.genymobile.scrcpy.InvalidEncoderException') {\n                    resolver.reject(new Error(`${error.type}: ${error.message}`));\n                    return;\n                }\n                const match = message.match(encoderNameRegex);\n                if (match) {\n                    encoders.push(match[1]);\n                }\n            });\n            client.onClose(() => {\n                resolver.resolve(encoders);\n            });\n            // Scrcpy server will open connections, before initializing encoder\n            // Thus although an invalid encoder name is given, the start process will success\n            yield client.startCore(path, version, options.formatGetEncoderListArguments(), options.createConnection(device));\n            return resolver.promise;\n        });\n    }\n    get backend() { return this.device.backend; }\n    get onDebug() { return this.debugEvent.event; }\n    get onInfo() { return this.infoEvent.event; }\n    get onError() { return this.errorEvent.event; }\n    get onClose() { return this.closeEvent.event; }\n    get running() { return this._running; }\n    get screenWidth() { return this._screenWidth; }\n    get screenHeight() { return this._screenHeight; }\n    get onSizeChanged() { return this.sizeChangedEvent.event; }\n    get onVideoData() { return this.videoDataEvent.event; }\n    get onClipboardChange() { return this.clipboardChangeEvent.event; }\n    startCore(path, version, serverArguments, connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let process;\n            try {\n                yield connection.initialize();\n                process = yield this.device.childProcess.spawn([\n                    `CLASSPATH=${path}`,\n                    'app_process',\n                    /* unused */ '/',\n                    'com.genymobile.scrcpy.Server',\n                    version,\n                    ...serverArguments\n                ], {\n                    // Scrcpy server doesn't split stdout and stderr,\n                    // so disable Shell Protocol to simplify processing\n                    shells: [AdbLegacyShell],\n                });\n                process.onStdout(this.handleProcessOutput, this);\n                const resolver = new PromiseResolver();\n                const removeExitListener = process.onExit(() => {\n                    resolver.reject(new Error('scrcpy server exited prematurely'));\n                });\n                const [videoStream, controlStream] = yield Promise.race([\n                    resolver.promise,\n                    connection.getStreams(),\n                ]);\n                removeExitListener();\n                this.process = process;\n                this.process.onExit(this.handleProcessClosed, this);\n                this.videoStream = videoStream;\n                this.controlStream = controlStream;\n                this._running = true;\n                this.receiveVideo();\n                this.receiveControl();\n            }\n            catch (e) {\n                yield (process === null || process === void 0 ? void 0 : process.kill());\n                throw e;\n            }\n            finally {\n                connection.dispose();\n            }\n        });\n    }\n    start(path, version, options) {\n        this.options = options;\n        return this.startCore(path, version, options.formatServerArguments(), options.createConnection(this.device));\n    }\n    handleProcessOutput(data) {\n        const string = this.device.backend.decodeUtf8(data);\n        for (const output of parseScrcpyOutput(string)) {\n            switch (output.level) {\n                case ScrcpyLogLevel.Debug:\n                    this.debugEvent.fire(output.message);\n                    break;\n                case ScrcpyLogLevel.Info:\n                    this.infoEvent.fire(output.message);\n                    break;\n                case ScrcpyLogLevel.Error:\n                    this.errorEvent.fire(output);\n                    break;\n            }\n        }\n    }\n    handleProcessClosed() {\n        this._running = false;\n        this.closeEvent.fire();\n    }\n    receiveVideo() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.videoStream) {\n                throw new Error('receiveVideo started before initialization');\n            }\n            try {\n                // Device name, we don't need it\n                yield this.videoStream.read(64);\n                // Initial video size\n                const { width, height } = yield Size.deserialize(this.videoStream);\n                this._screenWidth = width;\n                this._screenHeight = height;\n                let buffer;\n                while (this._running) {\n                    const { pts, data } = yield VideoPacket.deserialize(this.videoStream);\n                    if (!data || data.byteLength === 0) {\n                        continue;\n                    }\n                    if (pts === NoPts) {\n                        const sequenceParameterSet = parse_sequence_parameter_set(data.slice(0));\n                        const { pic_width_in_mbs_minus1, pic_height_in_map_units_minus1, frame_mbs_only_flag, frame_crop_left_offset, frame_crop_right_offset, frame_crop_top_offset, frame_crop_bottom_offset, } = sequenceParameterSet;\n                        const width = (pic_width_in_mbs_minus1 + 1) * 16;\n                        const height = (pic_height_in_map_units_minus1 + 1) * (2 - frame_mbs_only_flag) * 16;\n                        const cropLeft = frame_crop_left_offset * 2;\n                        const cropRight = frame_crop_right_offset * 2;\n                        const cropTop = frame_crop_top_offset * 2;\n                        const cropBottom = frame_crop_bottom_offset * 2;\n                        const screenWidth = width - cropLeft - cropRight;\n                        const screenHeight = height - cropTop - cropBottom;\n                        this._screenWidth = screenWidth;\n                        this._screenHeight = screenHeight;\n                        this.sizeChangedEvent.fire({\n                            sequenceParameterSet,\n                            width,\n                            height,\n                            cropLeft: cropLeft,\n                            cropRight: cropRight,\n                            cropTop: cropTop,\n                            cropBottom: cropBottom,\n                            croppedWidth: screenWidth,\n                            croppedHeight: screenHeight,\n                        });\n                        buffer = data;\n                        continue;\n                    }\n                    let array;\n                    if (buffer) {\n                        array = new Uint8Array(buffer.byteLength + data.byteLength);\n                        array.set(new Uint8Array(buffer));\n                        array.set(new Uint8Array(data), buffer.byteLength);\n                        buffer = undefined;\n                    }\n                    else {\n                        array = new Uint8Array(data);\n                    }\n                    yield this.videoDataEvent.fire({\n                        pts,\n                        size: array.byteLength,\n                        data: array.buffer,\n                    });\n                }\n            }\n            catch (e) {\n                if (!this._running) {\n                    return;\n                }\n            }\n        });\n    }\n    receiveControl() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.controlStream) {\n                throw new Error('receiveControl started before initialization');\n            }\n            try {\n                while (true) {\n                    const type = yield this.controlStream.read(1);\n                    switch (new Uint8Array(type)[0]) {\n                        case 0:\n                            const { content } = yield ClipboardMessage.deserialize(this.controlStream);\n                            this.clipboardChangeEvent.fire(content);\n                            break;\n                        default:\n                            throw new Error('unknown control message type');\n                    }\n                }\n            }\n            catch (e) {\n                if (!this._running) {\n                    return;\n                }\n            }\n        });\n    }\n    injectKeyCode(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.controlStream) {\n                throw new Error('injectKeyCode called before initialization');\n            }\n            yield this.controlStream.write(ScrcpyInjectKeyCodeControlMessage.serialize(Object.assign(Object.assign({}, message), { type: ScrcpyControlMessageType.InjectKeycode }), this.backend));\n        });\n    }\n    injectText(text) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.controlStream) {\n                throw new Error('injectText called before initialization');\n            }\n            yield this.controlStream.write(ScrcpyInjectTextControlMessage.serialize({\n                type: ScrcpyControlMessageType.InjectText,\n                text,\n            }, this.backend));\n        });\n    }\n    injectTouch(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.controlStream) {\n                throw new Error('injectTouch called before initialization');\n            }\n            if (!this.screenWidth || !this.screenHeight) {\n                return;\n            }\n            // ADB streams are actually pretty low-bandwidth and laggy\n            // Re-sample move events to avoid flooding the connection\n            if (this.sendingTouchMessage &&\n                message.action === AndroidMotionEventAction.Move) {\n                return;\n            }\n            this.sendingTouchMessage = true;\n            const buffer = ScrcpyInjectTouchControlMessage.serialize(Object.assign(Object.assign({}, message), { type: ScrcpyControlMessageType.InjectTouch, screenWidth: this.screenWidth, screenHeight: this.screenHeight }), this.backend);\n            yield this.controlStream.write(buffer);\n            this.sendingTouchMessage = false;\n        });\n    }\n    injectScroll(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.controlStream) {\n                throw new Error('injectScroll called before initialization');\n            }\n            if (!this.screenWidth || !this.screenHeight) {\n                return;\n            }\n            const buffer = ScrcpyInjectScrollControlMessage.serialize(Object.assign(Object.assign({}, message), { type: ScrcpyControlMessageType.InjectScroll, screenWidth: this.screenWidth, screenHeight: this.screenHeight }), this.backend);\n            yield this.controlStream.write(buffer);\n        });\n    }\n    pressBackOrTurnOnScreen(action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.controlStream) {\n                throw new Error('pressBackOrTurnOnScreen called before initialization');\n            }\n            const buffer = this.options.createBackOrScreenOnEvent(action, this.device);\n            if (buffer) {\n                yield this.controlStream.write(buffer);\n            }\n        });\n    }\n    close() {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._running) {\n                return;\n            }\n            this._running = false;\n            (_a = this.videoStream) === null || _a === void 0 ? void 0 : _a.close();\n            (_b = this.controlStream) === null || _b === void 0 ? void 0 : _b.close();\n            yield ((_c = this.process) === null || _c === void 0 ? void 0 : _c.kill());\n        });\n    }\n}\n//# sourceMappingURL=client.js.map","import { PromiseResolver } from '@yume-chan/async';\nimport { AutoDisposable, EventEmitter } from '@yume-chan/event';\nlet worker;\nlet workerReady = false;\nconst pendingResolvers = [];\nlet streamId = 0;\nconst pictureReadyEvent = new EventEmitter();\nexport class TinyH264Wrapper extends AutoDisposable {\n    constructor(streamId) {\n        super();\n        this.pictureReadyEvent = new EventEmitter();\n        this.streamId = streamId;\n        this.addDisposable(pictureReadyEvent.event(this.handlePictureReady, this));\n    }\n    get onPictureReady() { return this.pictureReadyEvent.event; }\n    handlePictureReady(e) {\n        if (e.renderStateId === this.streamId) {\n            this.pictureReadyEvent.fire(e);\n        }\n    }\n    feed(data) {\n        worker.postMessage({\n            type: 'decode',\n            data: data,\n            offset: 0,\n            length: data.byteLength,\n            renderStateId: this.streamId,\n        }, [data]);\n    }\n    dispose() {\n        super.dispose();\n        worker.postMessage({\n            type: 'release',\n            renderStateId: this.streamId,\n        });\n    }\n}\nexport function createTinyH264Wrapper() {\n    if (!worker) {\n        worker = new Worker(new URL('./worker.js', import.meta.url), { type: 'module' });\n        worker.addEventListener('message', (e) => {\n            const { data } = e;\n            switch (data.type) {\n                case 'decoderReady':\n                    workerReady = true;\n                    for (const resolver of pendingResolvers) {\n                        resolver.resolve(new TinyH264Wrapper(streamId));\n                        streamId += 1;\n                    }\n                    pendingResolvers.length = 0;\n                    break;\n                case 'pictureReady':\n                    pictureReadyEvent.fire(data);\n                    break;\n            }\n        });\n    }\n    if (!workerReady) {\n        const resolver = new PromiseResolver();\n        pendingResolvers.push(resolver);\n        return resolver.promise;\n    }\n    const decoder = new TinyH264Wrapper(streamId);\n    streamId += 1;\n    return Promise.resolve(decoder);\n}\n//# sourceMappingURL=wrapper.js.map","import { __awaiter } from \"tslib\";\nimport { PromiseResolver } from \"@yume-chan/async\";\nimport { AndroidCodecLevel, AndroidCodecProfile } from \"../../codec\";\nimport { createTinyH264Wrapper } from \"./wrapper\";\nlet cachedInitializePromise;\nfunction initialize() {\n    if (!cachedInitializePromise) {\n        cachedInitializePromise = Promise.all([import('yuv-buffer'), import('yuv-canvas')]).then(([YuvBuffer, { default: YuvCanvas }]) => ({\n            YuvBuffer, YuvCanvas\n        }));\n    }\n    return cachedInitializePromise;\n}\nexport class TinyH264Decoder {\n    constructor() {\n        this.maxProfile = AndroidCodecProfile.Baseline;\n        this.maxLevel = AndroidCodecLevel.Level4;\n        initialize();\n        this._element = document.createElement('canvas');\n    }\n    get element() { return this._element; }\n    setSize(size) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.dispose();\n            this._initializer = new PromiseResolver();\n            const { YuvBuffer, YuvCanvas } = yield initialize();\n            if (!this._yuvCanvas) {\n                this._yuvCanvas = YuvCanvas.attach(this._element);\n                ;\n            }\n            const { width, height } = size;\n            const chromaWidth = width / 2;\n            const chromaHeight = height / 2;\n            this._element.width = size.croppedWidth;\n            this._element.height = size.croppedHeight;\n            const format = YuvBuffer.format({\n                width,\n                height,\n                chromaWidth,\n                chromaHeight,\n                cropLeft: size.cropLeft,\n                cropTop: size.cropTop,\n                cropWidth: size.croppedWidth,\n                cropHeight: size.croppedHeight,\n                displayWidth: size.croppedWidth,\n                displayHeight: size.croppedHeight,\n            });\n            const wrapper = yield createTinyH264Wrapper();\n            this._initializer.resolve(wrapper);\n            const uPlaneOffset = width * height;\n            const vPlaneOffset = uPlaneOffset + chromaWidth * chromaHeight;\n            wrapper.onPictureReady(({ data }) => {\n                const array = new Uint8Array(data);\n                const frame = YuvBuffer.frame(format, YuvBuffer.lumaPlane(format, array, width, 0), YuvBuffer.chromaPlane(format, array, chromaWidth, uPlaneOffset), YuvBuffer.chromaPlane(format, array, chromaWidth, vPlaneOffset));\n                this._yuvCanvas.drawFrame(frame);\n            });\n        });\n    }\n    feed(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._initializer) {\n                throw new Error('Decoder not initialized');\n            }\n            const wrapper = yield this._initializer.promise;\n            wrapper.feed(data);\n        });\n    }\n    dispose() {\n        var _a;\n        (_a = this._initializer) === null || _a === void 0 ? void 0 : _a.promise.then(wrapper => wrapper.dispose());\n        this._initializer = undefined;\n    }\n}\n//# sourceMappingURL=index.js.map","import { AndroidCodecLevel, AndroidCodecProfile } from \"../../codec\";\nfunction toHex(value) {\n    return value.toString(16).padStart(2, '0').toUpperCase();\n}\nexport class WebCodecsDecoder {\n    constructor() {\n        this.maxProfile = AndroidCodecProfile.High;\n        this.maxLevel = AndroidCodecLevel.Level5;\n        this._element = document.createElement('canvas');\n        this.context = this._element.getContext('2d');\n        this.decoder = new VideoDecoder({\n            output: (frame) => {\n                this.context.drawImage(frame, 0, 0);\n                frame.close();\n            },\n            error() { },\n        });\n    }\n    get element() { return this._element; }\n    setSize(size) {\n        const { sequenceParameterSet: { profile_idc, constraint_set, level_idc } } = size;\n        this._element.width = size.croppedWidth;\n        this._element.height = size.croppedHeight;\n        // https://www.rfc-editor.org/rfc/rfc6381#section-3.3\n        // ISO Base Media File Format Name Space\n        const codec = `avc1.${[profile_idc, constraint_set, level_idc].map(toHex).join('')}`;\n        this.decoder.configure({\n            codec: codec,\n            optimizeForLatency: true,\n        });\n    }\n    feed(data) {\n        this.decoder.decode(new EncodedVideoChunk({\n            type: 'key',\n            timestamp: 0,\n            data,\n        }));\n    }\n    dispose() {\n        this.decoder.close();\n    }\n}\n//# sourceMappingURL=index.js.map","export default '1.21';","import { CommandBar, Dialog, Dropdown, ICommandBarItemProps, Icon, IconButton, IDropdownOption, LayerHost, Position, ProgressIndicator, SpinButton, Stack, Toggle, TooltipHost } from \"@fluentui/react\";\nimport { useId } from \"@fluentui/react-hooks\";\nimport { EventEmitter } from \"@yume-chan/event\";\nimport { AndroidKeyCode, AndroidKeyEventAction, AndroidMotionEventAction, CodecOptions, DEFAULT_SERVER_PATH, H264Decoder, H264DecoderConstructor, pushServer, ScrcpyClient, ScrcpyLogLevel, ScrcpyOptions1_21, ScrcpyScreenOrientation, TinyH264Decoder, WebCodecsDecoder } from \"@yume-chan/scrcpy\";\nimport { action, autorun, makeAutoObservable, observable, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport React, { useEffect, useState } from \"react\";\nimport { DemoMode, DeviceView, DeviceViewRef, ExternalLink } from \"../components\";\nimport { global } from \"../state\";\nimport { CommonStackTokens, formatSpeed, Icons, RouteStackProps } from \"../utils\";\nimport SCRCPY_SERVER_VERSION from '@yume-chan/scrcpy/bin/version';\n\nconst SERVER_URL = new URL('@yume-chan/scrcpy/bin/scrcpy-server?url', import.meta.url).toString();\n\nclass FetchWithProgress {\n    public readonly promise: Promise<ArrayBuffer>;\n\n    private _downloaded = 0;\n    public get downloaded() { return this._downloaded; }\n\n    private _total = 0;\n    public get total() { return this._total; }\n\n    private progressEvent = new EventEmitter<[download: number, total: number]>();\n    public get onProgress() { return this.progressEvent.event; }\n\n    public constructor(url: string) {\n        this.promise = this.fetch(url);\n    }\n\n    private async fetch(url: string) {\n        const response = await window.fetch(url);\n        this._total = Number.parseInt(response.headers.get('Content-Length') ?? '0', 10);\n        this.progressEvent.fire([this._downloaded, this._total]);\n\n        const reader = response.body!.getReader();\n        const chunks: Uint8Array[] = [];\n        while (true) {\n            const result = await reader.read();\n            if (result.done) {\n                break;\n            }\n            chunks.push(result.value);\n            this._downloaded += result.value.byteLength;\n            this.progressEvent.fire([this._downloaded, this._total]);\n        }\n\n        this._total = chunks.reduce((result, item) => result + item.byteLength, 0);\n        const result = new Uint8Array(this._total);\n        let position = 0;\n        for (const chunk of chunks) {\n            result.set(chunk, position);\n            position += chunk.byteLength;\n        }\n        return result.buffer;\n    }\n}\n\nlet cachedValue: FetchWithProgress | undefined;\nfunction fetchServer(onProgress?: (e: [downloaded: number, total: number]) => void) {\n    if (!cachedValue) {\n        cachedValue = new FetchWithProgress(SERVER_URL);\n        cachedValue.promise.catch((e) => {\n            cachedValue = undefined;\n        });\n    }\n\n    if (onProgress) {\n        cachedValue.onProgress(onProgress);\n        onProgress([cachedValue.downloaded, cachedValue.total]);\n    }\n\n    return cachedValue.promise;\n}\n\nfunction clamp(value: number, min: number, max: number): number {\n    if (value < min) {\n        return min;\n    }\n\n    if (value > max) {\n        return max;\n    }\n\n    return value;\n}\n\nclass KeyRepeater {\n    key: AndroidKeyCode;\n    client: ScrcpyClient;\n\n    delay: number;\n    interval: number;\n\n    onRelease: VoidFunction | undefined;\n\n    constructor(key: AndroidKeyCode, client: ScrcpyClient, delay = 0, interval = 0) {\n        this.key = key;\n        this.client = client;\n\n        this.delay = delay;\n        this.interval = interval;\n    }\n\n    async press() {\n        await this.client.injectKeyCode({\n            action: AndroidKeyEventAction.Down,\n            keyCode: this.key,\n            repeat: 0,\n            metaState: 0,\n        });\n\n        if (this.delay === 0) {\n            return;\n        }\n\n        const timeoutId = setTimeout(async () => {\n            await this.client.injectKeyCode({\n                action: AndroidKeyEventAction.Down,\n                keyCode: this.key,\n                repeat: 1,\n                metaState: 0,\n            });\n\n            if (this.interval === 0) {\n                return;\n            }\n\n            const intervalId = setInterval(async () => {\n                await this.client.injectKeyCode({\n                    action: AndroidKeyEventAction.Down,\n                    keyCode: this.key,\n                    repeat: 1,\n                    metaState: 0,\n                });\n            }, this.interval);\n            this.onRelease = () => clearInterval(intervalId);\n        }, this.delay);\n        this.onRelease = () => clearTimeout(timeoutId);\n    }\n\n    async release() {\n        this.onRelease?.();\n\n        await this.client.injectKeyCode({\n            action: AndroidKeyEventAction.Up,\n            keyCode: this.key,\n            repeat: 0,\n            metaState: 0,\n        });\n    }\n}\n\nclass ScrcpyPageState {\n    running = false;\n\n    deviceView: DeviceViewRef | null = null;\n    rendererContainer: HTMLDivElement | null = null;\n\n    settingsVisible = false;\n    demoModeVisible = false;\n\n    width = 0;\n    height = 0;\n\n    client: ScrcpyClient | undefined = undefined;\n\n    encoders: string[] = [];\n    selectedEncoder: string | undefined = undefined;\n\n    decoders: { name: string; factory: H264DecoderConstructor; }[] = [{\n        name: 'TinyH264 (Software)',\n        factory: TinyH264Decoder,\n    }];\n    selectedDecoder: { name: string, factory: H264DecoderConstructor; } = this.decoders[0];\n    decoder: H264Decoder | undefined = undefined;\n\n    resolution = 1080;\n    bitRate = 4_000_000;\n    tunnelForward = false;\n\n    connecting = false;\n    serverTotalSize = 0;\n    serverDownloadedSize = 0;\n    debouncedServerDownloadedSize = 0;\n    serverDownloadSpeed = 0;\n    serverUploadedSize = 0;\n    debouncedServerUploadedSize = 0;\n    serverUploadSpeed = 0;\n\n    homeKeyRepeater: KeyRepeater | undefined = undefined;\n    appSwitchKeyRepeater: KeyRepeater | undefined = undefined;\n\n    get commandBarItems() {\n        const result: ICommandBarItemProps[] = [];\n\n        if (!this.running) {\n            result.push({\n                key: 'start',\n                disabled: !global.device,\n                iconProps: { iconName: Icons.Play },\n                text: 'Start',\n                onClick: this.start as VoidFunction,\n            });\n        } else {\n            result.push({\n                key: 'stop',\n                iconProps: { iconName: Icons.Stop },\n                text: 'Stop',\n                onClick: this.stop,\n            });\n        }\n\n        result.push({\n            key: 'fullscreen',\n            disabled: !this.running,\n            iconProps: { iconName: Icons.FullScreenMaximize },\n            text: 'Fullscreen',\n            onClick: () => { this.deviceView?.enterFullscreen(); },\n        });\n\n        return result;\n    }\n\n    get commandBarFarItems() {\n        return [\n            {\n                key: 'Settings',\n                iconProps: { iconName: 'Settings' },\n                checked: this.settingsVisible,\n                text: 'Settings',\n                onClick: action(() => {\n                    this.settingsVisible = !this.settingsVisible;\n                }),\n            },\n            {\n                key: 'DemoMode',\n                iconProps: { iconName: Icons.Wand },\n                checked: this.demoModeVisible,\n                text: 'Demo Mode Settings',\n                onClick: action(() => {\n                    this.demoModeVisible = !this.demoModeVisible;\n                }),\n            },\n            {\n                key: 'info',\n                iconProps: { iconName: Icons.Info },\n                iconOnly: true,\n                tooltipHostProps: {\n                    content: (\n                        <>\n                            <p>\n                                <ExternalLink href=\"https://github.com/Genymobile/scrcpy\" spaceAfter>Scrcpy</ExternalLink>\n                                developed by Genymobile can display the screen with low latency (1~2 frames) and control the device, all without root access.\n                            </p>\n                            <p>\n                                This is a TypeScript implementation of the client part. Paired with official pre-built server binary.\n                            </p>\n                        </>\n                    ),\n                    calloutProps: {\n                        calloutMaxWidth: 300,\n                    }\n                },\n            }\n        ];\n    }\n\n    constructor() {\n        makeAutoObservable(this, {\n            decoders: observable.shallow,\n            selectedDecoder: observable.ref,\n            start: false,\n            stop: action.bound,\n            handleDeviceViewRef: action.bound,\n            handleRendererContainerRef: action.bound,\n            handleBackPointerDown: false,\n            handleBackPointerUp: false,\n            handleHomePointerDown: false,\n            handleHomePointerUp: false,\n            handleAppSwitchPointerDown: false,\n            handleAppSwitchPointerUp: false,\n            handleCurrentEncoderChange: action.bound,\n            handleSelectedDecoderChange: action.bound,\n            handleResolutionChange: action.bound,\n            handleTunnelForwardChange: action.bound,\n            handleBitRateChange: action.bound,\n            calculatePointerPosition: false,\n            injectTouch: false,\n            handlePointerDown: false,\n            handlePointerMove: false,\n            handlePointerUp: false,\n            handleWheel: false,\n            handleKeyDown: false,\n            homeKeyRepeater: false,\n            appSwitchKeyRepeater: false,\n        });\n\n        autorun(() => {\n            if (global.device) {\n                runInAction(() => {\n                    this.encoders = [];\n                    this.selectedEncoder = undefined;\n                });\n            } else {\n                this.stop();\n            }\n        });\n\n        autorun(() => {\n            if (this.rendererContainer && this.decoder) {\n                while (this.rendererContainer.firstChild) {\n                    this.rendererContainer.firstChild.remove();\n                }\n                this.rendererContainer.appendChild(this.decoder.element);\n            }\n        });\n\n        autorun(() => {\n            if (this.client) {\n                this.homeKeyRepeater = new KeyRepeater(AndroidKeyCode.Home, this.client);\n                this.appSwitchKeyRepeater = new KeyRepeater(AndroidKeyCode.AppSwitch, this.client);\n            } else {\n                this.homeKeyRepeater = undefined;\n                this.appSwitchKeyRepeater = undefined;\n            }\n        });\n\n        if (typeof window !== 'undefined' && typeof window.VideoDecoder === 'function') {\n            setTimeout(action(() => {\n                this.decoders.unshift({\n                    name: 'WebCodecs',\n                    factory: WebCodecsDecoder,\n                });\n                this.selectedDecoder = this.decoders[0];\n            }), 0);\n        }\n    }\n\n    start = async () => {\n        if (!global.device) {\n            return;\n        }\n\n        try {\n            if (!state.selectedDecoder) {\n                throw new Error('No available decoder');\n            }\n\n            runInAction(() => {\n                this.serverTotalSize = 0;\n                this.serverDownloadedSize = 0;\n                this.debouncedServerDownloadedSize = 0;\n                this.serverUploadedSize = 0;\n                this.debouncedServerUploadedSize = 0;\n                this.connecting = true;\n            });\n\n            let intervalId = setInterval(action(() => {\n                this.serverDownloadSpeed = this.serverDownloadedSize - this.debouncedServerDownloadedSize;\n                this.debouncedServerDownloadedSize = this.serverDownloadedSize;\n            }), 1000);\n\n            let serverBuffer: ArrayBuffer;\n\n            try {\n                serverBuffer = await fetchServer(action(([downloaded, total]) => {\n                    this.serverDownloadedSize = downloaded;\n                    this.serverTotalSize = total;\n                }));\n                runInAction(() => {\n                    this.serverDownloadSpeed = this.serverDownloadedSize - this.debouncedServerDownloadedSize;\n                    this.debouncedServerDownloadedSize = this.serverDownloadedSize;\n                });\n            } finally {\n                clearInterval(intervalId);\n            }\n\n            intervalId = setInterval(action(() => {\n                this.serverUploadSpeed = this.serverUploadedSize - this.debouncedServerUploadedSize;\n                this.debouncedServerUploadedSize = this.serverUploadedSize;\n            }), 1000);\n\n            try {\n                await pushServer(global.device, serverBuffer, {\n                    onProgress: action((progress) => {\n                        this.serverUploadedSize = progress;\n                    }),\n                });\n                runInAction(() => {\n                    this.serverUploadSpeed = this.serverUploadedSize - this.debouncedServerUploadedSize;\n                    this.debouncedServerUploadedSize = this.serverUploadedSize;\n                });\n            } finally {\n                clearInterval(intervalId);\n            }\n\n            const encoders = await ScrcpyClient.getEncoders(\n                global.device,\n                DEFAULT_SERVER_PATH,\n                SCRCPY_SERVER_VERSION,\n                new ScrcpyOptions1_21({\n                    logLevel: ScrcpyLogLevel.Debug,\n                    bitRate: 4_000_000,\n                    tunnelForward: this.tunnelForward,\n                })\n            );\n            if (encoders.length === 0) {\n                throw new Error('No available encoder found');\n            }\n\n            runInAction(() => {\n                this.encoders = encoders;\n            });\n\n            // Run scrcpy once will delete the server file\n            // Re-push it\n            await pushServer(global.device, serverBuffer);\n\n            const factory = this.selectedDecoder.factory;\n            const decoder = new factory();\n            runInAction(() => {\n                this.decoder = decoder;\n            });\n\n            const client = new ScrcpyClient(global.device);\n\n            client.onDebug(message => {\n                console.debug('[server] ' + message);\n            });\n            client.onInfo(message => {\n                console.log('[server] ' + message);\n            });\n            client.onError(({ message }) => {\n                global.showErrorDialog(message);\n            });\n            client.onClose(stop);\n\n            client.onSizeChanged(action((size) => {\n                const { croppedWidth, croppedHeight, } = size;\n\n                this.width = croppedWidth;\n                this.height = croppedHeight;\n\n                decoder.setSize(size);\n            }));\n\n            client.onVideoData(({ data }) => {\n                decoder.feed(data);\n            });\n\n            client.onClipboardChange(content => {\n                window.navigator.clipboard.writeText(content);\n            });\n\n            await client.start(\n                DEFAULT_SERVER_PATH,\n                SCRCPY_SERVER_VERSION,\n                new ScrcpyOptions1_21({\n                    logLevel: ScrcpyLogLevel.Debug,\n                    maxSize: this.resolution,\n                    bitRate: this.bitRate,\n                    lockVideoOrientation: ScrcpyScreenOrientation.Unlocked,\n                    tunnelForward: this.tunnelForward,\n                    encoderName: this.selectedEncoder ?? encoders[0],\n                    codecOptions: new CodecOptions({\n                        profile: decoder.maxProfile,\n                        level: decoder.maxLevel,\n                    }),\n                }),\n            );\n\n            runInAction(() => {\n                this.client = client;\n                this.running = true;\n            });\n        } catch (e: any) {\n            global.showErrorDialog(e.message);\n        } finally {\n            runInAction(() => {\n                this.connecting = false;\n            });\n        }\n    };\n\n    stop() {\n        this.decoder?.dispose();\n        this.decoder = undefined;\n\n        this.client?.close();\n        this.client = undefined;\n\n        this.running = false;\n    }\n\n    handleDeviceViewRef(element: DeviceViewRef | null) {\n        this.deviceView = element;\n    }\n\n    handleRendererContainerRef(element: HTMLDivElement | null) {\n        this.rendererContainer = element;\n        this.rendererContainer?.addEventListener('wheel', this.handleWheel, { passive: false });\n    };\n\n    handleBackPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        e.currentTarget.setPointerCapture(e.pointerId);\n        this.client!.pressBackOrTurnOnScreen(AndroidKeyEventAction.Down);\n    };\n\n    handleBackPointerUp = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        this.client!.pressBackOrTurnOnScreen(AndroidKeyEventAction.Up);\n    };\n\n    handleHomePointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        e.currentTarget.setPointerCapture(e.pointerId);\n        this.homeKeyRepeater?.press();\n    };\n\n    handleHomePointerUp = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        this.homeKeyRepeater?.release();\n    };\n\n    handleAppSwitchPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        e.currentTarget.setPointerCapture(e.pointerId);\n        this.appSwitchKeyRepeater?.press();\n    };\n\n    handleAppSwitchPointerUp = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        this.appSwitchKeyRepeater?.release();\n    };\n\n    handleCurrentEncoderChange(e?: any, option?: IDropdownOption) {\n        if (!option) {\n            return;\n        }\n\n        this.selectedEncoder = option.text;\n    }\n\n    handleSelectedDecoderChange(e?: any, option?: IDropdownOption) {\n        if (!option) {\n            return;\n        }\n\n        this.selectedDecoder = option.data;\n    }\n\n    handleResolutionChange(e: any, value?: string) {\n        if (value === undefined) {\n            return;\n        }\n        this.resolution = +value;\n    }\n\n    handleBitRateChange(e: any, value?: string) {\n        if (value === undefined) {\n            return;\n        }\n        this.bitRate = +value;\n    }\n\n    handleTunnelForwardChange(event: React.MouseEvent<HTMLElement>, checked?: boolean) {\n        if (checked === undefined) {\n            return;\n        }\n\n        this.tunnelForward = checked;\n    };\n\n    calculatePointerPosition(clientX: number, clientY: number) {\n        const view = this.rendererContainer!.getBoundingClientRect();\n        const pointerViewX = clientX - view.x;\n        const pointerViewY = clientY - view.y;\n        const pointerScreenX = clamp(pointerViewX / view.width, 0, 1) * this.width;\n        const pointerScreenY = clamp(pointerViewY / view.height, 0, 1) * this.height;\n\n        return {\n            x: pointerScreenX,\n            y: pointerScreenY,\n        };\n    }\n\n    injectTouch = (\n        action: AndroidMotionEventAction,\n        e: React.PointerEvent<HTMLDivElement>\n    ) => {\n        if (!this.client) {\n            return;\n        }\n\n        const { x, y } = this.calculatePointerPosition(e.clientX, e.clientY);\n        this.client.injectTouch({\n            action,\n            pointerId: BigInt(e.pointerId),\n            pointerX: x,\n            pointerY: y,\n            pressure: e.pressure * 65535,\n            buttons: 0,\n        });\n    };\n\n    handlePointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        this.rendererContainer!.focus();\n        e.currentTarget.setPointerCapture(e.pointerId);\n        this.injectTouch(AndroidMotionEventAction.Down, e);\n    };\n\n    handlePointerMove = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.buttons !== 1) {\n            return;\n        }\n        this.injectTouch(AndroidMotionEventAction.Move, e);\n    };\n\n    handlePointerUp = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        e.currentTarget.releasePointerCapture(e.pointerId);\n        this.injectTouch(AndroidMotionEventAction.Up, e);\n    };\n\n    handleWheel = (e: WheelEvent) => {\n        if (!this.client) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { x, y } = this.calculatePointerPosition(e.clientX, e.clientY);\n        this.client.injectScroll({\n            pointerX: x,\n            pointerY: y,\n            scrollX: -e.deltaX,\n            scrollY: -e.deltaY,\n        });\n    };\n\n    handleKeyDown = async (e: React.KeyboardEvent<HTMLDivElement>) => {\n        if (!this.client) {\n            return;\n        }\n\n        const { key, code } = e;\n        if (key.match(/^[a-z0-9]$/i)) {\n            this.client!.injectText(key);\n            return;\n        }\n\n        const keyCode = ({\n            Backspace: AndroidKeyCode.Delete,\n            Space: AndroidKeyCode.Space,\n        } as Record<string, AndroidKeyCode | undefined>)[code];\n\n        if (keyCode) {\n            await this.client.injectKeyCode({\n                action: AndroidKeyEventAction.Down,\n                keyCode,\n                metaState: 0,\n                repeat: 0,\n            });\n            await this.client.injectKeyCode({\n                action: AndroidKeyEventAction.Up,\n                keyCode,\n                metaState: 0,\n                repeat: 0,\n            });\n        }\n    };\n}\n\nconst state = new ScrcpyPageState();\n\nconst ConnectionDialog = observer(() => {\n    const layerHostId = useId('layerHost');\n\n    const [isClient, setIsClient] = useState(false);\n\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    if (!isClient) {\n        return null;\n    }\n\n    return (\n        <>\n            <LayerHost id={layerHostId} style={{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, margin: 0, pointerEvents: 'none' }} />\n\n            <Dialog\n                hidden={!state.connecting}\n                modalProps={{ layerProps: { hostId: layerHostId } }}\n                dialogContentProps={{ title: 'Connecting...' }}\n            >\n                <Stack tokens={CommonStackTokens}>\n                    <ProgressIndicator\n                        label=\"1. Downloading scrcpy server...\"\n                        percentComplete={state.serverTotalSize ? state.serverDownloadedSize / state.serverTotalSize : undefined}\n                        description={formatSpeed(state.debouncedServerDownloadedSize, state.serverTotalSize, state.serverDownloadSpeed)}\n                    />\n\n                    <ProgressIndicator\n                        label=\"2. Pushing scrcpy server to device...\"\n                        progressHidden={state.serverTotalSize === 0 || state.serverDownloadedSize !== state.serverTotalSize}\n                        percentComplete={state.serverUploadedSize / state.serverTotalSize}\n                        description={formatSpeed(state.debouncedServerUploadedSize, state.serverTotalSize, state.serverUploadSpeed)}\n                    />\n\n                    <ProgressIndicator\n                        label=\"3. Starting scrcpy server on device...\"\n                        progressHidden={state.serverTotalSize === 0 || state.serverUploadedSize !== state.serverTotalSize}\n                    />\n                </Stack>\n            </Dialog>\n        </>\n    );\n});\n\nconst Scrcpy: NextPage = () => {\n    const bottomElement = (\n        <Stack verticalFill horizontalAlign=\"center\" style={{ background: '#999' }}>\n            <Stack verticalFill horizontal style={{ width: '100%', maxWidth: 300 }} horizontalAlign=\"space-evenly\" verticalAlign=\"center\">\n                <IconButton\n                    iconProps={{ iconName: Icons.Play }}\n                    style={{ transform: 'rotate(180deg)', color: 'white' }}\n                    onPointerDown={state.handleBackPointerDown}\n                    onPointerUp={state.handleBackPointerUp}\n                />\n                <IconButton\n                    iconProps={{ iconName: Icons.Circle }}\n                    style={{ color: 'white' }}\n                    onPointerDown={state.handleHomePointerDown}\n                    onPointerUp={state.handleHomePointerUp}\n                />\n                <IconButton\n                    iconProps={{ iconName: Icons.Stop }}\n                    style={{ color: 'white' }}\n                    onPointerDown={state.handleAppSwitchPointerDown}\n                    onPointerUp={state.handleAppSwitchPointerUp}\n                />\n            </Stack>\n        </Stack>\n    );\n\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Scrcpy - WebADB</title>\n            </Head>\n\n            <CommandBar items={state.commandBarItems} farItems={state.commandBarFarItems} />\n\n            <Stack horizontal grow styles={{ root: { height: 0 } }}>\n                <DeviceView\n                    ref={state.handleDeviceViewRef}\n                    width={state.width}\n                    height={state.height}\n                    bottomElement={bottomElement}\n                    bottomHeight={40}\n                >\n                    <div\n                        ref={state.handleRendererContainerRef}\n                        tabIndex={-1}\n                        onPointerDown={state.handlePointerDown}\n                        onPointerMove={state.handlePointerMove}\n                        onPointerUp={state.handlePointerUp}\n                        onPointerCancel={state.handlePointerUp}\n                        onKeyDown={state.handleKeyDown}\n                    />\n                </DeviceView>\n\n                <div style={{ padding: 12, overflow: 'hidden auto', display: state.settingsVisible ? 'block' : 'none', width: 300 }}>\n                    <div>Changes will take effect on next connection</div>\n\n                    <Dropdown\n                        label=\"Encoder\"\n                        options={state.encoders.map(item => ({ key: item, text: item }))}\n                        selectedKey={state.selectedEncoder}\n                        placeholder=\"Connect once to retrieve encoder list\"\n                        onChange={state.handleCurrentEncoderChange}\n                    />\n\n                    {state.decoders.length > 1 && (\n                        <Dropdown\n                            label=\"Decoder\"\n                            options={state.decoders.map(item => ({ key: item.name, text: item.name, data: item }))}\n                            selectedKey={state.selectedDecoder.name}\n                            onChange={state.handleSelectedDecoderChange}\n                        />\n                    )}\n\n                    <SpinButton\n                        label=\"Max Resolution (longer side, 0 = unlimited)\"\n                        labelPosition={Position.top}\n                        value={state.resolution.toString()}\n                        min={0}\n                        max={2560}\n                        step={100}\n                        onChange={state.handleResolutionChange}\n                    />\n\n                    <SpinButton\n                        label=\"Max Bit Rate\"\n                        labelPosition={Position.top}\n                        value={state.bitRate.toString()}\n                        min={100}\n                        max={10_000_000}\n                        step={100}\n                        onChange={state.handleBitRateChange}\n                    />\n\n                    <Toggle\n                        label={\n                            <>\n                                <span>Use forward connection{' '}</span>\n                                <TooltipHost content=\"Old Android devices may not support reverse connection when using ADB over WiFi\">\n                                    <Icon iconName={Icons.Info} />\n                                </TooltipHost>\n                            </>\n                        }\n                        checked={state.tunnelForward}\n                        onChange={state.handleTunnelForwardChange}\n                    />\n                </div>\n\n                <DemoMode\n                    style={{ display: state.demoModeVisible ? 'block' : 'none' }}\n                />\n\n                <ConnectionDialog />\n            </Stack>\n        </Stack>\n    );\n};\n\nexport default observer(Scrcpy);\n","module.exports = require('./dist/shared/lib/head')\n"],"names":["window","__NEXT_P","push","ScrcpyControlMessageType","AndroidMotionEventAction","LayerHost","props","id","className","useUnmount","css","unmountFunction","unmountRef","current","ScrcpyInjectTouchControlMessage","uint8","InjectTouch","uint64","uint32","uint16","ScrcpyInjectTextControlMessage","InjectText","string","lengthField","AndroidKeyEventAction","AndroidKeyCode","ScrcpyInjectKeyCodeControlMessage","InjectKeycode","ScrcpyInjectScrollControlMessage","InjectScroll","int32","AndroidCodecProfile","AndroidCodecLevel","delay","time","Promise","resolve","globalThis","setTimeout","ScrcpyClientConnection","constructor","device","this","initialize","dispose","ScrcpyClientForwardConnection","connect","createSocket","connectAndRetry","i","e","Error","connectAndReadByte","stream","read","getStreams","ScrcpyClientReverseConnection","reverse","remove","_a","streams","address","add","onSocket","packet","enqueue","accept","dequeue","DEFAULT_SERVER_PATH","ScrcpyLogLevel","ScrcpyScreenOrientation","toScrcpyOption","value","empty","undefined","isToScrcpyOption","CodecOptions","profile","Baseline","level","Level4","Object","entries","map","key","join","ScrcpyBackOrScreenOnEvent1_16","ScrcpyOptions1_16","logLevel","maxSize","bitRate","maxFps","lockVideoOrientation","Unlocked","tunnelForward","crop","sendFrameMeta","control","displayId","showTouches","stayAwake","codecOptions","encoderName","Verbose","Debug","Initial","getArgumnetOrder","formatServerArguments","formatGetEncoderListArguments","createConnection","getOutputEncoderNameRegex","createBackOrScreenOnEvent","action","Down","serialize","type","BackOrScreenOn","backend","ScrcpyBackOrScreenOnEvent1_18","ScrcpyOptions1_18","init","super","powerOffOnClose","concat","toSnakeCase","input","replace","toLowerCase","ScrcpyOptions1_21","clipboardAutosync","pushServer","file","options","path","onProgress","sync","write","BitReader","buffer","bytePosition","bitPosition","length","result","next","decodeExponentialGolombNumber","parse_sequence_parameter_set","nalu","start","writeIndex","zeroCount","inEmulation","byte","lastZeroCount","subarray","iterateNalu","Uint8Array","reader","nal_ref_idc","profile_idc","constraint_set","constraint_set_reader","constraint_set0_flag","constraint_set1_flag","constraint_set2_flag","constraint_set3_flag","constraint_set4_flag","constraint_set5_flag","level_idc","seq_parameter_set_id","chroma_format_idc","seq_scaling_list_present_flag","pic_order_cnt_type","num_ref_frames_in_pic_order_cnt_cycle","offset_for_ref_frame","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_cropping_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","LineReader","text","peekEnd","peek","peekLine","index","indexOf","line","substring","Size","VideoPacket","int64","arrayBuffer","NoPts","BigInt","ClipboardMessage","ScrcpyClient","debugEvent","infoEvent","errorEvent","closeEvent","_running","sizeChangedEvent","videoDataEvent","clipboardChangeEvent","sendingTouchMessage","version","client","encoderNameRegex","resolver","encoders","onError","message","error","reject","match","onClose","startCore","promise","event","_screenWidth","_screenHeight","serverArguments","connection","process","childProcess","spawn","shells","onStdout","handleProcessOutput","removeExitListener","onExit","videoStream","controlStream","race","handleProcessClosed","receiveVideo","receiveControl","kill","data","decodeUtf8","output","lines","startsWith","Info","errorType","errorMessage","split","stackTrace","trim","parseScrcpyOutput","fire","width","height","deserialize","pts","byteLength","sequenceParameterSet","slice","cropLeft","cropRight","cropTop","cropBottom","screenWidth","screenHeight","croppedWidth","croppedHeight","array","set","size","content","injectKeyCode","assign","injectText","injectTouch","Move","injectScroll","pressBackOrTurnOnScreen","close","_b","_c","worker","workerReady","pendingResolvers","streamId","pictureReadyEvent","TinyH264Wrapper","addDisposable","handlePictureReady","renderStateId","feed","postMessage","offset","cachedInitializePromise","all","then","YuvBuffer","default","YuvCanvas","TinyH264Decoder","maxProfile","maxLevel","_element","document","createElement","setSize","_initializer","_yuvCanvas","attach","chromaWidth","chromaHeight","format","cropWidth","cropHeight","displayWidth","displayHeight","wrapper","Worker","URL","addEventListener","decoder","createTinyH264Wrapper","uPlaneOffset","vPlaneOffset","onPictureReady","frame","lumaPlane","chromaPlane","drawFrame","toHex","toString","padStart","toUpperCase","WebCodecsDecoder","High","Level5","context","getContext","VideoDecoder","drawImage","codec","configure","optimizeForLatency","decode","EncodedVideoChunk","timestamp","cachedValue","SERVER_URL","FetchWithProgress","url","_downloaded","_total","progressEvent","EventEmitter","fetch","downloaded","total","response","chunks","position","chunk","Number","parseInt","headers","get","body","getReader","done","reduce","item","clamp","min","max","KeyRepeater","interval","press","timeoutId","keyCode","repeat","metaState","intervalId","setInterval","onRelease","clearInterval","clearTimeout","release","Up","state","ScrcpyPageState","running","deviceView","rendererContainer","settingsVisible","demoModeVisible","selectedEncoder","decoders","name","factory","selectedDecoder","resolution","connecting","serverTotalSize","serverDownloadedSize","debouncedServerDownloadedSize","serverDownloadSpeed","serverUploadedSize","debouncedServerUploadedSize","serverUploadSpeed","homeKeyRepeater","appSwitchKeyRepeater","serverBuffer","global","runInAction","catch","progress","getEncoders","SCRCPY_SERVER_VERSION","onDebug","console","debug","onInfo","log","stop","onSizeChanged","onVideoData","onClipboardChange","navigator","clipboard","writeText","handleBackPointerDown","button","currentTarget","setPointerCapture","pointerId","handleBackPointerUp","handleHomePointerDown","handleHomePointerUp","handleAppSwitchPointerDown","handleAppSwitchPointerUp","calculatePointerPosition","clientX","clientY","x","y","pointerX","pointerY","pressure","buttons","handlePointerDown","focus","handlePointerMove","handlePointerUp","releasePointerCapture","handleWheel","preventDefault","stopPropagation","scrollX","deltaX","scrollY","deltaY","handleKeyDown","code","Backspace","Delete","Space","makeAutoObservable","observable","handleDeviceViewRef","handleRendererContainerRef","handleCurrentEncoderChange","handleSelectedDecoderChange","handleResolutionChange","handleTunnelForwardChange","handleBitRateChange","autorun","firstChild","appendChild","element","Home","AppSwitch","unshift","commandBarItems","iconProps","iconName","Icons","onClick","disabled","enterFullscreen","commandBarFarItems","checked","iconOnly","tooltipHostProps","p","ExternalLink","href","spaceAfter","calloutProps","calloutMaxWidth","passive","option","view","getBoundingClientRect","pointerViewX","pointerViewY","ConnectionDialog","observer","layerHostId","useId","useState","isClient","setIsClient","useEffect","style","top","bottom","left","right","margin","pointerEvents","Dialog","hidden","modalProps","layerProps","hostId","dialogContentProps","title","Stack","tokens","CommonStackTokens","ProgressIndicator","label","percentComplete","description","formatSpeed","progressHidden","bottomElement","verticalFill","horizontalAlign","background","horizontal","maxWidth","verticalAlign","IconButton","transform","color","onPointerDown","onPointerUp","RouteStackProps","Head","CommandBar","items","farItems","grow","styles","root","DeviceView","ref","bottomHeight","div","tabIndex","onPointerMove","onPointerCancel","onKeyDown","padding","overflow","display","Dropdown","selectedKey","placeholder","onChange","SpinButton","labelPosition","Position","step","Toggle","span","TooltipHost","Icon","DemoMode","module","exports"],"sourceRoot":""}