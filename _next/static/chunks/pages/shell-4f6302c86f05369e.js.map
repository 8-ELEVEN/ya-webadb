{"version":3,"file":"static/chunks/pages/shell-4f6302c86f05369e.js","mappings":"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","sources":["webpack://_N_E/?0342","webpack://_N_E/./components/terminal.tsx","webpack://_N_E/./pages/shell.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/shell\",\n      function () {\n        return require(\"private-next-pages/shell.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/shell\"])\n      });\n    }\n  ","// cspell: ignore scrollback\n\nimport { AdbShell, encodeUtf8 } from \"@yume-chan/adb\";\nimport { AutoDisposable } from \"@yume-chan/event\";\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { SearchAddon } from 'xterm-addon-search';\nimport { WebglAddon } from 'xterm-addon-webgl';\n\nexport class AdbTerminal extends AutoDisposable {\n    private element = document.createElement('div');\n\n    public terminal: Terminal = new Terminal({\n        scrollback: 9000,\n    });\n\n    public searchAddon = new SearchAddon();\n\n    private readonly fitAddon = new FitAddon();\n\n    private _shell: AdbShell | undefined;\n    public get socket() { return this._shell; }\n    public set socket(value) {\n        if (this._shell) {\n            // Remove event listeners\n            this.dispose();\n        }\n\n        this._shell = value;\n\n        if (value) {\n            this.terminal.clear();\n            this.terminal.reset();\n\n            this.addDisposable(value.onStdout(data => {\n                this.terminal.write(new Uint8Array(data));\n            }));\n            this.addDisposable(value.onStderr(data => {\n                this.terminal.write(new Uint8Array(data));\n            }));\n            this.addDisposable(this.terminal.onData(data => {\n                const buffer = encodeUtf8(data);\n                value.write(buffer);\n            }));\n\n            this.fit();\n        }\n    }\n\n    public constructor() {\n        super();\n\n        this.element.style.width = '100%';\n        this.element.style.height = '100%';\n        this.element.style.overflow = 'hidden';\n\n        this.terminal.options.fontFamily = '\"Cascadia Code\", Consolas, monospace, \"Source Han Sans SC\", \"Microsoft YaHei\"';\n        this.terminal.options.letterSpacing = 1;\n        this.terminal.options.cursorStyle = 'bar';\n        this.terminal.loadAddon(this.searchAddon);\n        this.terminal.loadAddon(this.fitAddon);\n    }\n\n    public setContainer(container: HTMLDivElement) {\n        container.appendChild(this.element);\n        if (!this.terminal.element) {\n            void this.element.offsetWidth;\n            this.terminal.open(this.element);\n            this.terminal.loadAddon(new WebglAddon());\n            // WebGL renderer ignores `cursorBlink` set before it initialized\n            this.terminal.options.cursorBlink = true;\n            this.fit();\n        }\n    }\n\n    public fit() {\n        this.fitAddon.fit();\n        // Resize remote terminal\n        const { rows, cols } = this.terminal;\n        this._shell?.resize(rows, cols);\n    }\n}\n","import { IconButton, SearchBox, Stack, StackItem } from '@fluentui/react';\nimport { reaction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport React, { CSSProperties, useCallback, useEffect, useRef, useState } from 'react';\nimport 'xterm/css/xterm.css';\nimport { globalState } from \"../state\";\nimport { Icons, ResizeObserver, RouteStackProps } from '../utils';\n\nlet terminal: import('../components/terminal').AdbTerminal;\nif (typeof window !== 'undefined') {\n    const AdbTerminal: typeof import('../components/terminal').AdbTerminal = require('../components/terminal').AdbTerminal;\n    terminal = new AdbTerminal();\n}\n\nconst ResizeObserverStyle: CSSProperties = {\n    width: '100%',\n    height: '100%',\n};\n\nconst UpIconProps = { iconName: Icons.ChevronUp };\nconst DownIconProps = { iconName: Icons.ChevronDown };\n\nconst Shell: NextPage = (): JSX.Element | null => {\n    const [searchKeyword, setSearchKeyword] = useState('');\n    const handleSearchKeywordChange = useCallback((e, newValue?: string) => {\n        setSearchKeyword(newValue ?? '');\n        if (newValue) {\n            terminal.searchAddon.findNext(newValue, { incremental: true });\n        }\n    }, []);\n    const findPrevious = useCallback(() => {\n        terminal.searchAddon.findPrevious(searchKeyword);\n    }, [searchKeyword]);\n    const findNext = useCallback(() => {\n        terminal.searchAddon.findNext(searchKeyword);\n    }, [searchKeyword]);\n\n    const connectingRef = useRef(false);\n    useEffect(() => {\n        return reaction(\n            () => globalState.device,\n            async () => {\n                if (!globalState.device) {\n                    terminal.socket = undefined;\n                    return;\n                }\n\n                if (!!terminal.socket || connectingRef.current) {\n                    return;\n                }\n\n                try {\n                    connectingRef.current = true;\n                    const socket = await globalState.device.childProcess.shell();\n                    terminal.socket = socket;\n                } catch (e) {\n                    globalState.showErrorDialog(e instanceof Error ? e.message : `${e}`);\n                } finally {\n                    connectingRef.current = false;\n                }\n            },\n            {\n                fireImmediately: true,\n            }\n        );\n    }, []);\n\n    const handleResize = useCallback(() => {\n        terminal.fit();\n    }, []);\n\n    const handleContainerRef = useCallback((container: HTMLDivElement | null) => {\n        if (container) {\n            terminal.setContainer(container);\n        }\n    }, []);\n\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Screen Capture - WebADB</title>\n            </Head>\n\n            <StackItem>\n                <Stack horizontal>\n                    <StackItem grow>\n                        <SearchBox\n                            placeholder=\"Find\"\n                            value={searchKeyword}\n                            onChange={handleSearchKeywordChange}\n                            onSearch={findNext}\n                        />\n                    </StackItem>\n                    <StackItem>\n                        <IconButton\n                            disabled={!searchKeyword}\n                            iconProps={UpIconProps}\n                            onClick={findPrevious}\n                        />\n                    </StackItem>\n                    <StackItem>\n                        <IconButton\n                            disabled={!searchKeyword}\n                            iconProps={DownIconProps}\n                            onClick={findNext}\n                        />\n                    </StackItem>\n                </Stack>\n            </StackItem>\n\n            <StackItem grow styles={{ root: { minHeight: 0 } }}>\n                <ResizeObserver style={ResizeObserverStyle} onResize={handleResize}>\n                    <div ref={handleContainerRef} style={{ height: '100%' }} />\n                </ResizeObserver>\n            </StackItem>\n        </Stack>\n    );\n};\n\nexport default observer(Shell);\n"],"names":["window","__NEXT_P","push","AdbTerminal","element","document","createElement","terminal","Terminal","scrollback","searchAddon","SearchAddon","fitAddon","FitAddon","style","width","height","overflow","options","fontFamily","letterSpacing","cursorStyle","loadAddon","socket","this","_shell","value","dispose","clear","reset","addDisposable","onStdout","data","write","Uint8Array","onStderr","onData","buffer","encodeUtf8","fit","setContainer","container","appendChild","offsetWidth","open","WebglAddon","cursorBlink","rows","cols","resize","AutoDisposable","require","ResizeObserverStyle","UpIconProps","iconName","Icons","DownIconProps","observer","useState","searchKeyword","setSearchKeyword","handleSearchKeywordChange","useCallback","e","newValue","findNext","incremental","findPrevious","connectingRef","useRef","useEffect","reaction","globalState","undefined","current","Error","message","fireImmediately","handleResize","handleContainerRef","Stack","RouteStackProps","Head","title","StackItem","horizontal","grow","SearchBox","placeholder","onChange","onSearch","IconButton","disabled","iconProps","onClick","styles","root","minHeight","ResizeObserver","onResize","div","ref"],"sourceRoot":""}