{"version":3,"file":"static/chunks/pages/scrcpy-ec017365cde9cec7.js","mappings":"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","sources":["webpack://_N_E/?6587","webpack://_N_E/../../libraries/scrcpy/esm/message.js","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui/react@8.36.3_12a6012245369fd5be825566be975ff0/node_modules/@fluentui/react/lib/components/Layer/LayerHost.js","webpack://_N_E/../../libraries/scrcpy/esm/codec.js","webpack://_N_E/../../libraries/scrcpy/esm/utils.js","webpack://_N_E/../../libraries/scrcpy/esm/connection.js","webpack://_N_E/../../libraries/scrcpy/esm/options/common.js","webpack://_N_E/../../libraries/scrcpy/esm/options/1_17.js","webpack://_N_E/../../libraries/scrcpy/esm/options/1_18.js","webpack://_N_E/../../libraries/scrcpy/esm/push-server.js","webpack://_N_E/../../libraries/scrcpy/esm/sps.js","webpack://_N_E/../../libraries/scrcpy/esm/client.js","webpack://_N_E/../../libraries/scrcpy/esm/decoder/tinyh264/wrapper.js","webpack://_N_E/../../libraries/scrcpy/esm/decoder/tinyh264/index.js","webpack://_N_E/../../libraries/scrcpy/esm/decoder/web-codecs/index.js","webpack://_N_E/./pages/scrcpy.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/next@12.0.7_react-dom@17.0.2+react@17.0.2/node_modules/next/head.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/scrcpy\",\n      function () {\n        return require(\"private-next-pages/scrcpy.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/scrcpy\"])\n      });\n    }\n  ","import Struct, { placeholder } from '@yume-chan/struct';\nexport var ScrcpyControlMessageType;\n(function (ScrcpyControlMessageType) {\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"InjectKeycode\"] = 0] = \"InjectKeycode\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"InjectText\"] = 1] = \"InjectText\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"InjectTouch\"] = 2] = \"InjectTouch\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"InjectScroll\"] = 3] = \"InjectScroll\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"BackOrScreenOn\"] = 4] = \"BackOrScreenOn\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"ExpandNotificationPanel\"] = 5] = \"ExpandNotificationPanel\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"CollapseNotificationPanel\"] = 6] = \"CollapseNotificationPanel\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"GetClipboard\"] = 7] = \"GetClipboard\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"SetClipboard\"] = 8] = \"SetClipboard\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"SetScreenPowerMode\"] = 9] = \"SetScreenPowerMode\";\n    ScrcpyControlMessageType[ScrcpyControlMessageType[\"RotateDevice\"] = 10] = \"RotateDevice\";\n})(ScrcpyControlMessageType || (ScrcpyControlMessageType = {}));\nexport var AndroidMotionEventAction;\n(function (AndroidMotionEventAction) {\n    AndroidMotionEventAction[AndroidMotionEventAction[\"Down\"] = 0] = \"Down\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"Up\"] = 1] = \"Up\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"Move\"] = 2] = \"Move\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"Cancel\"] = 3] = \"Cancel\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"Outside\"] = 4] = \"Outside\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"PointerDown\"] = 5] = \"PointerDown\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"PointerUp\"] = 6] = \"PointerUp\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"HoverMove\"] = 7] = \"HoverMove\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"Scroll\"] = 8] = \"Scroll\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"HoverEnter\"] = 9] = \"HoverEnter\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"HoverExit\"] = 10] = \"HoverExit\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"ButtonPress\"] = 11] = \"ButtonPress\";\n    AndroidMotionEventAction[AndroidMotionEventAction[\"ButtonRelease\"] = 12] = \"ButtonRelease\";\n})(AndroidMotionEventAction || (AndroidMotionEventAction = {}));\nexport const ScrcpyInjectTouchControlMessage = new Struct()\n    .uint8('type', ScrcpyControlMessageType.InjectTouch)\n    .uint8('action', placeholder())\n    .uint64('pointerId')\n    .uint32('pointerX')\n    .uint32('pointerY')\n    .uint16('screenWidth')\n    .uint16('screenHeight')\n    .uint16('pressure')\n    .uint32('buttons');\nexport const ScrcpyInjectTextControlMessage = new Struct()\n    .uint8('type', ScrcpyControlMessageType.InjectText)\n    .uint32('length')\n    .string('text', { lengthField: 'length' });\nexport var AndroidKeyEventAction;\n(function (AndroidKeyEventAction) {\n    AndroidKeyEventAction[AndroidKeyEventAction[\"Down\"] = 0] = \"Down\";\n    AndroidKeyEventAction[AndroidKeyEventAction[\"Up\"] = 1] = \"Up\";\n})(AndroidKeyEventAction || (AndroidKeyEventAction = {}));\nexport var AndroidKeyCode;\n(function (AndroidKeyCode) {\n    AndroidKeyCode[AndroidKeyCode[\"Home\"] = 3] = \"Home\";\n    AndroidKeyCode[AndroidKeyCode[\"Back\"] = 4] = \"Back\";\n    AndroidKeyCode[AndroidKeyCode[\"A\"] = 29] = \"A\";\n    AndroidKeyCode[AndroidKeyCode[\"B\"] = 30] = \"B\";\n    AndroidKeyCode[AndroidKeyCode[\"C\"] = 31] = \"C\";\n    AndroidKeyCode[AndroidKeyCode[\"D\"] = 32] = \"D\";\n    AndroidKeyCode[AndroidKeyCode[\"E\"] = 33] = \"E\";\n    AndroidKeyCode[AndroidKeyCode[\"F\"] = 34] = \"F\";\n    AndroidKeyCode[AndroidKeyCode[\"G\"] = 35] = \"G\";\n    AndroidKeyCode[AndroidKeyCode[\"H\"] = 36] = \"H\";\n    AndroidKeyCode[AndroidKeyCode[\"I\"] = 37] = \"I\";\n    AndroidKeyCode[AndroidKeyCode[\"J\"] = 38] = \"J\";\n    AndroidKeyCode[AndroidKeyCode[\"K\"] = 39] = \"K\";\n    AndroidKeyCode[AndroidKeyCode[\"L\"] = 40] = \"L\";\n    AndroidKeyCode[AndroidKeyCode[\"M\"] = 41] = \"M\";\n    AndroidKeyCode[AndroidKeyCode[\"N\"] = 42] = \"N\";\n    AndroidKeyCode[AndroidKeyCode[\"O\"] = 43] = \"O\";\n    AndroidKeyCode[AndroidKeyCode[\"P\"] = 44] = \"P\";\n    AndroidKeyCode[AndroidKeyCode[\"Q\"] = 45] = \"Q\";\n    AndroidKeyCode[AndroidKeyCode[\"R\"] = 46] = \"R\";\n    AndroidKeyCode[AndroidKeyCode[\"S\"] = 47] = \"S\";\n    AndroidKeyCode[AndroidKeyCode[\"T\"] = 48] = \"T\";\n    AndroidKeyCode[AndroidKeyCode[\"U\"] = 49] = \"U\";\n    AndroidKeyCode[AndroidKeyCode[\"V\"] = 50] = \"V\";\n    AndroidKeyCode[AndroidKeyCode[\"W\"] = 51] = \"W\";\n    AndroidKeyCode[AndroidKeyCode[\"X\"] = 52] = \"X\";\n    AndroidKeyCode[AndroidKeyCode[\"Y\"] = 53] = \"Y\";\n    AndroidKeyCode[AndroidKeyCode[\"Z\"] = 54] = \"Z\";\n    AndroidKeyCode[AndroidKeyCode[\"Space\"] = 62] = \"Space\";\n    AndroidKeyCode[AndroidKeyCode[\"Delete\"] = 67] = \"Delete\";\n    AndroidKeyCode[AndroidKeyCode[\"AppSwitch\"] = 187] = \"AppSwitch\";\n})(AndroidKeyCode || (AndroidKeyCode = {}));\nexport const ScrcpyInjectKeyCodeControlMessage = new Struct()\n    .uint8('type', ScrcpyControlMessageType.InjectKeycode)\n    .uint8('action', placeholder())\n    .uint32('keyCode')\n    .uint32('repeat')\n    .uint32('metaState');\n//# sourceMappingURL=message.js.map","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '../../Utilities';\nimport { notifyHostChanged } from './Layer.notification';\nexport var LayerHost = function (props) {\n    var id = props.id, className = props.className;\n    React.useEffect(function () {\n        notifyHostChanged(id);\n        // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on first render\n    }, []);\n    useUnmount(function () {\n        notifyHostChanged(id);\n    });\n    return React.createElement(\"div\", __assign({}, props, { className: css('ms-LayerHost', className) }));\n};\nvar useUnmount = function (unmountFunction) {\n    var unmountRef = React.useRef(unmountFunction);\n    unmountRef.current = unmountFunction;\n    React.useEffect(function () { return function () {\n        if (unmountRef.current) {\n            unmountRef.current();\n        }\n    }; }, []);\n};\n//# sourceMappingURL=LayerHost.js.map","// From https://developer.android.com/reference/android/media/MediaCodecInfo.CodecProfileLevel\nexport var AndroidCodecProfile;\n(function (AndroidCodecProfile) {\n    AndroidCodecProfile[AndroidCodecProfile[\"Baseline\"] = 1] = \"Baseline\";\n    AndroidCodecProfile[AndroidCodecProfile[\"Main\"] = 2] = \"Main\";\n    AndroidCodecProfile[AndroidCodecProfile[\"Extended\"] = 4] = \"Extended\";\n    AndroidCodecProfile[AndroidCodecProfile[\"High\"] = 8] = \"High\";\n    AndroidCodecProfile[AndroidCodecProfile[\"High10\"] = 16] = \"High10\";\n    AndroidCodecProfile[AndroidCodecProfile[\"High422\"] = 32] = \"High422\";\n    AndroidCodecProfile[AndroidCodecProfile[\"High444\"] = 64] = \"High444\";\n    AndroidCodecProfile[AndroidCodecProfile[\"ConstrainedBaseline\"] = 65536] = \"ConstrainedBaseline\";\n    AndroidCodecProfile[AndroidCodecProfile[\"ConstrainedHigh\"] = 524288] = \"ConstrainedHigh\";\n})(AndroidCodecProfile || (AndroidCodecProfile = {}));\nexport var AndroidCodecLevel;\n(function (AndroidCodecLevel) {\n    AndroidCodecLevel[AndroidCodecLevel[\"Level1\"] = 1] = \"Level1\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level1b\"] = 2] = \"Level1b\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level11\"] = 4] = \"Level11\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level12\"] = 8] = \"Level12\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level13\"] = 16] = \"Level13\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level2\"] = 32] = \"Level2\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level21\"] = 64] = \"Level21\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level22\"] = 128] = \"Level22\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level3\"] = 256] = \"Level3\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level31\"] = 512] = \"Level31\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level32\"] = 1024] = \"Level32\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level4\"] = 2048] = \"Level4\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level41\"] = 4096] = \"Level41\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level42\"] = 8192] = \"Level42\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level5\"] = 16384] = \"Level5\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level51\"] = 32768] = \"Level51\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level52\"] = 65536] = \"Level52\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level6\"] = 131072] = \"Level6\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level61\"] = 262144] = \"Level61\";\n    AndroidCodecLevel[AndroidCodecLevel[\"Level62\"] = 524288] = \"Level62\";\n})(AndroidCodecLevel || (AndroidCodecLevel = {}));\n//# sourceMappingURL=codec.js.map","export function delay(time) {\n    return new Promise(resolve => {\n        globalThis.setTimeout(resolve, time);\n    });\n}\n//# sourceMappingURL=utils.js.map","import { __awaiter } from \"tslib\";\nimport { AdbBufferedStream, EventQueue } from \"@yume-chan/adb\";\nimport { delay } from \"./utils\";\nexport class ScrcpyClientConnection {\n    constructor(device) {\n        this.device = device;\n    }\n    initialize() { }\n    dispose() { }\n}\nexport class ScrcpyClientForwardConnection extends ScrcpyClientConnection {\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new AdbBufferedStream(yield this.device.createSocket('localabstract:scrcpy'));\n        });\n    }\n    connectAndRetry() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let i = 0; i < 100; i++) {\n                try {\n                    return yield this.connect();\n                }\n                catch (e) {\n                    yield delay(100);\n                }\n            }\n            throw new Error(`Can't connect to server after 100 retries`);\n        });\n    }\n    connectAndReadByte() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stream = yield this.connectAndRetry();\n            // server will write a `0` to signal connection success\n            yield stream.read(1);\n            return stream;\n        });\n    }\n    getStreams() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return [\n                yield this.connectAndReadByte(),\n                yield this.connectAndRetry()\n            ];\n        });\n    }\n}\nexport class ScrcpyClientReverseConnection extends ScrcpyClientConnection {\n    initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // try to unbind first\n                yield this.device.reverse.remove('localabstract:scrcpy');\n            }\n            catch (_a) {\n                // ignore error\n            }\n            this.streams = new EventQueue();\n            this.address = yield this.device.reverse.add('localabstract:scrcpy', 27183, {\n                onSocket: (packet, stream) => {\n                    this.streams.enqueue(stream);\n                },\n            });\n        });\n    }\n    accept() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new AdbBufferedStream(yield this.streams.dequeue());\n        });\n    }\n    getStreams() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return [\n                yield this.accept(),\n                yield this.accept(),\n            ];\n        });\n    }\n    dispose() {\n        // Don't await this!\n        // `reverse.remove`'s response will never arrive\n        // before we read all pending data from `videoStream`\n        this.device.reverse.remove(this.address);\n    }\n}\n//# sourceMappingURL=connection.js.map","export const DEFAULT_SERVER_PATH = '/data/local/tmp/scrcpy-server.jar';\nexport var ScrcpyLogLevel;\n(function (ScrcpyLogLevel) {\n    ScrcpyLogLevel[\"Debug\"] = \"debug\";\n    ScrcpyLogLevel[\"Info\"] = \"info\";\n    ScrcpyLogLevel[\"Warn\"] = \"warn\";\n    ScrcpyLogLevel[\"Error\"] = \"error\";\n})(ScrcpyLogLevel || (ScrcpyLogLevel = {}));\nexport var ScrcpyScreenOrientation;\n(function (ScrcpyScreenOrientation) {\n    ScrcpyScreenOrientation[ScrcpyScreenOrientation[\"Unlocked\"] = -1] = \"Unlocked\";\n    ScrcpyScreenOrientation[ScrcpyScreenOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    ScrcpyScreenOrientation[ScrcpyScreenOrientation[\"Landscape\"] = 1] = \"Landscape\";\n    ScrcpyScreenOrientation[ScrcpyScreenOrientation[\"PortraitFlipped\"] = 2] = \"PortraitFlipped\";\n    ScrcpyScreenOrientation[ScrcpyScreenOrientation[\"LandscapeFlipped\"] = 3] = \"LandscapeFlipped\";\n})(ScrcpyScreenOrientation || (ScrcpyScreenOrientation = {}));\n//# sourceMappingURL=common.js.map","import Struct, { placeholder } from \"@yume-chan/struct\";\nimport { AndroidCodecLevel, AndroidCodecProfile } from \"../codec\";\nimport { ScrcpyClientForwardConnection, ScrcpyClientReverseConnection } from \"../connection\";\nimport { AndroidKeyEventAction, ScrcpyControlMessageType } from \"../message\";\nimport { DEFAULT_SERVER_PATH, ScrcpyLogLevel, ScrcpyScreenOrientation } from \"./common\";\nexport const ScrcpyBackOrScreenOnEvent1_17 = new Struct()\n    .uint8('type', placeholder());\nexport class ScrcpyOptions1_17 {\n    constructor({ path = DEFAULT_SERVER_PATH, version = '1.17', logLevel = ScrcpyLogLevel.Error, maxSize = 0, bitRate, maxFps = 0, orientation = ScrcpyScreenOrientation.Unlocked, tunnelForward = false, profile = AndroidCodecProfile.Baseline, level = AndroidCodecLevel.Level4, encoder = '-', }) {\n        this.path = path;\n        this.version = version;\n        this.logLevel = logLevel;\n        this.maxSize = maxSize;\n        this.bitRate = bitRate;\n        this.maxFps = maxFps;\n        this.orientation = orientation;\n        this.tunnelForward = tunnelForward;\n        this.profile = profile;\n        this.level = level;\n        this.encoder = encoder;\n    }\n    formatServerArguments() {\n        return [\n            `CLASSPATH=${this.path}`,\n            'app_process',\n            /*          unused */ '/',\n            'com.genymobile.scrcpy.Server',\n            this.version,\n            this.logLevel,\n            this.maxSize.toString(),\n            this.bitRate.toString(),\n            this.maxFps.toString(),\n            this.orientation.toString(),\n            this.tunnelForward.toString(),\n            /*            crop */ '-',\n            /* send_frame_meta */ 'true',\n            /*         control */ 'true',\n            /*      display_id */ '0',\n            /*    show_touches */ 'false',\n            /*      stay_awake */ 'true',\n            /*   codec_options */ `profile=${this.profile},level=${this.level}`,\n            this.encoder,\n        ];\n    }\n    formatGetEncoderListArguments() {\n        return [\n            `CLASSPATH=${this.path}`,\n            'app_process',\n            /*          unused */ '/',\n            'com.genymobile.scrcpy.Server',\n            this.version,\n            this.logLevel,\n            this.maxSize.toString(),\n            this.bitRate.toString(),\n            this.maxFps.toString(),\n            this.orientation.toString(),\n            this.tunnelForward.toString(),\n            /*            crop */ '-',\n            /* send_frame_meta */ 'true',\n            /*         control */ 'true',\n            /*      display_id */ '0',\n            /*    show_touches */ 'false',\n            /*      stay_awake */ 'true',\n            /*   codec_options */ `profile=${this.profile},level=${this.level}`,\n            // Provide an invalid encoder name\n            // So the server will return all available encoders\n            /*    encoder_name */ '_',\n        ];\n    }\n    createConnection(device) {\n        if (this.tunnelForward) {\n            return new ScrcpyClientForwardConnection(device);\n        }\n        else {\n            return new ScrcpyClientReverseConnection(device);\n        }\n    }\n    getOutputEncoderNameRegex() {\n        return /^\\s+scrcpy --encoder-name '(.*?)'/;\n    }\n    createBackOrScreenOnEvent(action, device) {\n        if (action === AndroidKeyEventAction.Down) {\n            return ScrcpyBackOrScreenOnEvent1_17.serialize({ type: ScrcpyControlMessageType.BackOrScreenOn }, device.backend);\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=1_17.js.map","import Struct, { placeholder } from \"@yume-chan/struct\";\nimport { ScrcpyControlMessageType } from \"../message\";\nimport { ScrcpyOptions1_17 } from \"./1_17\";\nexport const ScrcpyBackOrScreenOnEvent1_18 = new Struct()\n    .uint8('type', placeholder())\n    .uint8('action', placeholder());\nexport class ScrcpyOptions1_18 extends ScrcpyOptions1_17 {\n    constructor(init) {\n        super(init);\n        const { powerOffOnClose = false } = init;\n        this.powerOffOnClose = powerOffOnClose;\n    }\n    formatServerArguments() {\n        return [\n            ...super.formatServerArguments(),\n            this.powerOffOnClose.toString()\n        ];\n    }\n    formatGetEncoderListArguments() {\n        return [\n            ...super.formatGetEncoderListArguments(),\n            this.powerOffOnClose.toString()\n        ];\n    }\n    getOutputEncoderNameRegex() {\n        return /^\\s+scrcpy --encoder '(.*?)'/;\n    }\n    createBackOrScreenOnEvent(action, device) {\n        return ScrcpyBackOrScreenOnEvent1_18.serialize({\n            type: ScrcpyControlMessageType.BackOrScreenOn,\n            action,\n        }, device.backend);\n    }\n}\n//# sourceMappingURL=1_18.js.map","import { __awaiter } from \"tslib\";\nimport { DEFAULT_SERVER_PATH } from \"./options\";\nexport function pushServer(device, file, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { path = DEFAULT_SERVER_PATH, onProgress, } = options;\n        const sync = yield device.sync();\n        return sync.write(path, file, undefined, undefined, onProgress);\n    });\n}\n//# sourceMappingURL=push-server.js.map","class BitReader {\n    constructor(buffer) {\n        this.bytePosition = 0;\n        this.bitPosition = 0;\n        this.buffer = buffer;\n    }\n    read(length) {\n        let result = 0;\n        for (let i = 0; i < length; i += 1) {\n            result = (result << 1) | this.next();\n        }\n        return result;\n    }\n    next() {\n        const value = (this.buffer[this.bytePosition] >> (7 - this.bitPosition)) & 1;\n        this.bitPosition += 1;\n        if (this.bitPosition === 8) {\n            this.bytePosition += 1;\n            this.bitPosition = 0;\n        }\n        return value;\n    }\n    decodeExponentialGolombNumber() {\n        let length = 0;\n        while (this.next() === 0) {\n            length += 1;\n        }\n        if (length === 0) {\n            return 0;\n        }\n        return (1 << length | this.read(length)) - 1;\n    }\n}\nfunction* iterateNalu(buffer) {\n    // -1 means we haven't found the first start code\n    let start = -1;\n    let writeIndex = 0;\n    // How many `0x00`s in a row we have counted\n    let zeroCount = 0;\n    let inEmulation = false;\n    for (const byte of buffer) {\n        buffer[writeIndex] = byte;\n        writeIndex += 1;\n        if (inEmulation) {\n            if (byte > 0x03) {\n                // `0x00000304` or larger are invalid\n                throw new Error('Invalid data');\n            }\n            inEmulation = false;\n            continue;\n        }\n        if (byte == 0x00) {\n            zeroCount += 1;\n            continue;\n        }\n        const lastZeroCount = zeroCount;\n        zeroCount = 0;\n        if (start === -1) {\n            // 0x000001 is the start code\n            // But it can be preceded by any number of zeros\n            // So 2 is the minimal\n            if (lastZeroCount >= 2 && byte === 0x01) {\n                // Found start of first NAL unit\n                writeIndex = 0;\n                start = 0;\n                continue;\n            }\n            // Not begin with start code\n            throw new Error('Invalid data');\n        }\n        if (lastZeroCount < 2) {\n            // zero or one `0x00`s are acceptable\n            continue;\n        }\n        if (byte === 0x01) {\n            // Remove all leading `0x00`s and this `0x01`\n            writeIndex -= lastZeroCount + 1;\n            // Found another NAL unit\n            yield buffer.subarray(start, writeIndex);\n            start = writeIndex;\n            continue;\n        }\n        if (lastZeroCount > 2) {\n            // Too much `0x00`s\n            throw new Error('Invalid data');\n        }\n        switch (byte) {\n            case 0x02:\n                // Didn't find why, but 7.4.1 NAL unit semantics forbids `0x000002` appearing in NAL units\n                throw new Error('Invalid data');\n            case 0x03:\n                // `0x000003` is the \"emulation_prevention_three_byte\"\n                // `0x00000300`, `0x00000301`, `0x00000302` and `0x00000303` represent\n                // `0x000000`, `0x000001`, `0x000002` and `0x000003` respectively\n                // Remove current byte\n                writeIndex -= 1;\n                inEmulation = true;\n                break;\n            default:\n                // `0x000004` or larger are ok\n                break;\n        }\n    }\n    if (inEmulation || zeroCount !== 0) {\n        throw new Error('Invalid data');\n    }\n    yield buffer.subarray(start, writeIndex);\n}\n// 7.3.2.1.1 Sequence parameter set data syntax\nexport function parse_sequence_parameter_set(buffer) {\n    for (const nalu of iterateNalu(new Uint8Array(buffer))) {\n        const reader = new BitReader(nalu);\n        if (reader.next() !== 0) {\n            throw new Error('Invalid data');\n        }\n        const nal_ref_idc = reader.read(2);\n        const nal_unit_type = reader.read(5);\n        if (nal_unit_type !== 7) {\n            continue;\n        }\n        if (nal_ref_idc === 0) {\n            throw new Error('Invalid data');\n        }\n        const profile_idc = reader.read(8);\n        const constraint_set = reader.read(8);\n        const constraint_set_reader = new BitReader(new Uint8Array([constraint_set]));\n        const constraint_set0_flag = !!constraint_set_reader.next();\n        const constraint_set1_flag = !!constraint_set_reader.next();\n        const constraint_set2_flag = !!constraint_set_reader.next();\n        const constraint_set3_flag = !!constraint_set_reader.next();\n        const constraint_set4_flag = !!constraint_set_reader.next();\n        const constraint_set5_flag = !!constraint_set_reader.next();\n        // reserved_zero_2bits\n        if (constraint_set_reader.read(2) !== 0) {\n            throw new Error('Invalid data');\n        }\n        const level_idc = reader.read(8);\n        const seq_parameter_set_id = reader.decodeExponentialGolombNumber();\n        if (profile_idc === 100 || profile_idc === 110 ||\n            profile_idc === 122 || profile_idc === 244 || profile_idc === 44 ||\n            profile_idc === 83 || profile_idc === 86 || profile_idc === 118 ||\n            profile_idc === 128 || profile_idc === 138 || profile_idc === 139 ||\n            profile_idc === 134) {\n            const chroma_format_idc = reader.decodeExponentialGolombNumber();\n            if (chroma_format_idc === 3) {\n                const separate_colour_plane_flag = !!reader.next();\n            }\n            const bit_depth_luma_minus8 = reader.decodeExponentialGolombNumber();\n            const bit_depth_chroma_minus8 = reader.decodeExponentialGolombNumber();\n            const qpprime_y_zero_transform_bypass_flag = !!reader.next();\n            const seq_scaling_matrix_present_flag = !!reader.next();\n            if (seq_scaling_matrix_present_flag) {\n                const seq_scaling_list_present_flag = [];\n                for (let i = 0; i < ((chroma_format_idc !== 3) ? 8 : 12); i++) {\n                    seq_scaling_list_present_flag[i] = !!reader.next();\n                    if (seq_scaling_list_present_flag[i])\n                        if (i < 6) {\n                            // TODO\n                            // scaling_list( ScalingList4x4[ i ], 16,\n                            //               UseDefaultScalingMatrix4x4Flag[ i ])\n                        }\n                        else {\n                            // TODO\n                            // scaling_list( ScalingList8x8[ i − 6 ], 64,\n                            //               UseDefaultScalingMatrix8x8Flag[ i − 6 ] )\n                        }\n                }\n            }\n        }\n        const log2_max_frame_num_minus4 = reader.decodeExponentialGolombNumber();\n        const pic_order_cnt_type = reader.decodeExponentialGolombNumber();\n        if (pic_order_cnt_type === 0) {\n            const log2_max_pic_order_cnt_lsb_minus4 = reader.decodeExponentialGolombNumber();\n        }\n        else if (pic_order_cnt_type === 1) {\n            const delta_pic_order_always_zero_flag = reader.next();\n            const offset_for_non_ref_pic = reader.decodeExponentialGolombNumber();\n            const offset_for_top_to_bottom_field = reader.decodeExponentialGolombNumber();\n            const num_ref_frames_in_pic_order_cnt_cycle = reader.decodeExponentialGolombNumber();\n            const offset_for_ref_frame = [];\n            for (let i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\n                offset_for_ref_frame[i] = reader.decodeExponentialGolombNumber();\n            }\n        }\n        const max_num_ref_frames = reader.decodeExponentialGolombNumber();\n        const gaps_in_frame_num_value_allowed_flag = reader.next();\n        const pic_width_in_mbs_minus1 = reader.decodeExponentialGolombNumber();\n        const pic_height_in_map_units_minus1 = reader.decodeExponentialGolombNumber();\n        const frame_mbs_only_flag = reader.next();\n        if (!frame_mbs_only_flag) {\n            const mb_adaptive_frame_field_flag = !!reader.next();\n        }\n        const direct_8x8_inference_flag = reader.next();\n        const frame_cropping_flag = !!reader.next();\n        let frame_crop_left_offset;\n        let frame_crop_right_offset;\n        let frame_crop_top_offset;\n        let frame_crop_bottom_offset;\n        if (frame_cropping_flag) {\n            frame_crop_left_offset = reader.decodeExponentialGolombNumber();\n            frame_crop_right_offset = reader.decodeExponentialGolombNumber();\n            frame_crop_top_offset = reader.decodeExponentialGolombNumber();\n            frame_crop_bottom_offset = reader.decodeExponentialGolombNumber();\n        }\n        else {\n            frame_crop_left_offset = 0;\n            frame_crop_right_offset = 0;\n            frame_crop_top_offset = 0;\n            frame_crop_bottom_offset = 0;\n        }\n        const vui_parameters_present_flag = !!reader.next();\n        if (vui_parameters_present_flag) {\n            // TODO\n            // vui_parameters( )\n        }\n        return {\n            profile_idc,\n            constraint_set,\n            constraint_set0_flag,\n            constraint_set1_flag,\n            constraint_set2_flag,\n            constraint_set3_flag,\n            constraint_set4_flag,\n            constraint_set5_flag,\n            level_idc,\n            seq_parameter_set_id,\n            pic_width_in_mbs_minus1,\n            pic_height_in_map_units_minus1,\n            frame_mbs_only_flag,\n            frame_cropping_flag,\n            frame_crop_left_offset,\n            frame_crop_right_offset,\n            frame_crop_top_offset,\n            frame_crop_bottom_offset,\n        };\n    }\n    throw new Error('Invalid data');\n}\n//# sourceMappingURL=sps.js.map","import { __awaiter } from \"tslib\";\nimport { AdbLegacyShell, DataEventEmitter } from '@yume-chan/adb';\nimport { PromiseResolver } from '@yume-chan/async';\nimport { EventEmitter } from '@yume-chan/event';\nimport Struct from '@yume-chan/struct';\nimport { AndroidMotionEventAction, ScrcpyControlMessageType, ScrcpyInjectKeyCodeControlMessage, ScrcpyInjectTextControlMessage, ScrcpyInjectTouchControlMessage } from './message';\nimport { ScrcpyLogLevel } from \"./options\";\nimport { pushServer } from \"./push-server\";\nimport { parse_sequence_parameter_set } from './sps';\nclass LineReader {\n    constructor(text) {\n        this.start = 0;\n        this.peekEnd = 0;\n        this.text = text;\n    }\n    next() {\n        let result = this.peek();\n        this.start = this.peekEnd;\n        this.peekEnd = 0;\n        return result;\n    }\n    peek() {\n        if (this.peekEnd) {\n            return this.peekLine;\n        }\n        const index = this.text.indexOf('\\n', this.start);\n        if (index === -1) {\n            this.peekLine = undefined;\n            this.peekEnd = this.text.length;\n            return undefined;\n        }\n        const line = this.text.substring(this.start, index);\n        this.peekLine = line;\n        this.peekEnd = index + 1;\n        return line;\n    }\n}\nfunction* parseScrcpyOutput(text) {\n    const lines = new LineReader(text);\n    let line;\n    while (line = lines.next()) {\n        if (line === '') {\n            continue;\n        }\n        if (line.startsWith('[server] ')) {\n            line = line.substring('[server] '.length);\n            if (line.startsWith('DEBUG: ')) {\n                yield {\n                    level: ScrcpyLogLevel.Debug,\n                    message: line.substring('DEBUG: '.length),\n                };\n                continue;\n            }\n            if (line.startsWith('INFO: ')) {\n                yield {\n                    level: ScrcpyLogLevel.Info,\n                    message: line.substring('INFO: '.length),\n                };\n                continue;\n            }\n            if (line.startsWith('ERROR: ')) {\n                line = line.substring('ERROR: '.length);\n                const message = line;\n                let error;\n                if (line.startsWith('Exception on thread')) {\n                    if (line = lines.next()) {\n                        const [errorType, errorMessage] = line.split(': ', 2);\n                        const stackTrace = [];\n                        while (line = lines.peek()) {\n                            if (line.startsWith('\\t')) {\n                                stackTrace.push(line.trim());\n                                lines.next();\n                                continue;\n                            }\n                            break;\n                        }\n                        error = {\n                            type: errorType,\n                            message: errorMessage,\n                            stackTrace,\n                        };\n                    }\n                }\n                yield {\n                    level: ScrcpyLogLevel.Error,\n                    message,\n                    error,\n                };\n                continue;\n            }\n        }\n        yield {\n            level: ScrcpyLogLevel.Info,\n            message: line,\n        };\n    }\n}\nconst Size = new Struct()\n    .uint16('width')\n    .uint16('height');\nconst VideoPacket = new Struct()\n    .int64('pts')\n    .uint32('size')\n    .arrayBuffer('data', { lengthField: 'size' });\nexport const NoPts = BigInt(-1);\nconst ClipboardMessage = new Struct()\n    .uint32('length')\n    .string('content', { lengthField: 'length' });\nexport class ScrcpyClient {\n    constructor(device) {\n        this.debugEvent = new EventEmitter();\n        this.infoEvent = new EventEmitter();\n        this.errorEvent = new EventEmitter();\n        this.closeEvent = new EventEmitter();\n        this._running = false;\n        this.sizeChangedEvent = new EventEmitter();\n        this.videoDataEvent = new DataEventEmitter();\n        this.clipboardChangeEvent = new EventEmitter();\n        this.sendingTouchMessage = false;\n        this.device = device;\n    }\n    static pushServer(device, file, options) {\n        pushServer(device, file, options);\n    }\n    static getEncoders(device, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const client = new ScrcpyClient(device);\n            const encoderNameRegex = options.getOutputEncoderNameRegex();\n            const resolver = new PromiseResolver();\n            const encoders = [];\n            client.onError(({ message, error }) => {\n                if (error && error.type !== 'com.genymobile.scrcpy.InvalidEncoderException') {\n                    resolver.reject(new Error(`${error.type}: ${error.message}`));\n                    return;\n                }\n                const match = message.match(encoderNameRegex);\n                if (match) {\n                    encoders.push(match[1]);\n                }\n            });\n            client.onClose(() => {\n                resolver.resolve(encoders);\n            });\n            // Scrcpy server will open connections, before initializing encoder\n            // Thus although an invalid encoder name is given, the start process will success\n            yield client.startCore(options.formatGetEncoderListArguments(), options.createConnection(device));\n            return resolver.promise;\n        });\n    }\n    get backend() { return this.device.backend; }\n    get onDebug() { return this.debugEvent.event; }\n    get onInfo() { return this.infoEvent.event; }\n    get onError() { return this.errorEvent.event; }\n    get onClose() { return this.closeEvent.event; }\n    get running() { return this._running; }\n    get screenWidth() { return this._screenWidth; }\n    get screenHeight() { return this._screenHeight; }\n    get onSizeChanged() { return this.sizeChangedEvent.event; }\n    get onVideoData() { return this.videoDataEvent.event; }\n    get onClipboardChange() { return this.clipboardChangeEvent.event; }\n    startCore(serverArguments, connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let process;\n            try {\n                yield connection.initialize();\n                process = yield this.device.childProcess.spawn(serverArguments, {\n                    // Scrcpy server doesn't split stdout and stderr,\n                    // so disable Shell Protocol to simplify processing\n                    shells: [AdbLegacyShell],\n                });\n                process.onStdout(this.handleProcessOutput, this);\n                const resolver = new PromiseResolver();\n                const removeExitListener = process.onExit(() => {\n                    resolver.reject(new Error('scrcpy server exited prematurely'));\n                });\n                const [videoStream, controlStream] = yield Promise.race([\n                    resolver.promise,\n                    connection.getStreams(),\n                ]);\n                removeExitListener();\n                this.process = process;\n                this.process.onExit(this.handleProcessClosed, this);\n                this.videoStream = videoStream;\n                this.controlStream = controlStream;\n                this._running = true;\n                this.receiveVideo();\n                this.receiveControl();\n            }\n            catch (e) {\n                yield (process === null || process === void 0 ? void 0 : process.kill());\n                throw e;\n            }\n            finally {\n                connection.dispose();\n            }\n        });\n    }\n    start(options) {\n        this.options = options;\n        return this.startCore(options.formatServerArguments(), options.createConnection(this.device));\n    }\n    handleProcessOutput(data) {\n        const string = this.device.backend.decodeUtf8(data);\n        for (const output of parseScrcpyOutput(string)) {\n            switch (output.level) {\n                case ScrcpyLogLevel.Debug:\n                    this.debugEvent.fire(output.message);\n                    break;\n                case ScrcpyLogLevel.Info:\n                    this.infoEvent.fire(output.message);\n                    break;\n                case ScrcpyLogLevel.Error:\n                    this.errorEvent.fire(output);\n                    break;\n            }\n        }\n    }\n    handleProcessClosed() {\n        this._running = false;\n        this.closeEvent.fire();\n    }\n    receiveVideo() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.videoStream) {\n                throw new Error('receiveVideo started before initialization');\n            }\n            try {\n                // Device name, we don't need it\n                yield this.videoStream.read(64);\n                // Initial video size\n                const { width, height } = yield Size.deserialize(this.videoStream);\n                this._screenWidth = width;\n                this._screenHeight = height;\n                let buffer;\n                while (this._running) {\n                    const { pts, data } = yield VideoPacket.deserialize(this.videoStream);\n                    if (!data || data.byteLength === 0) {\n                        continue;\n                    }\n                    if (pts === NoPts) {\n                        const sequenceParameterSet = parse_sequence_parameter_set(data.slice(0));\n                        const { pic_width_in_mbs_minus1, pic_height_in_map_units_minus1, frame_mbs_only_flag, frame_crop_left_offset, frame_crop_right_offset, frame_crop_top_offset, frame_crop_bottom_offset, } = sequenceParameterSet;\n                        const width = (pic_width_in_mbs_minus1 + 1) * 16;\n                        const height = (pic_height_in_map_units_minus1 + 1) * (2 - frame_mbs_only_flag) * 16;\n                        const cropLeft = frame_crop_left_offset * 2;\n                        const cropRight = frame_crop_right_offset * 2;\n                        const cropTop = frame_crop_top_offset * 2;\n                        const cropBottom = frame_crop_bottom_offset * 2;\n                        const screenWidth = width - cropLeft - cropRight;\n                        const screenHeight = height - cropTop - cropBottom;\n                        this._screenWidth = screenWidth;\n                        this._screenHeight = screenHeight;\n                        this.sizeChangedEvent.fire({\n                            sequenceParameterSet,\n                            width,\n                            height,\n                            cropLeft: cropLeft,\n                            cropRight: cropRight,\n                            cropTop: cropTop,\n                            cropBottom: cropBottom,\n                            croppedWidth: screenWidth,\n                            croppedHeight: screenHeight,\n                        });\n                        buffer = data;\n                        continue;\n                    }\n                    let array;\n                    if (buffer) {\n                        array = new Uint8Array(buffer.byteLength + data.byteLength);\n                        array.set(new Uint8Array(buffer));\n                        array.set(new Uint8Array(data), buffer.byteLength);\n                        buffer = undefined;\n                    }\n                    else {\n                        array = new Uint8Array(data);\n                    }\n                    yield this.videoDataEvent.fire({\n                        pts,\n                        size: array.byteLength,\n                        data: array.buffer,\n                    });\n                }\n            }\n            catch (e) {\n                if (!this._running) {\n                    return;\n                }\n            }\n        });\n    }\n    receiveControl() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.controlStream) {\n                throw new Error('receiveControl started before initialization');\n            }\n            try {\n                while (true) {\n                    const type = yield this.controlStream.read(1);\n                    switch (new Uint8Array(type)[0]) {\n                        case 0:\n                            const { content } = yield ClipboardMessage.deserialize(this.controlStream);\n                            this.clipboardChangeEvent.fire(content);\n                            break;\n                        default:\n                            throw new Error('unknown control message type');\n                    }\n                }\n            }\n            catch (e) {\n                if (!this._running) {\n                    return;\n                }\n            }\n        });\n    }\n    injectKeyCode(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.controlStream) {\n                throw new Error('injectKeyCode called before initialization');\n            }\n            yield this.controlStream.write(ScrcpyInjectKeyCodeControlMessage.serialize(Object.assign(Object.assign({}, message), { type: ScrcpyControlMessageType.InjectKeycode }), this.backend));\n        });\n    }\n    injectText(text) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.controlStream) {\n                throw new Error('injectText called before initialization');\n            }\n            yield this.controlStream.write(ScrcpyInjectTextControlMessage.serialize({\n                type: ScrcpyControlMessageType.InjectText,\n                text,\n            }, this.backend));\n        });\n    }\n    injectTouch(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.controlStream) {\n                throw new Error('injectTouch called before initialization');\n            }\n            if (!this.screenWidth || !this.screenHeight) {\n                return;\n            }\n            // ADB streams are actually pretty low-bandwidth and laggy\n            // Re-sample move events to avoid flooding the connection\n            if (this.sendingTouchMessage &&\n                message.action === AndroidMotionEventAction.Move) {\n                return;\n            }\n            this.sendingTouchMessage = true;\n            const buffer = ScrcpyInjectTouchControlMessage.serialize(Object.assign(Object.assign({}, message), { type: ScrcpyControlMessageType.InjectTouch, screenWidth: this.screenWidth, screenHeight: this.screenHeight }), this.backend);\n            yield this.controlStream.write(buffer);\n            this.sendingTouchMessage = false;\n        });\n    }\n    pressBackOrTurnOnScreen(action) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.controlStream) {\n                throw new Error('pressBackOrTurnOnScreen called before initialization');\n            }\n            const buffer = this.options.createBackOrScreenOnEvent(action, this.device);\n            if (buffer) {\n                yield this.controlStream.write(buffer);\n            }\n        });\n    }\n    close() {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._running) {\n                return;\n            }\n            this._running = false;\n            (_a = this.videoStream) === null || _a === void 0 ? void 0 : _a.close();\n            (_b = this.controlStream) === null || _b === void 0 ? void 0 : _b.close();\n            yield ((_c = this.process) === null || _c === void 0 ? void 0 : _c.kill());\n        });\n    }\n}\n//# sourceMappingURL=client.js.map","import { PromiseResolver } from '@yume-chan/async';\nimport { AutoDisposable, EventEmitter } from '@yume-chan/event';\nlet worker;\nlet workerReady = false;\nconst pendingResolvers = [];\nlet streamId = 0;\nconst pictureReadyEvent = new EventEmitter();\nexport class TinyH264Wrapper extends AutoDisposable {\n    constructor(streamId) {\n        super();\n        this.pictureReadyEvent = new EventEmitter();\n        this.streamId = streamId;\n        this.addDisposable(pictureReadyEvent.event(this.handlePictureReady, this));\n    }\n    get onPictureReady() { return this.pictureReadyEvent.event; }\n    handlePictureReady(e) {\n        if (e.renderStateId === this.streamId) {\n            this.pictureReadyEvent.fire(e);\n        }\n    }\n    feed(data) {\n        worker.postMessage({\n            type: 'decode',\n            data: data,\n            offset: 0,\n            length: data.byteLength,\n            renderStateId: this.streamId,\n        }, [data]);\n    }\n    dispose() {\n        super.dispose();\n        worker.postMessage({\n            type: 'release',\n            renderStateId: this.streamId,\n        });\n    }\n}\nexport function createTinyH264Wrapper() {\n    if (!worker) {\n        worker = new Worker(new URL('./worker.js', import.meta.url), { type: 'module' });\n        worker.addEventListener('message', (e) => {\n            const { data } = e;\n            switch (data.type) {\n                case 'decoderReady':\n                    workerReady = true;\n                    for (const resolver of pendingResolvers) {\n                        resolver.resolve(new TinyH264Wrapper(streamId));\n                        streamId += 1;\n                    }\n                    pendingResolvers.length = 0;\n                    break;\n                case 'pictureReady':\n                    pictureReadyEvent.fire(data);\n                    break;\n            }\n        });\n    }\n    if (!workerReady) {\n        const resolver = new PromiseResolver();\n        pendingResolvers.push(resolver);\n        return resolver.promise;\n    }\n    const decoder = new TinyH264Wrapper(streamId);\n    streamId += 1;\n    return Promise.resolve(decoder);\n}\n//# sourceMappingURL=wrapper.js.map","import { __awaiter } from \"tslib\";\nimport { AndroidCodecLevel, AndroidCodecProfile } from \"../../codec\";\nimport { createTinyH264Wrapper } from \"./wrapper\";\nlet cachedInitializePromise;\nfunction initialize() {\n    if (!cachedInitializePromise) {\n        cachedInitializePromise = Promise.all([import('yuv-buffer'), import('yuv-canvas')]).then(([YuvBuffer, { default: YuvCanvas }]) => ({\n            YuvBuffer, YuvCanvas\n        }));\n    }\n    return cachedInitializePromise;\n}\nexport class TinyH264Decoder {\n    constructor() {\n        this.maxProfile = AndroidCodecProfile.Baseline;\n        this.maxLevel = AndroidCodecLevel.Level4;\n        initialize();\n        this._element = document.createElement('canvas');\n    }\n    get element() { return this._element; }\n    setSize(size) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { YuvBuffer, YuvCanvas } = yield initialize();\n            if (!this._yuvCanvas) {\n                this._yuvCanvas = YuvCanvas.attach(this._element);\n                ;\n            }\n            const { width, height } = size;\n            const chromaWidth = width / 2;\n            const chromaHeight = height / 2;\n            this._element.width = size.croppedWidth;\n            this._element.height = size.croppedHeight;\n            const format = YuvBuffer.format({\n                width,\n                height,\n                chromaWidth,\n                chromaHeight,\n                cropLeft: size.cropLeft,\n                cropTop: size.cropTop,\n                cropWidth: size.croppedWidth,\n                cropHeight: size.croppedHeight,\n                displayWidth: size.croppedWidth,\n                displayHeight: size.croppedHeight,\n            });\n            (_a = this._wrapperInitializePromise) === null || _a === void 0 ? void 0 : _a.then(wrapper => wrapper.dispose());\n            this._wrapperInitializePromise = createTinyH264Wrapper();\n            const wrapper = yield this._wrapperInitializePromise;\n            const uPlaneOffset = width * height;\n            const vPlaneOffset = uPlaneOffset + chromaWidth * chromaHeight;\n            wrapper.onPictureReady(({ data }) => {\n                const array = new Uint8Array(data);\n                const frame = YuvBuffer.frame(format, YuvBuffer.lumaPlane(format, array, width, 0), YuvBuffer.chromaPlane(format, array, chromaWidth, uPlaneOffset), YuvBuffer.chromaPlane(format, array, chromaWidth, vPlaneOffset));\n                this._yuvCanvas.drawFrame(frame);\n            });\n        });\n    }\n    feed(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._wrapperInitializePromise) {\n                throw new Error('Decoder not initialized');\n            }\n            const wrapper = yield this._wrapperInitializePromise;\n            wrapper.feed(data);\n        });\n    }\n    dispose() {\n        var _a;\n        (_a = this._wrapperInitializePromise) === null || _a === void 0 ? void 0 : _a.then(wrapper => wrapper.dispose());\n    }\n}\n//# sourceMappingURL=index.js.map","import { AndroidCodecLevel, AndroidCodecProfile } from \"../../codec\";\nfunction toHex(value) {\n    return value.toString(16).padStart(2, '0').toUpperCase();\n}\nexport class WebCodecsDecoder {\n    constructor() {\n        this.maxProfile = AndroidCodecProfile.High;\n        this.maxLevel = AndroidCodecLevel.Level5;\n        this._element = document.createElement('canvas');\n        this.context = this._element.getContext('2d');\n        this.decoder = new VideoDecoder({\n            output: (frame) => {\n                this.context.drawImage(frame, 0, 0);\n                frame.close();\n            },\n            error() { },\n        });\n    }\n    get element() { return this._element; }\n    setSize(size) {\n        const { sequenceParameterSet: { profile_idc, constraint_set, level_idc } } = size;\n        this._element.width = size.croppedWidth;\n        this._element.height = size.croppedHeight;\n        // https://www.rfc-editor.org/rfc/rfc6381#section-3.3\n        // ISO Base Media File Format Name Space\n        const codec = `avc1.${[profile_idc, constraint_set, level_idc].map(toHex).join('')}`;\n        this.decoder.configure({\n            codec: codec,\n            optimizeForLatency: true,\n        });\n    }\n    feed(data) {\n        this.decoder.decode(new EncodedVideoChunk({\n            type: 'key',\n            timestamp: 0,\n            data,\n        }));\n    }\n    dispose() {\n        this.decoder.close();\n    }\n}\n//# sourceMappingURL=index.js.map","import { CommandBar, Dialog, Dropdown, ICommandBarItemProps, Icon, IconButton, IDropdownOption, LayerHost, Position, ProgressIndicator, SpinButton, Stack, Toggle, TooltipHost } from \"@fluentui/react\";\nimport { useId } from \"@fluentui/react-hooks\";\nimport { EventEmitter } from \"@yume-chan/event\";\nimport { AndroidKeyCode, AndroidKeyEventAction, AndroidMotionEventAction, H264Decoder, H264DecoderConstructor, pushServer, ScrcpyClient, ScrcpyLogLevel, ScrcpyOptions1_18, ScrcpyScreenOrientation, TinyH264Decoder, WebCodecsDecoder } from \"@yume-chan/scrcpy\";\nimport { action, autorun, makeAutoObservable, observable, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport React, { useEffect, useState } from \"react\";\nimport { DemoMode, DeviceView, DeviceViewRef, ExternalLink } from \"../components\";\nimport { global } from \"../state\";\nimport { CommonStackTokens, formatSpeed, RouteStackProps } from \"../utils\";\n\nconst SERVER_URL = new URL('@yume-chan/scrcpy/bin/scrcpy-server?url', import.meta.url).toString();\n\nexport const ScrcpyServerVersion = '1.19';\n\nclass FetchWithProgress {\n    public readonly promise: Promise<ArrayBuffer>;\n\n    private _downloaded = 0;\n    public get downloaded() { return this._downloaded; }\n\n    private _total = 0;\n    public get total() { return this._total; }\n\n    private progressEvent = new EventEmitter<[download: number, total: number]>();\n    public get onProgress() { return this.progressEvent.event; }\n\n    public constructor(url: string) {\n        this.promise = this.fetch(url);\n    }\n\n    private async fetch(url: string) {\n        const response = await window.fetch(url);\n        this._total = Number.parseInt(response.headers.get('Content-Length') ?? '0', 10);\n        this.progressEvent.fire([this._downloaded, this._total]);\n\n        const reader = response.body!.getReader();\n        const chunks: Uint8Array[] = [];\n        while (true) {\n            const result = await reader.read();\n            if (result.done) {\n                break;\n            }\n            chunks.push(result.value);\n            this._downloaded += result.value.byteLength;\n            this.progressEvent.fire([this._downloaded, this._total]);\n        }\n\n        this._total = chunks.reduce((result, item) => result + item.byteLength, 0);\n        const result = new Uint8Array(this._total);\n        let position = 0;\n        for (const chunk of chunks) {\n            result.set(chunk, position);\n            position += chunk.byteLength;\n        }\n        return result.buffer;\n    }\n}\n\nlet cachedValue: FetchWithProgress | undefined;\nfunction fetchServer(onProgress?: (e: [downloaded: number, total: number]) => void) {\n    if (!cachedValue) {\n        cachedValue = new FetchWithProgress(SERVER_URL);\n        cachedValue.promise.catch((e) => {\n            cachedValue = undefined;\n        });\n    }\n\n    if (onProgress) {\n        cachedValue.onProgress(onProgress);\n        onProgress([cachedValue.downloaded, cachedValue.total]);\n    }\n\n    return cachedValue.promise;\n}\n\nfunction clamp(value: number, min: number, max: number): number {\n    if (value < min) {\n        return min;\n    }\n\n    if (value > max) {\n        return max;\n    }\n\n    return value;\n}\n\nclass KeyRepeater {\n    key: AndroidKeyCode;\n    client: ScrcpyClient;\n\n    delay: number;\n    interval: number;\n\n    onRelease: VoidFunction | undefined;\n\n    constructor(key: AndroidKeyCode, client: ScrcpyClient, delay = 0, interval = 0) {\n        this.key = key;\n        this.client = client;\n\n        this.delay = delay;\n        this.interval = interval;\n    }\n\n    async press() {\n        await this.client.injectKeyCode({\n            action: AndroidKeyEventAction.Down,\n            keyCode: this.key,\n            repeat: 0,\n            metaState: 0,\n        });\n\n        if (this.delay === 0) {\n            return;\n        }\n\n        const timeoutId = setTimeout(async () => {\n            await this.client.injectKeyCode({\n                action: AndroidKeyEventAction.Down,\n                keyCode: this.key,\n                repeat: 1,\n                metaState: 0,\n            });\n\n            if (this.interval === 0) {\n                return;\n            }\n\n            const intervalId = setInterval(async () => {\n                await this.client.injectKeyCode({\n                    action: AndroidKeyEventAction.Down,\n                    keyCode: this.key,\n                    repeat: 1,\n                    metaState: 0,\n                });\n            }, this.interval);\n            this.onRelease = () => clearInterval(intervalId);\n        }, this.delay);\n        this.onRelease = () => clearTimeout(timeoutId);\n    }\n\n    async release() {\n        this.onRelease?.();\n\n        await this.client.injectKeyCode({\n            action: AndroidKeyEventAction.Up,\n            keyCode: this.key,\n            repeat: 0,\n            metaState: 0,\n        });\n    }\n}\n\nclass ScrcpyPageState {\n    running = false;\n\n    deviceView: DeviceViewRef | null = null;\n    rendererContainer: HTMLDivElement | null = null;\n\n    settingsVisible = false;\n    demoModeVisible = false;\n\n    width = 0;\n    height = 0;\n\n    client: ScrcpyClient | undefined = undefined;\n\n    encoders: string[] = [];\n    selectedEncoder: string | undefined = undefined;\n\n    decoders: { name: string; factory: H264DecoderConstructor; }[] = [{\n        name: 'TinyH264 (Software)',\n        factory: TinyH264Decoder,\n    }];\n    selectedDecoder: { name: string, factory: H264DecoderConstructor; } = this.decoders[0];\n    decoder: H264Decoder | undefined = undefined;\n\n    resolution = 1080;\n    bitRate = 4_000_000;\n    tunnelForward = false;\n\n    connecting = false;\n    serverTotalSize = 0;\n    serverDownloadedSize = 0;\n    debouncedServerDownloadedSize = 0;\n    serverDownloadSpeed = 0;\n    serverUploadedSize = 0;\n    debouncedServerUploadedSize = 0;\n    serverUploadSpeed = 0;\n\n    homeKeyRepeater: KeyRepeater | undefined = undefined;\n    appSwitchKeyRepeater: KeyRepeater | undefined = undefined;\n\n    get commandBarItems() {\n        const result: ICommandBarItemProps[] = [];\n\n        if (!this.running) {\n            result.push({\n                key: 'start',\n                disabled: !global.device,\n                iconProps: { iconName: 'Play' },\n                text: 'Start',\n                onClick: this.start as VoidFunction,\n            });\n        } else {\n            result.push({\n                key: 'stop',\n                iconProps: { iconName: 'Stop' },\n                text: 'Stop',\n                onClick: this.stop,\n            });\n        }\n\n        result.push({\n            key: 'fullscreen',\n            disabled: !this.running,\n            iconProps: { iconName: 'Fullscreen' },\n            text: 'Fullscreen',\n            onClick: () => { this.deviceView?.enterFullscreen(); },\n        });\n\n        return result;\n    }\n\n    get commandBarFarItems() {\n        return [\n            {\n                key: 'Settings',\n                iconProps: { iconName: 'Settings' },\n                checked: this.settingsVisible,\n                text: 'Settings',\n                onClick: action(() => {\n                    this.settingsVisible = !this.settingsVisible;\n                }),\n            },\n            {\n                key: 'DemoMode',\n                iconProps: { iconName: 'Personalize' },\n                checked: this.demoModeVisible,\n                text: 'Demo Mode Settings',\n                onClick: action(() => {\n                    this.demoModeVisible = !this.demoModeVisible;\n                }),\n            },\n            {\n                key: 'info',\n                iconProps: { iconName: 'Info' },\n                iconOnly: true,\n                tooltipHostProps: {\n                    content: (\n                        <>\n                            <p>\n                                <ExternalLink href=\"https://github.com/Genymobile/scrcpy\" spaceAfter>Scrcpy</ExternalLink>\n                                developed by Genymobile can display the screen with low latency (1~2 frames) and control the device, all without root access.\n                            </p>\n                            <p>\n                                This is a TypeScript implementation of the client part. Paired with official pre-built server binary.\n                            </p>\n                        </>\n                    ),\n                    calloutProps: {\n                        calloutMaxWidth: 300,\n                    }\n                },\n            }\n        ];\n    }\n\n    constructor() {\n        makeAutoObservable(this, {\n            decoders: observable.shallow,\n            selectedDecoder: observable.ref,\n            start: false,\n            stop: action.bound,\n            handleDeviceViewRef: action.bound,\n            handleRendererContainerRef: action.bound,\n            handleBackPointerDown: false,\n            handleBackPointerUp: false,\n            handleHomePointerDown: false,\n            handleHomePointerUp: false,\n            handleAppSwitchPointerDown: false,\n            handleAppSwitchPointerUp: false,\n            handleCurrentEncoderChange: action.bound,\n            handleSelectedDecoderChange: action.bound,\n            handleResolutionChange: action.bound,\n            handleTunnelForwardChange: action.bound,\n            handleBitRateChange: action.bound,\n            injectTouch: false,\n            handlePointerDown: false,\n            handlePointerMove: false,\n            handlePointerUp: false,\n            handleKeyDown: false,\n            homeKeyRepeater: false,\n            appSwitchKeyRepeater: false,\n        });\n\n        autorun(() => {\n            if (global.device) {\n                runInAction(() => {\n                    this.encoders = [];\n                    this.selectedEncoder = undefined;\n                });\n            } else {\n                this.stop();\n            }\n        });\n\n        autorun(() => {\n            if (this.rendererContainer && this.decoder) {\n                while (this.rendererContainer.firstChild) {\n                    this.rendererContainer.firstChild.remove();\n                }\n                this.rendererContainer.appendChild(this.decoder.element);\n            }\n        });\n\n        autorun(() => {\n            if (this.client) {\n                this.homeKeyRepeater = new KeyRepeater(AndroidKeyCode.Home, this.client);\n                this.appSwitchKeyRepeater = new KeyRepeater(AndroidKeyCode.AppSwitch, this.client);\n            } else {\n                this.homeKeyRepeater = undefined;\n                this.appSwitchKeyRepeater = undefined;\n            }\n        });\n\n        if (typeof window !== 'undefined' && typeof window.VideoDecoder === 'function') {\n            setTimeout(action(() => {\n                this.decoders.unshift({\n                    name: 'WebCodecs',\n                    factory: WebCodecsDecoder,\n                });\n                this.selectedDecoder = this.decoders[0];\n            }), 0);\n        }\n    }\n\n    start = async () => {\n        if (!global.device) {\n            return;\n        }\n\n        try {\n            if (!state.selectedDecoder) {\n                throw new Error('No available decoder');\n            }\n\n            runInAction(() => {\n                this.serverTotalSize = 0;\n                this.serverDownloadedSize = 0;\n                this.serverUploadedSize = 0;\n                this.connecting = true;\n            });\n\n            const serverBuffer = await fetchServer(action(([downloaded, total]) => {\n                this.serverDownloadedSize = downloaded;\n                this.serverTotalSize = total;\n            }));\n\n            await pushServer(global.device, serverBuffer, {\n                onProgress: action((progress) => {\n                    this.serverUploadedSize = progress;\n                }),\n            });\n\n            const encoders = await ScrcpyClient.getEncoders(\n                global.device,\n                new ScrcpyOptions1_18({\n                    version: ScrcpyServerVersion,\n                    logLevel: ScrcpyLogLevel.Debug,\n                    bitRate: 4_000_000,\n                    tunnelForward: this.tunnelForward,\n                })\n            );\n            if (encoders.length === 0) {\n                throw new Error('No available encoder found');\n            }\n\n            runInAction(() => {\n                this.encoders = encoders;\n            });\n\n            // Run scrcpy once will delete the server file\n            // Re-push it\n            await pushServer(global.device, serverBuffer);\n\n            const factory = this.selectedDecoder.factory;\n            const decoder = new factory();\n            runInAction(() => {\n                this.decoder = decoder;\n            });\n\n            const client = new ScrcpyClient(global.device);\n\n            client.onDebug(message => {\n                console.debug('[server] ' + message);\n            });\n            client.onInfo(message => {\n                console.log('[server] ' + message);\n            });\n            client.onError(({ message }) => {\n                global.showErrorDialog(message);\n            });\n            client.onClose(stop);\n\n            client.onSizeChanged(action((size) => {\n                const { croppedWidth, croppedHeight, } = size;\n\n                this.width = croppedWidth;\n                this.height = croppedHeight;\n\n                decoder.setSize(size);\n            }));\n\n            client.onVideoData(({ data }) => {\n                decoder.feed(data);\n            });\n\n            client.onClipboardChange(content => {\n                window.navigator.clipboard.writeText(content);\n            });\n\n            await client.start(\n                new ScrcpyOptions1_18({\n                    version: ScrcpyServerVersion,\n                    logLevel: ScrcpyLogLevel.Debug,\n                    maxSize: this.resolution,\n                    bitRate: this.bitRate,\n                    orientation: ScrcpyScreenOrientation.Unlocked,\n                    tunnelForward: this.tunnelForward,\n                    encoder: this.selectedEncoder ?? encoders[0],\n                    profile: decoder.maxProfile,\n                    level: decoder.maxLevel,\n                })\n            );\n\n            runInAction(() => {\n                this.client = client;\n                this.running = true;\n            });\n        } catch (e: any) {\n            global.showErrorDialog(e.message);\n        } finally {\n            runInAction(() => {\n                this.connecting = false;\n            });\n        }\n    };\n\n    stop() {\n        this.decoder?.dispose();\n        this.decoder = undefined;\n\n        this.client?.close();\n        this.client = undefined;\n\n        this.running = false;\n    }\n\n    handleDeviceViewRef(element: DeviceViewRef | null) {\n        this.deviceView = element;\n    }\n\n    handleRendererContainerRef(element: HTMLDivElement | null) {\n        this.rendererContainer = element;\n    };\n\n    handleBackPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        e.currentTarget.setPointerCapture(e.pointerId);\n        this.client!.pressBackOrTurnOnScreen(AndroidKeyEventAction.Down);\n    };\n\n    handleBackPointerUp = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        this.client!.pressBackOrTurnOnScreen(AndroidKeyEventAction.Up);\n    };\n\n    handleHomePointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        e.currentTarget.setPointerCapture(e.pointerId);\n        this.homeKeyRepeater?.press();\n    };\n\n    handleHomePointerUp = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        this.homeKeyRepeater?.release();\n    };\n\n    handleAppSwitchPointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        e.currentTarget.setPointerCapture(e.pointerId);\n        this.appSwitchKeyRepeater?.press();\n    };\n\n    handleAppSwitchPointerUp = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        this.appSwitchKeyRepeater?.release();\n    };\n\n    handleCurrentEncoderChange(e?: any, option?: IDropdownOption) {\n        if (!option) {\n            return;\n        }\n\n        this.selectedEncoder = option.text;\n    }\n\n    handleSelectedDecoderChange(e?: any, option?: IDropdownOption) {\n        if (!option) {\n            return;\n        }\n\n        this.selectedDecoder = option.data;\n    }\n\n    handleResolutionChange(e: any, value?: string) {\n        if (value === undefined) {\n            return;\n        }\n        this.resolution = +value;\n    }\n\n    handleBitRateChange(e: any, value?: string) {\n        if (value === undefined) {\n            return;\n        }\n        this.bitRate = +value;\n    }\n\n    handleTunnelForwardChange(event: React.MouseEvent<HTMLElement>, checked?: boolean) {\n        if (checked === undefined) {\n            return;\n        }\n\n        this.tunnelForward = checked;\n    };\n\n    injectTouch = (\n        action: AndroidMotionEventAction,\n        e: React.PointerEvent<HTMLDivElement>\n    ) => {\n        if (!this.client) {\n            return;\n        }\n\n        const view = this.rendererContainer!.getBoundingClientRect();\n        const pointerViewX = e.clientX - view.x;\n        const pointerViewY = e.clientY - view.y;\n        const pointerScreenX = clamp(pointerViewX / view.width, 0, 1) * this.width;\n        const pointerScreenY = clamp(pointerViewY / view.height, 0, 1) * this.height;\n\n        this.client.injectTouch({\n            action,\n            pointerId: BigInt(e.pointerId),\n            pointerX: pointerScreenX,\n            pointerY: pointerScreenY,\n            pressure: e.pressure * 65535,\n            buttons: 0,\n        });\n    };\n\n    handlePointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        this.rendererContainer!.focus();\n        e.currentTarget.setPointerCapture(e.pointerId);\n        this.injectTouch(AndroidMotionEventAction.Down, e);\n    };\n\n    handlePointerMove = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.buttons !== 1) {\n            return;\n        }\n        this.injectTouch(AndroidMotionEventAction.Move, e);\n    };\n\n    handlePointerUp = (e: React.PointerEvent<HTMLDivElement>) => {\n        if (e.button !== 0) {\n            return;\n        }\n        e.currentTarget.releasePointerCapture(e.pointerId);\n        this.injectTouch(AndroidMotionEventAction.Up, e);\n    };\n\n    handleKeyDown = async (e: React.KeyboardEvent<HTMLDivElement>) => {\n        if (!this.client) {\n            return;\n        }\n\n        const { key, code } = e;\n        if (key.match(/^[a-z0-9]$/i)) {\n            this.client!.injectText(key);\n            return;\n        }\n\n        const keyCode = ({\n            Backspace: AndroidKeyCode.Delete,\n            Space: AndroidKeyCode.Space,\n        } as Record<string, AndroidKeyCode | undefined>)[code];\n\n        if (keyCode) {\n            await this.client.injectKeyCode({\n                action: AndroidKeyEventAction.Down,\n                keyCode,\n                metaState: 0,\n                repeat: 0,\n            });\n            await this.client.injectKeyCode({\n                action: AndroidKeyEventAction.Up,\n                keyCode,\n                metaState: 0,\n                repeat: 0,\n            });\n        }\n    };\n}\n\nconst state = new ScrcpyPageState();\n\nconst ConnectionDialog = observer(() => {\n    const layerHostId = useId('layerHost');\n\n    const [isClient, setIsClient] = useState(false);\n\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    if (!isClient) {\n        return null;\n    }\n\n    return (\n        <>\n            <LayerHost id={layerHostId} style={{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, margin: 0, pointerEvents: 'none' }} />\n\n            <Dialog\n                hidden={!state.connecting}\n                modalProps={{ layerProps: { hostId: layerHostId } }}\n                dialogContentProps={{ title: 'Connecting...' }}\n            >\n                <Stack tokens={CommonStackTokens}>\n                    <ProgressIndicator\n                        label=\"1. Downloading scrcpy server...\"\n                        percentComplete={state.serverTotalSize ? state.serverDownloadedSize / state.serverTotalSize : undefined}\n                        description={formatSpeed(state.debouncedServerDownloadedSize, state.serverTotalSize, state.serverDownloadSpeed)}\n                    />\n\n                    <ProgressIndicator\n                        label=\"2. Pushing scrcpy server to device...\"\n                        progressHidden={state.serverTotalSize === 0 || state.serverDownloadedSize !== state.serverTotalSize}\n                        percentComplete={state.serverUploadedSize / state.serverTotalSize}\n                        description={formatSpeed(state.debouncedServerUploadedSize, state.serverTotalSize, state.serverUploadSpeed)}\n                    />\n\n                    <ProgressIndicator\n                        label=\"3. Starting scrcpy server on device...\"\n                        progressHidden={state.serverTotalSize === 0 || state.serverUploadedSize !== state.serverTotalSize}\n                    />\n                </Stack>\n            </Dialog>\n        </>\n    );\n});\n\nconst Scrcpy: NextPage = () => {\n    const bottomElement = (\n        <Stack verticalFill horizontalAlign=\"center\" style={{ background: '#999' }}>\n            <Stack verticalFill horizontal style={{ width: '100%', maxWidth: 300 }} horizontalAlign=\"space-evenly\" verticalAlign=\"center\">\n                <IconButton\n                    iconProps={{ iconName: 'Play' }}\n                    style={{ transform: 'rotate(180deg)', color: 'white' }}\n                    onPointerDown={state.handleBackPointerDown}\n                    onPointerUp={state.handleBackPointerUp}\n                />\n                <IconButton\n                    iconProps={{ iconName: 'LocationCircle' }}\n                    style={{ color: 'white' }}\n                    onPointerDown={state.handleHomePointerDown}\n                    onPointerUp={state.handleHomePointerUp}\n                />\n                <IconButton\n                    iconProps={{ iconName: 'Stop' }}\n                    style={{ color: 'white' }}\n                    onPointerDown={state.handleAppSwitchPointerDown}\n                    onPointerUp={state.handleAppSwitchPointerUp}\n                />\n            </Stack>\n        </Stack>\n    );\n\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Scrcpy - WebADB</title>\n            </Head>\n\n            <CommandBar items={state.commandBarItems} farItems={state.commandBarFarItems} />\n\n            <Stack horizontal grow styles={{ root: { height: 0 } }}>\n                <DeviceView\n                    ref={state.handleDeviceViewRef}\n                    width={state.width}\n                    height={state.height}\n                    bottomElement={bottomElement}\n                    bottomHeight={40}\n                >\n                    <div\n                        ref={state.handleRendererContainerRef}\n                        tabIndex={-1}\n                        onPointerDown={state.handlePointerDown}\n                        onPointerMove={state.handlePointerMove}\n                        onPointerUp={state.handlePointerUp}\n                        onPointerCancel={state.handlePointerUp}\n                        onKeyDown={state.handleKeyDown}\n                    />\n                </DeviceView>\n\n                <div style={{ padding: 12, overflow: 'hidden auto', display: state.settingsVisible ? 'block' : 'none', width: 300 }}>\n                    <div>Changes will take effect on next connection</div>\n\n                    <Dropdown\n                        label=\"Encoder\"\n                        options={state.encoders.map(item => ({ key: item, text: item }))}\n                        selectedKey={state.selectedEncoder}\n                        placeholder=\"Connect once to retrieve encoder list\"\n                        onChange={state.handleCurrentEncoderChange}\n                    />\n\n                    {state.decoders.length > 1 && (\n                        <Dropdown\n                            label=\"Decoder\"\n                            options={state.decoders.map(item => ({ key: item.name, text: item.name, data: item }))}\n                            selectedKey={state.selectedDecoder.name}\n                            onChange={state.handleSelectedDecoderChange}\n                        />\n                    )}\n\n                    <SpinButton\n                        label=\"Max Resolution (longer side, 0 = unlimited)\"\n                        labelPosition={Position.top}\n                        value={state.resolution.toString()}\n                        min={0}\n                        max={2560}\n                        step={100}\n                        onChange={state.handleResolutionChange}\n                    />\n\n                    <SpinButton\n                        label=\"Max Bit Rate\"\n                        labelPosition={Position.top}\n                        value={state.bitRate.toString()}\n                        min={100}\n                        max={10_000_000}\n                        step={100}\n                        onChange={state.handleBitRateChange}\n                    />\n\n                    <Toggle\n                        label={\n                            <>\n                                <span>Use forward connection{' '}</span>\n                                <TooltipHost content=\"Old Android devices may not support reverse connection when using ADB over WiFi\">\n                                    <Icon iconName=\"Info\" />\n                                </TooltipHost>\n                            </>\n                        }\n                        checked={state.tunnelForward}\n                        onChange={state.handleTunnelForwardChange}\n                    />\n                </div>\n\n                <DemoMode\n                    style={{ display: state.demoModeVisible ? 'block' : 'none' }}\n                />\n\n                <ConnectionDialog />\n            </Stack>\n        </Stack>\n    );\n};\n\nexport default observer(Scrcpy);\n","module.exports = require('./dist/shared/lib/head')\n"],"names":["window","__NEXT_P","push","ScrcpyControlMessageType","AndroidMotionEventAction","LayerHost","props","id","className","useUnmount","css","unmountFunction","unmountRef","current","ScrcpyInjectTouchControlMessage","uint8","InjectTouch","uint64","uint32","uint16","ScrcpyInjectTextControlMessage","InjectText","string","lengthField","AndroidKeyEventAction","AndroidKeyCode","ScrcpyInjectKeyCodeControlMessage","InjectKeycode","AndroidCodecProfile","AndroidCodecLevel","delay","time","Promise","resolve","globalThis","setTimeout","ScrcpyClientConnection","constructor","device","this","initialize","dispose","ScrcpyClientForwardConnection","connect","createSocket","connectAndRetry","i","e","Error","connectAndReadByte","stream","read","getStreams","ScrcpyClientReverseConnection","reverse","remove","_a","streams","address","add","onSocket","packet","enqueue","accept","dequeue","DEFAULT_SERVER_PATH","ScrcpyLogLevel","ScrcpyScreenOrientation","ScrcpyBackOrScreenOnEvent1_17","ScrcpyBackOrScreenOnEvent1_18","ScrcpyOptions1_18","path","version","logLevel","maxSize","bitRate","maxFps","orientation","Unlocked","tunnelForward","profile","Baseline","level","Level4","encoder","formatServerArguments","toString","formatGetEncoderListArguments","createConnection","getOutputEncoderNameRegex","createBackOrScreenOnEvent","action","Down","serialize","type","BackOrScreenOn","backend","init","super","powerOffOnClose","pushServer","file","options","onProgress","sync","write","undefined","BitReader","buffer","bytePosition","bitPosition","length","result","next","value","decodeExponentialGolombNumber","parse_sequence_parameter_set","nalu","start","writeIndex","zeroCount","inEmulation","byte","lastZeroCount","subarray","iterateNalu","Uint8Array","reader","nal_ref_idc","profile_idc","constraint_set","constraint_set_reader","constraint_set0_flag","constraint_set1_flag","constraint_set2_flag","constraint_set3_flag","constraint_set4_flag","constraint_set5_flag","level_idc","seq_parameter_set_id","chroma_format_idc","seq_scaling_list_present_flag","pic_order_cnt_type","num_ref_frames_in_pic_order_cnt_cycle","offset_for_ref_frame","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_cropping_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","LineReader","text","peekEnd","peek","peekLine","index","indexOf","line","substring","Size","VideoPacket","int64","arrayBuffer","NoPts","BigInt","ClipboardMessage","ScrcpyClient","debugEvent","infoEvent","errorEvent","closeEvent","_running","sizeChangedEvent","videoDataEvent","clipboardChangeEvent","sendingTouchMessage","client","encoderNameRegex","resolver","encoders","onError","message","error","reject","match","onClose","startCore","promise","event","_screenWidth","_screenHeight","serverArguments","connection","process","childProcess","spawn","shells","onStdout","handleProcessOutput","removeExitListener","onExit","videoStream","controlStream","race","handleProcessClosed","receiveVideo","receiveControl","kill","data","decodeUtf8","output","lines","startsWith","Debug","Info","errorType","errorMessage","split","stackTrace","trim","parseScrcpyOutput","fire","width","height","deserialize","pts","byteLength","sequenceParameterSet","slice","cropLeft","cropRight","cropTop","cropBottom","screenWidth","screenHeight","croppedWidth","croppedHeight","array","set","size","content","injectKeyCode","Object","assign","injectText","injectTouch","Move","pressBackOrTurnOnScreen","close","_b","_c","worker","workerReady","pendingResolvers","streamId","pictureReadyEvent","TinyH264Wrapper","addDisposable","handlePictureReady","renderStateId","feed","postMessage","offset","cachedInitializePromise","all","then","YuvBuffer","default","YuvCanvas","TinyH264Decoder","maxProfile","maxLevel","_element","document","createElement","setSize","_yuvCanvas","attach","chromaWidth","chromaHeight","format","cropWidth","cropHeight","displayWidth","displayHeight","_wrapperInitializePromise","wrapper","Worker","URL","addEventListener","decoder","createTinyH264Wrapper","uPlaneOffset","vPlaneOffset","onPictureReady","frame","lumaPlane","chromaPlane","drawFrame","toHex","padStart","toUpperCase","WebCodecsDecoder","High","Level5","context","getContext","VideoDecoder","drawImage","codec","map","join","configure","optimizeForLatency","decode","EncodedVideoChunk","timestamp","cachedValue","SERVER_URL","ScrcpyServerVersion","FetchWithProgress","url","_downloaded","_total","progressEvent","EventEmitter","fetch","downloaded","total","response","chunks","position","chunk","Number","parseInt","headers","get","body","getReader","done","reduce","item","clamp","min","max","KeyRepeater","key","interval","press","timeoutId","keyCode","repeat","metaState","intervalId","setInterval","onRelease","clearInterval","clearTimeout","release","Up","state","ScrcpyPageState","running","deviceView","rendererContainer","settingsVisible","demoModeVisible","selectedEncoder","decoders","name","factory","selectedDecoder","resolution","connecting","serverTotalSize","serverDownloadedSize","debouncedServerDownloadedSize","serverDownloadSpeed","serverUploadedSize","debouncedServerUploadedSize","serverUploadSpeed","homeKeyRepeater","appSwitchKeyRepeater","serverBuffer","global","runInAction","catch","progress","getEncoders","onDebug","console","debug","onInfo","log","stop","onSizeChanged","onVideoData","onClipboardChange","navigator","clipboard","writeText","handleBackPointerDown","button","currentTarget","setPointerCapture","pointerId","handleBackPointerUp","handleHomePointerDown","handleHomePointerUp","handleAppSwitchPointerDown","handleAppSwitchPointerUp","view","getBoundingClientRect","pointerViewX","clientX","x","pointerViewY","clientY","y","pointerScreenX","pointerScreenY","pointerX","pointerY","pressure","buttons","handlePointerDown","focus","handlePointerMove","handlePointerUp","releasePointerCapture","handleKeyDown","code","Backspace","Delete","Space","makeAutoObservable","observable","handleDeviceViewRef","handleRendererContainerRef","handleCurrentEncoderChange","handleSelectedDecoderChange","handleResolutionChange","handleTunnelForwardChange","handleBitRateChange","autorun","firstChild","appendChild","element","Home","AppSwitch","unshift","commandBarItems","iconProps","iconName","onClick","disabled","enterFullscreen","commandBarFarItems","checked","iconOnly","tooltipHostProps","p","ExternalLink","href","spaceAfter","calloutProps","calloutMaxWidth","option","ConnectionDialog","observer","layerHostId","useId","useState","isClient","setIsClient","useEffect","style","top","bottom","left","right","margin","pointerEvents","Dialog","hidden","modalProps","layerProps","hostId","dialogContentProps","title","Stack","tokens","CommonStackTokens","ProgressIndicator","label","percentComplete","description","formatSpeed","progressHidden","bottomElement","verticalFill","horizontalAlign","background","horizontal","maxWidth","verticalAlign","IconButton","transform","color","onPointerDown","onPointerUp","RouteStackProps","Head","CommandBar","items","farItems","grow","styles","root","DeviceView","ref","bottomHeight","div","tabIndex","onPointerMove","onPointerCancel","onKeyDown","padding","overflow","display","Dropdown","selectedKey","placeholder","onChange","SpinButton","labelPosition","Position","step","Toggle","span","TooltipHost","Icon","DemoMode","module","exports"],"sourceRoot":""}