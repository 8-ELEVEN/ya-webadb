{"version":3,"file":"static/chunks/pages/tabby-frame-70759bae99d611c0.js","mappings":"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","sources":["webpack://_N_E/?8219","webpack://_N_E/./src/pages/tabby-frame.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/tabby-frame\",\n      function () {\n        return require(\"private-next-pages/tabby-frame.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/tabby-frame\"])\n      });\n    }\n  ","import { Adb } from \"@yume-chan/adb\";\nimport {\n    AdbProxyBackend,\n    AdbProxyServerInfo,\n} from \"@yume-chan/adb-backend-proxy\";\nimport { useEffect } from \"react\";\nimport { Subject } from \"rxjs\";\nimport Yaml from \"yaml\";\n\nexport class NotImplementedSocket {\n    connect$ = new Subject<void>();\n    data$ = new Subject<Buffer>();\n    error$ = new Subject<Error>();\n    close$ = new Subject<Buffer>();\n\n    async connect() {\n        this.error$.next(new Error(\"Socket is not implemented in Web\"));\n    }\n}\n\n// Usage of connector is scattered around the Tabby codebase,\n// but these is all methods that are required.\nclass WebConnector {\n    constructor() {}\n\n    async loadConfig(): Promise<string> {\n        let config;\n\n        const text = localStorage.getItem(\"tabby-config\");\n        if (text) {\n            config = Yaml.parse(text);\n        } else {\n            config = {\n                recoverTabs: false,\n                web: {\n                    preventAccidentalTabClosure: false,\n                },\n                terminal: {\n                    fontSize: 11,\n                },\n            };\n        }\n\n        config.providerBlacklist = [\n            ...(config.providerBlacklist ?? []),\n            \"settings:ProfilesSettingsTabProvider\",\n        ];\n        config.commandBlacklist = [\n            ...(config.commandBlacklist ?? []),\n            \"core:profile-selector\",\n        ];\n\n        return Yaml.stringify(config);\n    }\n\n    async saveConfig(content: string): Promise<void> {\n        localStorage.setItem(\"tabby-config\", content);\n    }\n\n    getAppVersion(): string {\n        return \"1.0.197-nightly.0\";\n    }\n\n    createSocket() {\n        return new NotImplementedSocket();\n    }\n}\n\ninterface TabbyWeb {\n    registerPluginModule(packageName: string, exports: unknown): void;\n    bootstrap(options: unknown): Promise<void>;\n}\n\ninterface TabbyPluginModule {\n    pluginName: string;\n}\n\ninterface GlobalExtension {\n    __connector__: WebConnector | undefined;\n    module: any;\n    exports: any;\n    Tabby: TabbyWeb;\n    pluginModules: TabbyPluginModule[];\n}\n\nconst globalExtension = globalThis as unknown as GlobalExtension;\n\nasync function start() {\n    const connector = new WebConnector();\n    globalExtension[\"__connector__\"] = connector;\n\n    await import(\"@angular/compiler\");\n    // @ts-expect-error\n    await import(\"tabby-web-container/dist/preload.mjs\");\n    // @ts-expect-error\n    await import(\"tabby-web-container/dist/bundle.js\");\n\n    async function webRequire(url: string | URL) {\n        if (typeof url === \"object\") {\n            url = url.toString();\n        }\n\n        console.log(`Loading ${url}`);\n        const e = document.createElement(\"script\");\n        globalExtension[\"module\"] = { exports: {} };\n        globalExtension[\"exports\"] = globalExtension[\"module\"].exports;\n        await new Promise((resolve) => {\n            e.onload = resolve;\n            e.src = url as string;\n            document.head.appendChild(e);\n        });\n        return globalExtension[\"module\"].exports;\n    }\n\n    async function prefetchURL(url: string | URL) {\n        await (await fetch(url)).text();\n    }\n\n    const tabby = globalExtension.Tabby;\n\n    const pluginInfos: {\n        pluginName: string;\n        packageName: string;\n        url: URL;\n    }[] = [\n        {\n            pluginName: \"core\",\n            packageName: \"tabby-core\",\n            url: new URL(\"tabby-core/dist/index.js\", import.meta.url),\n        },\n        {\n            pluginName: \"settings\",\n            packageName: \"tabby-settings\",\n            url: new URL(\"tabby-settings/dist/index.js\", import.meta.url),\n        },\n        {\n            pluginName: \"terminal\",\n            packageName: \"tabby-terminal\",\n            url: new URL(\"tabby-terminal/dist/index.js\", import.meta.url),\n        },\n        {\n            pluginName: \"community-color-schemes\",\n            packageName: \"tabby-community-color-schemes\",\n            url: new URL(\n                \"tabby-community-color-schemes/dist/index.js\",\n                import.meta.url\n            ),\n        },\n        {\n            pluginName: \"web\",\n            packageName: \"tabby-web\",\n            url: new URL(\"tabby-web/dist/index.js\", import.meta.url),\n        },\n    ];\n\n    await Promise.all(\n        pluginInfos.map((pluginInfo) => prefetchURL(pluginInfo.url))\n    );\n\n    const pluginModules = [];\n    for (const info of pluginInfos) {\n        const result = await webRequire(info.url);\n        result.pluginName = info.pluginName;\n        tabby.registerPluginModule(info.packageName, result);\n        pluginModules.push(result);\n    }\n\n    const TabbyTango = await webRequire(\n        new URL(\"@yume-chan/tabby-tango/dist/index.js\", import.meta.url)\n    );\n    TabbyTango.pluginName = \"tango\";\n\n    window.addEventListener(\"message\", (e) => {\n        if (\"type\" in e.data && e.data.type === \"adb\") {\n            const { port, version, maxPayloadSize, banner } =\n                e.data as AdbProxyServerInfo;\n            const backend = new AdbProxyBackend(port);\n            const connection = backend.connect();\n            TabbyTango.AdbState.value = new Adb(\n                connection,\n                version,\n                maxPayloadSize,\n                banner\n            );\n        }\n    });\n    window.parent.postMessage(\"adb\", \"*\");\n\n    pluginModules.push(TabbyTango);\n\n    globalExtension[\"pluginModules\"] = pluginModules.map((plugin) => {\n        if (\"default\" in plugin) {\n            plugin.default.pluginName = plugin.pluginName;\n            return plugin.default;\n        }\n        return plugin;\n    });\n\n    const config = connector.loadConfig();\n    await tabby.bootstrap({\n        packageModules: pluginModules,\n        bootstrapData: {\n            config,\n            executable: \"web\",\n            isFirstWindow: true,\n            windowID: 1,\n            installedPlugins: [],\n            userPluginsPath: \"/\",\n        },\n        debugMode: false,\n        connector,\n    });\n}\n\nfunction TabbyFrame() {\n    useEffect(() => {\n        // Only run at client side.\n        start().catch((e) => {\n            console.error(e);\n        });\n    }, []);\n\n    return (\n        <div>\n            <style id=\"custom-css\" />\n\n            {/* @ts-expect-error */}\n            <app-root />\n        </div>\n    );\n}\n\nTabbyFrame.noLayout = true;\n\nexport default TabbyFrame;\n"],"names":["window","__NEXT_P","push","__webpack_require__","NotImplementedSocket","connect","error$","next","connect$","Subject","data$","close$","WebConnector","loadConfig","config","text","localStorage","getItem","Yaml","recoverTabs","web","preventAccidentalTabClosure","terminal","fontSize","providerBlacklist","commandBlacklist","saveConfig","content","setItem","getAppVersion","createSocket","constructor","globalExtension","globalThis","start","connector","webRequire","url","toString","console","log","concat","e","document","createElement","exports","Promise","onload","resolve","src","head","appendChild","prefetchURL","fetch","then","bind","all","t","tabby","Tabby","pluginInfos","pluginName","packageName","U","map","pluginInfo","pluginModules","info","result","registerPluginModule","TabbyTango","addEventListener","data","type","port","version","maxPayloadSize","banner","backend","AdbProxyBackend","connection","AdbState","value","Adb","parent","postMessage","plugin","default","bootstrap","packageModules","bootstrapData","executable","isFirstWindow","windowID","installedPlugins","userPluginsPath","debugMode","TabbyFrame","useEffect","catch","error","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","jsx","style","id","app-root","noLayout","__webpack_exports__"],"sourceRoot":""}