{"version":3,"file":"static/chunks/170-b8d4625d1a0528b2.js","mappings":"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EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAG7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAG7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB,EAAG,IAC7B,IAAK,CAAC,CAAEiN,EAAG,EAAGvT,EAAG,EAAG+nB,EAAG,EAAGzhB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","sources":["webpack://_N_E/../../common/temp/node_modules/.pnpm/xterm@5.1.0/node_modules/xterm/css/xterm.css","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.103.10_ib3m5ricvtkl2cll7qpr2f6lvq/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.base.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.103.10_ib3m5ricvtkl2cll7qpr2f6lvq/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.styles.tsx","webpack://_N_E/../../common/temp/node_modules/.pnpm/@fluentui+react@8.103.10_ib3m5ricvtkl2cll7qpr2f6lvq/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.tsx","webpack://_N_E/FitAddon/webpack/universalModuleDefinition","webpack://_N_E/FitAddon/./src/FitAddon.ts","webpack://_N_E/SearchAddon/webpack/universalModuleDefinition","webpack://_N_E/SearchAddon/../../src/common/EventEmitter.ts","webpack://_N_E/SearchAddon/webpack/bootstrap","webpack://_N_E/SearchAddon/./src/SearchAddon.ts","webpack://_N_E/WebglAddon/webpack/universalModuleDefinition","webpack://_N_E/WebglAddon/./src/GlyphRenderer.ts","webpack://_N_E/WebglAddon/./src/RectangleRenderer.ts","webpack://_N_E/WebglAddon/./src/RenderModel.ts","webpack://_N_E/WebglAddon/./src/WebglRenderer.ts","webpack://_N_E/WebglAddon/./src/WebglUtils.ts","webpack://_N_E/WebglAddon/./src/renderLayer/BaseRenderLayer.ts","webpack://_N_E/WebglAddon/./src/renderLayer/CursorRenderLayer.ts","webpack://_N_E/WebglAddon/./src/renderLayer/LinkRenderLayer.ts","webpack://_N_E/WebglAddon/../../src/browser/Lifecycle.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/CellColorResolver.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/CharAtlasCache.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/CharAtlasUtils.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/Constants.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/CustomGlyphs.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/DevicePixelObserver.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/RendererUtils.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/SelectionRenderModel.ts","webpack://_N_E/WebglAddon/../../src/browser/renderer/shared/TextureAtlas.ts","webpack://_N_E/WebglAddon/../../src/common/Color.ts","webpack://_N_E/WebglAddon/../../src/common/EventEmitter.ts","webpack://_N_E/WebglAddon/../../src/common/Lifecycle.ts","webpack://_N_E/WebglAddon/../../src/common/MultiKeyMap.ts","webpack://_N_E/WebglAddon/../../src/common/Platform.ts","webpack://_N_E/WebglAddon/../../src/common/TaskQueue.ts","webpack://_N_E/WebglAddon/../../src/common/buffer/AttributeData.ts","webpack://_N_E/WebglAddon/../../src/common/buffer/CellData.ts","webpack://_N_E/WebglAddon/../../src/common/buffer/Constants.ts","webpack://_N_E/WebglAddon/../../src/common/input/TextDecoder.ts","webpack://_N_E/WebglAddon/webpack/bootstrap","webpack://_N_E/WebglAddon/./src/WebglAddon.ts","webpack://_N_E/<anon>"],"sourcesContent":["// extracted by mini-css-extract-plugin","import * as React from 'react';\nimport { KeyCodes, classNamesFunction, getNativeProps, inputProperties } from '../../Utilities';\nimport { useControllableValue, useId, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport type { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles, ISearchBox } from './SearchBox.types';\nimport type { IButtonProps, IButtonStyles } from '../../Button';\nimport type { IIconProps } from '../../Icon';\n\nconst COMPONENT_NAME = 'SearchBox';\nconst iconButtonStyles: Partial<IButtonStyles> = { root: { height: 'auto' }, icon: { fontSize: '12px' } };\nconst iconButtonProps: IIconProps = { iconName: 'Clear' };\nconst defaultClearButtonProps: IButtonProps = { ariaLabel: 'Clear text' };\n\nconst getClassNames = classNamesFunction<ISearchBoxStyleProps, ISearchBoxStyles>();\n\nconst useComponentRef = (\n  componentRef: React.Ref<ISearchBox> | undefined,\n  inputElementRef: React.RefObject<HTMLInputElement>,\n  hasFocus: boolean,\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus: () => inputElementRef.current?.focus(),\n      hasFocus: () => hasFocus,\n    }),\n    [inputElementRef, hasFocus],\n  );\n};\n\nexport const SearchBoxBase: React.FunctionComponent<ISearchBoxProps> = React.forwardRef<\n  HTMLDivElement,\n  ISearchBoxProps\n>((props, forwardedRef) => {\n  const {\n    ariaLabel,\n    className,\n    defaultValue = '',\n    disabled,\n    underlined,\n    styles,\n    // eslint-disable-next-line deprecation/deprecation\n    labelText,\n    // eslint-disable-next-line deprecation/deprecation\n    placeholder = labelText,\n    theme,\n    clearButtonProps = defaultClearButtonProps,\n    disableAnimation = false,\n    showIcon = false,\n    onClear: customOnClear,\n    onBlur: customOnBlur,\n    onEscape: customOnEscape,\n    onSearch: customOnSearch,\n    onKeyDown: customOnKeyDown,\n    iconProps,\n    role,\n    onChange,\n    // eslint-disable-next-line deprecation/deprecation\n    onChanged,\n  } = props;\n\n  const [hasFocus, setHasFocus] = React.useState(false);\n\n  const prevChangeTimestamp = React.useRef<number | undefined>();\n  const [uncastValue, setValue] = useControllableValue(\n    props.value,\n    defaultValue,\n    (ev: React.ChangeEvent<HTMLInputElement> | undefined, newValue: string) => {\n      if (ev && ev.timeStamp === prevChangeTimestamp.current) {\n        // For historical reasons, SearchBox handles both onInput and onChange (we can't modify this\n        // outside a major version due to potential to break partners' tests and possibly apps).\n        // Only call props.onChange for one of the events.\n        return;\n      }\n      prevChangeTimestamp.current = ev?.timeStamp;\n      onChange?.(ev, newValue);\n      onChanged?.(newValue);\n    },\n  );\n  const value = String(uncastValue);\n\n  const rootElementRef = React.useRef<HTMLDivElement>(null);\n  const inputElementRef = React.useRef<HTMLInputElement>(null);\n  const mergedRootRef = useMergedRefs(rootElementRef, forwardedRef);\n  const id = useId(COMPONENT_NAME, props.id);\n\n  const { onClick: customOnClearClick } = clearButtonProps;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    underlined,\n    hasFocus,\n    disabled,\n    hasInput: value.length > 0,\n    disableAnimation,\n    showIcon,\n  });\n\n  const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(props, inputProperties, [\n    'className',\n    'placeholder',\n    'onFocus',\n    'onBlur',\n    'value',\n    'role',\n  ]);\n\n  const onClear = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement> | React.KeyboardEvent<HTMLElement>) => {\n      customOnClear?.(ev);\n      if (!ev.defaultPrevented) {\n        setValue('');\n        inputElementRef.current?.focus();\n        ev.stopPropagation();\n        ev.preventDefault();\n      }\n    },\n    [customOnClear, setValue],\n  );\n\n  const onClearClick = React.useCallback(\n    (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n      customOnClearClick?.(ev);\n      if (!ev.defaultPrevented) {\n        onClear(ev);\n      }\n    },\n    [customOnClearClick, onClear],\n  );\n\n  const onFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\n    setHasFocus(true);\n    props.onFocus?.(ev as React.FocusEvent<HTMLInputElement>);\n  };\n\n  const onClickFocus = () => {\n    if (inputElementRef.current) {\n      inputElementRef.current.focus();\n      inputElementRef.current.selectionStart = inputElementRef.current.selectionEnd = 0;\n    }\n  };\n\n  const onBlur = React.useCallback(\n    (ev: React.FocusEvent<HTMLInputElement>): void => {\n      setHasFocus(false);\n      customOnBlur?.(ev);\n    },\n    [customOnBlur],\n  );\n\n  const onInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(ev.target.value, ev);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    switch (ev.which) {\n      case KeyCodes.escape:\n        customOnEscape?.(ev);\n        // Only call onClear if the search box has a value to clear. Otherwise, allow the Esc key\n        // to propagate from the empty search box to a parent element such as a dialog, etc.\n        if (value && !ev.defaultPrevented) {\n          onClear(ev);\n        }\n        break;\n\n      case KeyCodes.enter:\n        if (customOnSearch) {\n          customOnSearch(value);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n\n      default:\n        // REVIEW: Why aren't we calling customOnKeyDown for Escape or Enter?\n        customOnKeyDown?.(ev);\n        // REVIEW: Why are we calling stopPropagation if customOnKeyDown called preventDefault?\n        // customOnKeyDown should call stopPropagation if it needs it.\n        if (ev.defaultPrevented) {\n          ev.stopPropagation();\n        }\n        break;\n    }\n  };\n\n  useDebugWarning(props);\n  useComponentRef(props.componentRef, inputElementRef, hasFocus);\n\n  return (\n    <div role={role} ref={mergedRootRef} className={classNames.root} onFocusCapture={onFocusCapture}>\n      <div className={classNames.iconContainer} onClick={onClickFocus} aria-hidden>\n        <Icon iconName=\"Search\" {...iconProps} className={classNames.icon} />\n      </div>\n      <input\n        {...nativeProps}\n        id={id}\n        className={classNames.field}\n        placeholder={placeholder}\n        onChange={onInputChange}\n        onInput={onInputChange}\n        onBlur={onBlur}\n        onKeyDown={onKeyDown}\n        value={value}\n        disabled={disabled}\n        role=\"searchbox\"\n        aria-label={ariaLabel}\n        ref={inputElementRef}\n      />\n      {value!.length > 0 && (\n        <div className={classNames.clearButton}>\n          <IconButton\n            onBlur={onBlur}\n            styles={iconButtonStyles}\n            iconProps={iconButtonProps}\n            {...clearButtonProps}\n            onClick={onClearClick}\n          />\n        </div>\n      )}\n    </div>\n  );\n});\nSearchBoxBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarning(props: ISearchBoxProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: { labelText: 'placeholder' },\n    });\n  }\n}\n","import {\n  HighContrastSelector,\n  AnimationVariables,\n  normalize,\n  getPlaceholderStyles,\n  getGlobalClassNames,\n  getInputFocusStyle,\n} from '../../Styling';\nimport { getRTL } from '../../Utilities';\nimport type { IStyle } from '../../Styling';\nimport type { ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\n\nconst GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field',\n};\n\nexport function getStyles(props: ISearchBoxStyleProps): ISearchBoxStyles {\n  const { theme, underlined, disabled, hasFocus, className, hasInput, disableAnimation, showIcon } = props;\n  const { palette, fonts, semanticColors, effects } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1,\n  };\n\n  const inputIconAlt = palette.neutralSecondary;\n  const inputIconAltHovered = palette.neutralPrimary;\n  const inputBorderDisabled = palette.neutralLighter;\n  const inputBackgroundHovered = palette.neutralLighter;\n  const inputBackgroundDisabled = palette.neutralLighter;\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        color: semanticColors.inputText,\n        backgroundColor: semanticColors.inputBackground,\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        alignItems: 'stretch',\n        // The 1px top and bottom padding ensure the input field does not overlap the border\n        padding: '1px 0 1px 4px',\n        borderRadius: effects.roundedCorner2,\n        border: `1px solid ${semanticColors.inputBorder}`,\n        height: 32,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'WindowText',\n          },\n          ':hover': {\n            borderColor: semanticColors.inputBorderHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n              },\n            },\n          },\n          [`:hover .${classNames.iconContainer}`]: {\n            color: semanticColors.inputIconHovered,\n          },\n        },\n      },\n      !hasFocus &&\n        hasInput && {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 4,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 0,\n              pointerEvents: 'none',\n            },\n          },\n        },\n      hasFocus && [\n        'is-active',\n        {\n          position: 'relative',\n        },\n        getInputFocusStyle(\n          semanticColors.inputFocusBorderAlt,\n          underlined ? 0 : effects.roundedCorner2,\n          underlined ? 'borderBottom' : 'border',\n        ),\n      ],\n      showIcon && [\n        {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 32,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 1,\n            },\n          },\n        },\n      ],\n      disabled && [\n        'is-disabled',\n        {\n          borderColor: inputBorderDisabled,\n          backgroundColor: inputBackgroundDisabled,\n          pointerEvents: 'none',\n          cursor: 'default',\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n            },\n          },\n        },\n      ],\n      underlined && [\n        'is-underlined',\n        {\n          borderWidth: '0 0 1px 0',\n          borderRadius: 0,\n          // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n          padding: '1px 0 1px 8px',\n        },\n      ],\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n      hasInput && 'can-clear',\n      className,\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flexShrink: 0,\n        fontSize: 16,\n        width: 32,\n        textAlign: 'center',\n        color: semanticColors.inputIcon,\n        cursor: 'text',\n      },\n      hasFocus && {\n        width: 4,\n      },\n      disabled && {\n        color: semanticColors.inputIconDisabled,\n      },\n      !disableAnimation && {\n        transition: `width ${AnimationVariables.durationValue1}`,\n      },\n      showIcon &&\n        hasFocus && {\n          width: 32,\n        },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        opacity: 1,\n      },\n      hasFocus && {\n        opacity: 0,\n        pointerEvents: 'none',\n      },\n      !disableAnimation && {\n        transition: `opacity ${AnimationVariables.durationValue1} 0s`,\n      },\n      showIcon &&\n        hasFocus && {\n          opacity: 1,\n        },\n    ],\n    clearButton: [\n      classNames.clearButton,\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        cursor: 'pointer',\n        flexBasis: '32px',\n        flexShrink: 0,\n        padding: 0,\n        margin: '-1px 0px',\n        selectors: {\n          '&:hover .ms-Button': {\n            backgroundColor: inputBackgroundHovered,\n          },\n          '&:hover .ms-Button-icon': {\n            color: inputIconAltHovered,\n          },\n          '.ms-Button': {\n            borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0',\n          },\n          '.ms-Button-icon': {\n            color: inputIconAlt,\n          },\n        },\n      },\n    ],\n    field: [\n      classNames.field,\n      normalize,\n      getPlaceholderStyles(placeholderStyles),\n      {\n        backgroundColor: 'transparent',\n        border: 'none',\n        outline: 'none',\n        fontWeight: 'inherit',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        color: semanticColors.inputText,\n        flex: '1 1 0px',\n        // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n        // 0px allows the input element to shrink to fit the container.\n        minWidth: '0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        // This padding forces the text placement to round up.\n        paddingBottom: 0.5,\n        // This removes the IE specific clear button in the input since we implemented our own\n        selectors: {\n          '::-ms-clear': {\n            display: 'none',\n          },\n        },\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { SearchBoxBase } from './SearchBox.base';\nimport { getStyles } from './SearchBox.styles';\nimport type { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\n\nexport const SearchBox: React.FunctionComponent<ISearchBoxProps> = styled<\n  ISearchBoxProps,\n  ISearchBoxStyleProps,\n  ISearchBoxStyles\n>(SearchBoxBase, getStyles, undefined, { scope: 'SearchBox' });\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    if (core._renderService.dimensions.actualCellWidth === 0 || core._renderService.dimensions.actualCellHeight === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SearchAddon\"] = factory();\n\telse\n\t\troot[\"SearchAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, IDisposable, ITerminalAddon, IBufferRange, IDecoration } from 'xterm';\nimport { EventEmitter } from 'common/EventEmitter';\n\nexport interface ISearchOptions {\n  regex?: boolean;\n  wholeWord?: boolean;\n  caseSensitive?: boolean;\n  incremental?: boolean;\n  decorations?: ISearchDecorationOptions;\n  noScroll?: boolean;\n}\n\ninterface ISearchDecorationOptions {\n  matchBackground?: string;\n  matchBorder?: string;\n  matchOverviewRuler: string;\n  activeMatchBackground?: string;\n  activeMatchBorder?: string;\n  activeMatchColorOverviewRuler: string;\n}\n\nexport interface ISearchPosition {\n  startCol: number;\n  startRow: number;\n}\n\nexport interface ISearchResult {\n  term: string;\n  col: number;\n  row: number;\n  size: number;\n}\n\ntype LineCacheEntry = [\n  /**\n   * The string representation of a line (as opposed to the buffer cell representation).\n   */\n  lineAsString: string,\n  /**\n   * The offsets where each line starts when the entry describes a wrapped line.\n   */\n  lineOffsets: number[]\n];\n\nconst NON_WORD_CHARACTERS = ' ~!@#$%^&*()+`-=[]{}|\\\\;:\"\\',./<>?';\nconst LINES_CACHE_TIME_TO_LIVE = 15 * 1000; // 15 secs\n\nexport class SearchAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n  private _cachedSearchTerm: string | undefined;\n  private _selectedDecoration: IDecoration | undefined;\n  private _resultDecorations: Map<number, IDecoration[]> | undefined;\n  private _searchResults: Map<string, ISearchResult> | undefined;\n  private _onDataDisposable: IDisposable | undefined;\n  private _onResizeDisposable: IDisposable | undefined;\n  private _lastSearchOptions: ISearchOptions | undefined;\n  private _highlightTimeout: number | undefined;\n  /**\n   * translateBufferLineToStringWithWrap is a fairly expensive call.\n   * We memoize the calls into an array that has a time based ttl.\n   * _linesCache is also invalidated when the terminal cursor moves.\n   */\n  private _linesCache: LineCacheEntry[] | undefined;\n  private _linesCacheTimeoutId = 0;\n  private _cursorMoveListener: IDisposable | undefined;\n  private _resizeListener: IDisposable | undefined;\n\n  private _resultIndex: number | undefined;\n\n  private readonly _onDidChangeResults = new EventEmitter<{ resultIndex: number, resultCount: number } | undefined>();\n  public readonly onDidChangeResults = this._onDidChangeResults.event;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n    this._onDataDisposable = this._terminal.onWriteParsed(() => this._updateMatches());\n    this._onResizeDisposable = this._terminal.onResize(() => this._updateMatches());\n  }\n\n  private _updateMatches(): void {\n    if (this._highlightTimeout) {\n      window.clearTimeout(this._highlightTimeout);\n    }\n    if (this._cachedSearchTerm && this._lastSearchOptions?.decorations) {\n      this._highlightTimeout = setTimeout(() => {\n        this.findPrevious(this._cachedSearchTerm!, { ...this._lastSearchOptions, incremental: true, noScroll: true });\n        this._resultIndex = this._searchResults ? this._searchResults.size - 1 : -1;\n        this._onDidChangeResults.fire({ resultIndex: this._resultIndex, resultCount: this._searchResults?.size ?? -1 });\n      }, 200);\n    }\n  }\n\n  public dispose(): void {\n    this.clearDecorations();\n    this._onDataDisposable?.dispose();\n    this._onResizeDisposable?.dispose();\n  }\n\n  public clearDecorations(retainCachedSearchTerm?: boolean): void {\n    this._selectedDecoration?.dispose();\n    this._searchResults?.clear();\n    this._resultDecorations?.forEach(decorations => {\n      for (const d of decorations) {\n        d.dispose();\n      }\n    });\n    this._resultDecorations?.clear();\n    this._searchResults = undefined;\n    this._resultDecorations = undefined;\n    if (!retainCachedSearchTerm) {\n      this._cachedSearchTerm = undefined;\n    }\n  }\n\n  public clearActiveDecoration(): void {\n    this._selectedDecoration?.dispose();\n    this._selectedDecoration = undefined;\n  }\n\n  /**\n   * Find the next instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findNext(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    this._lastSearchOptions = searchOptions;\n    if (searchOptions?.decorations) {\n      if (this._resultIndex !== undefined || this._cachedSearchTerm === undefined || term !== this._cachedSearchTerm) {\n        this._highlightAllMatches(term, searchOptions);\n      }\n    }\n    return this._fireResults(term, this._findNextAndSelect(term, searchOptions), searchOptions);\n  }\n\n  private _highlightAllMatches(term: string, searchOptions: ISearchOptions): void {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    if (!term || term.length === 0) {\n      this.clearDecorations();\n      return;\n    }\n    searchOptions = searchOptions || {};\n\n    // new search, clear out the old decorations\n    this.clearDecorations(true);\n    this._searchResults = new Map<string, ISearchResult>();\n    this._resultDecorations = new Map<number, IDecoration[]>();\n    const resultDecorations = this._resultDecorations;\n    let result = this._find(term, 0, 0, searchOptions);\n    while (result && !this._searchResults.get(`${result.row}-${result.col}`)) {\n      this._searchResults.set(`${result.row}-${result.col}`, result);\n      result = this._find(\n        term,\n        result.col + result.term.length >= this._terminal.cols ? result.row + 1 : result.row,\n        result.col + result.term.length >= this._terminal.cols ? 0 : result.col + 1,\n        searchOptions\n      );\n      if (this._searchResults.size > 1000) {\n        this.clearDecorations();\n        this._resultIndex = undefined;\n        return;\n      }\n    }\n    this._searchResults.forEach(result => {\n      const resultDecoration = this._createResultDecoration(result, searchOptions.decorations!);\n      if (resultDecoration) {\n        const decorationsForLine = resultDecorations.get(resultDecoration.marker.line) || [];\n        decorationsForLine.push(resultDecoration);\n        resultDecorations.set(resultDecoration.marker.line, decorationsForLine);\n      }\n    });\n  }\n\n  private _find(term: string, startRow: number, startCol: number, searchOptions?: ISearchOptions): ISearchResult | undefined {\n    if (!this._terminal || !term || term.length === 0) {\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      return undefined;\n    }\n    if (startCol > this._terminal.cols) {\n      throw new Error(`Invalid col: ${startCol} to search in terminal of ${this._terminal.cols} cols`);\n    }\n\n    let result: ISearchResult | undefined = undefined;\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    result = this._findInLine(term, searchPosition, searchOptions);\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    return result;\n  }\n\n  private _findNextAndSelect(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal || !term || term.length === 0) {\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      this._cachedSearchTerm = undefined;\n      this._resultIndex = -1;\n      return false;\n    }\n\n    if (this._cachedSearchTerm !== term) {\n      this._resultIndex = undefined;\n      this._terminal.clearSelection();\n    }\n\n    let startCol = 0;\n    let startRow = 0;\n    let currentSelection: IBufferRange | undefined;\n    if (this._terminal.hasSelection()) {\n      const incremental = searchOptions ? searchOptions.incremental : false;\n      // Start from the selection end if there is a selection\n      // For incremental search, use existing row\n      currentSelection = this._terminal.getSelectionPosition()!;\n      startRow = incremental ? currentSelection.start.y : currentSelection.end.y;\n      startCol = incremental ? currentSelection.start.x : currentSelection.end.x;\n    }\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    let result = this._findInLine(term, searchPosition, searchOptions);\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the bottom and didn't search from the very top wrap back up\n    if (!result && startRow !== 0) {\n      for (let y = 0; y < startRow; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, wrap back and return selection if it exists.\n    if (!result && currentSelection) {\n      searchPosition.startRow = currentSelection.start.y;\n      searchPosition.startCol = 0;\n      result = this._findInLine(term, searchPosition, searchOptions);\n    }\n\n    if (this._searchResults) {\n      if (this._searchResults.size === 0) {\n        this._resultIndex = -1;\n      } else if (this._resultIndex === undefined) {\n        this._resultIndex = 0;\n      } else {\n        this._resultIndex++;\n        if (this._resultIndex >= this._searchResults.size) {\n          this._resultIndex = 0;\n        }\n      }\n    }\n    // Set selection and scroll if a result was found\n    return this._selectResult(result, searchOptions?.decorations, searchOptions?.noScroll);\n  }\n  /**\n   * Find the previous instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findPrevious(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    this._lastSearchOptions = searchOptions;\n    if (searchOptions?.decorations) {\n      if (this._resultIndex !== undefined || this._cachedSearchTerm === undefined || term !== this._cachedSearchTerm) {\n        this._highlightAllMatches(term, searchOptions);\n      }\n    }\n    return this._fireResults(term, this._findPreviousAndSelect(term, searchOptions), searchOptions);\n  }\n\n  private _fireResults(term: string, found: boolean, searchOptions?: ISearchOptions): boolean {\n    if (searchOptions?.decorations) {\n      if (this._resultIndex !== undefined && this._searchResults?.size !== undefined) {\n        this._onDidChangeResults.fire({ resultIndex: this._resultIndex, resultCount: this._searchResults.size });\n      } else {\n        this._onDidChangeResults.fire(undefined);\n      }\n    }\n    this._cachedSearchTerm = term;\n    return found;\n  }\n\n  private _findPreviousAndSelect(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n    let result: ISearchResult | undefined;\n    if (!this._terminal || !term || term.length === 0) {\n      result = undefined;\n      this._terminal?.clearSelection();\n      this.clearDecorations();\n      this._resultIndex = -1;\n      return false;\n    }\n\n    if (this._cachedSearchTerm !== term) {\n      this._resultIndex = undefined;\n      this._terminal.clearSelection();\n    }\n\n    let startRow = this._terminal.buffer.active.baseY + this._terminal.rows;\n    let startCol = this._terminal.cols;\n    const isReverseSearch = true;\n\n    const incremental = searchOptions ? searchOptions.incremental : false;\n    let currentSelection: IBufferRange | undefined;\n    if (this._terminal.hasSelection()) {\n      currentSelection = this._terminal.getSelectionPosition()!;\n      // Start from selection start if there is a selection\n      startRow = currentSelection.start.y;\n      startCol = currentSelection.start.x;\n    }\n\n    this._initLinesCache();\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    if (incremental) {\n      // Try to expand selection to right first.\n      result = this._findInLine(term, searchPosition, searchOptions, false);\n      const isOldResultHighlighted = result && result.row === startRow && result.col === startCol;\n      if (!isOldResultHighlighted) {\n        // If selection was not able to be expanded to the right, then try reverse search\n        if (currentSelection) {\n          searchPosition.startRow = currentSelection.end.y;\n          searchPosition.startCol = currentSelection.end.x;\n        }\n        result = this._findInLine(term, searchPosition, searchOptions, true);\n      }\n    } else {\n      result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n    }\n\n    // Search from startRow - 1 to top\n    if (!result) {\n      searchPosition.startCol = Math.max(searchPosition.startCol, this._terminal.cols);\n      for (let y = startRow - 1; y >= 0; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the top and didn't search from the very bottom wrap back down\n    if (!result && startRow !== (this._terminal.buffer.active.baseY + this._terminal.rows)) {\n      for (let y = (this._terminal.buffer.active.baseY + this._terminal.rows); y >= startRow; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    if (this._searchResults) {\n      if (this._searchResults.size === 0) {\n        this._resultIndex = -1;\n      } else if (this._resultIndex === undefined || this._resultIndex < 0) {\n        this._resultIndex = this._searchResults.size - 1;\n      } else {\n        this._resultIndex--;\n        if (this._resultIndex === -1) {\n          this._resultIndex = this._searchResults.size - 1;\n        }\n      }\n    }\n\n    // If there is only one result, return true.\n    if (!result && currentSelection) return true;\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result, searchOptions?.decorations, searchOptions?.noScroll);\n  }\n\n  /**\n   * Sets up a line cache with a ttl\n   */\n  private _initLinesCache(): void {\n    const terminal = this._terminal!;\n    if (!this._linesCache) {\n      this._linesCache = new Array(terminal.buffer.active.length);\n      this._cursorMoveListener = terminal.onCursorMove(() => this._destroyLinesCache());\n      this._resizeListener = terminal.onResize(() => this._destroyLinesCache());\n    }\n\n    window.clearTimeout(this._linesCacheTimeoutId);\n    this._linesCacheTimeoutId = window.setTimeout(() => this._destroyLinesCache(), LINES_CACHE_TIME_TO_LIVE);\n  }\n\n  private _destroyLinesCache(): void {\n    this._linesCache = undefined;\n    if (this._cursorMoveListener) {\n      this._cursorMoveListener.dispose();\n      this._cursorMoveListener = undefined;\n    }\n    if (this._resizeListener) {\n      this._resizeListener.dispose();\n      this._resizeListener = undefined;\n    }\n    if (this._linesCacheTimeoutId) {\n      window.clearTimeout(this._linesCacheTimeoutId);\n      this._linesCacheTimeoutId = 0;\n    }\n  }\n\n  /**\n   * A found substring is a whole word if it doesn't have an alphanumeric character directly adjacent to it.\n   * @param searchIndex starting indext of the potential whole word substring\n   * @param line entire string in which the potential whole word was found\n   * @param term the substring that starts at searchIndex\n   */\n  private _isWholeWord(searchIndex: number, line: string, term: string): boolean {\n    return ((searchIndex === 0) || (NON_WORD_CHARACTERS.includes(line[searchIndex - 1]))) &&\n      (((searchIndex + term.length) === line.length) || (NON_WORD_CHARACTERS.includes(line[searchIndex + term.length])));\n  }\n\n  /**\n   * Searches a line for a search term. Takes the provided terminal line and searches the text line, which may contain\n   * subsequent terminal lines if the text is wrapped. If the provided line number is part of a wrapped text line that\n   * started on an earlier line then it is skipped since it will be properly searched when the terminal line that the\n   * text starts on is searched.\n   * @param term The search term.\n   * @param position The position to start the search.\n   * @param searchOptions Search options.\n   * @param isReverseSearch Whether the search should start from the right side of the terminal and search to the left.\n   * @return The search result if it was found.\n   */\n  protected _findInLine(term: string, searchPosition: ISearchPosition, searchOptions: ISearchOptions = {}, isReverseSearch: boolean = false): ISearchResult | undefined {\n    const terminal = this._terminal!;\n    const row = searchPosition.startRow;\n    const col = searchPosition.startCol;\n\n    // Ignore wrapped lines, only consider on unwrapped line (first row of command string).\n    const firstLine = terminal.buffer.active.getLine(row);\n    if (firstLine?.isWrapped) {\n      if (isReverseSearch) {\n        searchPosition.startCol += terminal.cols;\n        return;\n      }\n\n      // This will iterate until we find the line start.\n      // When we find it, we will search using the calculated start column.\n      searchPosition.startRow--;\n      searchPosition.startCol += terminal.cols;\n      return this._findInLine(term, searchPosition, searchOptions);\n    }\n    let cache = this._linesCache?.[row];\n    if (!cache) {\n      cache = this._translateBufferLineToStringWithWrap(row, true);\n      if (this._linesCache) {\n        this._linesCache[row] = cache;\n      }\n    }\n    const [stringLine, offsets] = cache;\n\n    const offset = this._bufferColsToStringOffset(row, col);\n    const searchTerm = searchOptions.caseSensitive ? term : term.toLowerCase();\n    const searchStringLine = searchOptions.caseSensitive ? stringLine : stringLine.toLowerCase();\n\n    let resultIndex = -1;\n    if (searchOptions.regex) {\n      const searchRegex = RegExp(searchTerm, 'g');\n      let foundTerm: RegExpExecArray | null;\n      if (isReverseSearch) {\n        // This loop will get the resultIndex of the _last_ regex match in the range 0..offset\n        while (foundTerm = searchRegex.exec(searchStringLine.slice(0, offset))) {\n          resultIndex = searchRegex.lastIndex - foundTerm[0].length;\n          term = foundTerm[0];\n          searchRegex.lastIndex -= (term.length - 1);\n        }\n      } else {\n        foundTerm = searchRegex.exec(searchStringLine.slice(offset));\n        if (foundTerm && foundTerm[0].length > 0) {\n          resultIndex = offset + (searchRegex.lastIndex - foundTerm[0].length);\n          term = foundTerm[0];\n        }\n      }\n    } else {\n      if (isReverseSearch) {\n        if (offset - searchTerm.length >= 0) {\n          resultIndex = searchStringLine.lastIndexOf(searchTerm, offset - searchTerm.length);\n        }\n      } else {\n        resultIndex = searchStringLine.indexOf(searchTerm, offset);\n      }\n    }\n\n    if (resultIndex >= 0) {\n      if (searchOptions.wholeWord && !this._isWholeWord(resultIndex, searchStringLine, term)) {\n        return;\n      }\n\n      // Adjust the row number and search index if needed since a \"line\" of text can span multiple rows\n      let startRowOffset = 0;\n      while (startRowOffset < offsets.length - 1 && resultIndex >= offsets[startRowOffset + 1]) {\n        startRowOffset++;\n      }\n      let endRowOffset = startRowOffset;\n      while (endRowOffset < offsets.length - 1 && resultIndex + term.length >= offsets[endRowOffset + 1]) {\n        endRowOffset++;\n      }\n      const startColOffset = resultIndex - offsets[startRowOffset];\n      const endColOffset = resultIndex + term.length - offsets[endRowOffset];\n      const startColIndex = this._stringLengthToBufferSize(row + startRowOffset, startColOffset);\n      const endColIndex = this._stringLengthToBufferSize(row + endRowOffset, endColOffset);\n      const size = endColIndex - startColIndex + terminal.cols * (endRowOffset - startRowOffset);\n\n      return {\n        term,\n        col: startColIndex,\n        row: row + startRowOffset,\n        size\n      };\n    }\n  }\n\n  private _stringLengthToBufferSize(row: number, offset: number): number {\n    const line = this._terminal!.buffer.active.getLine(row);\n    if (!line) {\n      return 0;\n    }\n    for (let i = 0; i < offset; i++) {\n      const cell = line.getCell(i);\n      if (!cell) {\n        break;\n      }\n      // Adjust the searchIndex to normalize emoji into single chars\n      const char = cell.getChars();\n      if (char.length > 1) {\n        offset -= char.length - 1;\n      }\n      // Adjust the searchIndex for empty characters following wide unicode\n      // chars (eg. CJK)\n      const nextCell = line.getCell(i + 1);\n      if (nextCell && nextCell.getWidth() === 0) {\n        offset++;\n      }\n    }\n    return offset;\n  }\n\n  private _bufferColsToStringOffset(startRow: number, cols: number): number {\n    const terminal = this._terminal!;\n    let lineIndex = startRow;\n    let offset = 0;\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (cols > 0 && line) {\n      for (let i = 0; i < cols && i < terminal.cols; i++) {\n        const cell = line.getCell(i);\n        if (!cell) {\n          break;\n        }\n        if (cell.getWidth()) {\n          // Treat null characters as whitespace to align with the translateToString API\n          offset += cell.getCode() === 0 ? 1 : cell.getChars().length;\n        }\n      }\n      lineIndex++;\n      line = terminal.buffer.active.getLine(lineIndex);\n      if (line && !line.isWrapped) {\n        break;\n      }\n      cols -= terminal.cols;\n    }\n    return offset;\n  }\n\n  /**\n   * Translates a buffer line to a string, including subsequent lines if they are wraps.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  private _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean): LineCacheEntry {\n    const terminal = this._terminal!;\n    const strings = [];\n    const lineOffsets = [0];\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (line) {\n      const nextLine = terminal.buffer.active.getLine(lineIndex + 1);\n      const lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      let string = line.translateToString(!lineWrapsToNext && trimRight);\n      if (lineWrapsToNext && nextLine) {\n        const lastCell = line.getCell(line.length - 1);\n        const lastCellIsNull = lastCell && lastCell.getCode() === 0 && lastCell.getWidth() === 1;\n        // a wide character wrapped to the next line\n        if (lastCellIsNull && nextLine.getCell(0)?.getWidth() === 2) {\n          string = string.slice(0, -1);\n        }\n      }\n      strings.push(string);\n      if (lineWrapsToNext) {\n        lineOffsets.push(lineOffsets[lineOffsets.length - 1] + string.length);\n      } else {\n        break;\n      }\n      lineIndex++;\n      line = nextLine;\n    }\n    return [strings.join(''), lineOffsets];\n  }\n\n  /**\n   * Selects and scrolls to a result.\n   * @param result The result to select.\n   * @return Whether a result was selected.\n   */\n  private _selectResult(result: ISearchResult | undefined, options?: ISearchDecorationOptions, noScroll?: boolean): boolean {\n    const terminal = this._terminal!;\n    this.clearActiveDecoration();\n    if (!result) {\n      terminal.clearSelection();\n      return false;\n    }\n    terminal.select(result.col, result.row, result.size);\n    if (options) {\n      const marker = terminal.registerMarker(-terminal.buffer.active.baseY - terminal.buffer.active.cursorY + result.row);\n      if (marker) {\n        this._selectedDecoration = terminal.registerDecoration({\n          marker,\n          x: result.col,\n          width: result.size,\n          backgroundColor: options.activeMatchBackground,\n          layer: 'top',\n          overviewRulerOptions: {\n            color: options.activeMatchColorOverviewRuler\n          }\n        });\n        this._selectedDecoration?.onRender((e) => this._applyStyles(e, options.activeMatchBorder, true));\n        this._selectedDecoration?.onDispose(() => marker.dispose());\n      }\n    }\n\n    if (!noScroll) {\n      // If it is not in the viewport then we scroll else it just gets selected\n      if (result.row >= (terminal.buffer.active.viewportY + terminal.rows) || result.row < terminal.buffer.active.viewportY) {\n        let scroll = result.row - terminal.buffer.active.viewportY;\n        scroll -= Math.floor(terminal.rows / 2);\n        terminal.scrollLines(scroll);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Applies styles to the decoration when it is rendered\n   * @param element the decoration's element\n   * @param backgroundColor the background color to apply\n   * @param borderColor the border color to apply\n   * @returns\n   */\n  private _applyStyles(element: HTMLElement, borderColor: string | undefined, isActiveResult: boolean): void {\n    if (element.clientWidth <= 0) {\n      return;\n    }\n    if (!element.classList.contains('xterm-find-result-decoration')) {\n      element.classList.add('xterm-find-result-decoration');\n      if (borderColor) {\n        element.style.outline = `1px solid ${borderColor}`;\n      }\n    }\n    if (isActiveResult) {\n      element.classList.add('xterm-find-active-result-decoration');\n    }\n  }\n\n  /**\n   * Creates a decoration for the result and applies styles\n   * @param result the search result for which to create the decoration\n   * @param options the options for the decoration\n   * @returns the {@link IDecoration} or undefined if the marker has already been disposed of\n   */\n  private _createResultDecoration(result: ISearchResult, options: ISearchDecorationOptions): IDecoration | undefined {\n    const terminal = this._terminal!;\n    const marker = terminal.registerMarker(-terminal.buffer.active.baseY - terminal.buffer.active.cursorY + result.row);\n    if (!marker) {\n      return undefined;\n    }\n    const findResultDecoration = terminal.registerDecoration({\n      marker,\n      x: result.col,\n      width: result.size,\n      backgroundColor: options.matchBackground,\n      overviewRulerOptions: this._resultDecorations?.get(marker.line) ? undefined : {\n        color: options.matchOverviewRuler,\n        position: 'center'\n      }\n    });\n    findResultDecoration?.onRender((e) => this._applyStyles(e, options.matchBorder, false));\n    findResultDecoration?.onDispose(() => marker.dispose());\n    return findResultDecoration;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebglAddon\"] = factory();\n\telse\n\t\troot[\"WebglAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, GLTexture, PROJECTION_MATRIX } from './WebglUtils';\nimport { IWebGL2RenderingContext, IWebGLVertexArrayObject, IRenderModel } from './Types';\nimport { NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { Terminal } from 'xterm';\nimport { IRasterizedGlyph, IRenderDimensions, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { TextureAtlas } from 'browser/renderer/shared/TextureAtlas';\n\ninterface IVertices {\n  attributes: Float32Array;\n  /**\n   * These buffers are the ones used to bind to WebGL, the reason there are\n   * multiple is to allow double buffering to work as you cannot modify the\n   * buffer while it's being used by the GPU. Having multiple lets us start\n   * working on the next frame.\n   */\n  attributesBuffers: Float32Array[];\n  count: number;\n}\n\nconst enum VertexAttribLocations {\n  UNIT_QUAD = 0,\n  CELL_POSITION = 1,\n  OFFSET = 2,\n  SIZE = 3,\n  TEXPAGE = 4,\n  TEXCOORD = 5,\n  TEXSIZE = 6\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\nlayout (location = ${VertexAttribLocations.CELL_POSITION}) in vec2 a_cellpos;\nlayout (location = ${VertexAttribLocations.OFFSET}) in vec2 a_offset;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.TEXPAGE}) in float a_texpage;\nlayout (location = ${VertexAttribLocations.TEXCOORD}) in vec2 a_texcoord;\nlayout (location = ${VertexAttribLocations.TEXSIZE}) in vec2 a_texsize;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec2 v_texcoord;\nflat out int v_texpage;\n\nvoid main() {\n  vec2 zeroToOne = (a_offset / u_resolution) + a_cellpos + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_texpage = int(a_texpage);\n  v_texcoord = a_texcoord + a_unitquad * a_texsize;\n}`;\n\nfunction createFragmentShaderSource(maxFragmentShaderTextureUnits: number): string {\n  let textureConditionals = '';\n  for (let i = 1; i < maxFragmentShaderTextureUnits; i++) {\n    textureConditionals += ` else if (v_texpage == ${i}) { outColor = texture(u_texture[${i}], v_texcoord); }`;\n  }\n  return (`#version 300 es\nprecision lowp float;\n\nin vec2 v_texcoord;\nflat in int v_texpage;\n\nuniform sampler2D u_texture[${maxFragmentShaderTextureUnits}];\n\nout vec4 outColor;\n\nvoid main() {\n  if (v_texpage == 0) {\n    outColor = texture(u_texture[0], v_texcoord);\n  } ${textureConditionals}\n}`);\n}\n\nconst INDICES_PER_CELL = 11;\nconst BYTES_PER_CELL = INDICES_PER_CELL * Float32Array.BYTES_PER_ELEMENT;\nconst CELL_POSITION_INDICES = 2;\n\n// Work variables to avoid garbage collection\nlet $i = 0;\nlet $glyph: IRasterizedGlyph | undefined = undefined;\nlet $leftCellPadding = 0;\nlet $clippedPixels = 0;\n\nexport class GlyphRenderer extends Disposable {\n  private readonly _program: WebGLProgram;\n  private readonly _vertexArrayObject: IWebGLVertexArrayObject;\n  private readonly _projectionLocation: WebGLUniformLocation;\n  private readonly _resolutionLocation: WebGLUniformLocation;\n  private readonly _textureLocation: WebGLUniformLocation;\n  private readonly _atlasTextures: GLTexture[];\n  private readonly _attributesBuffer: WebGLBuffer;\n\n  private _atlas: ITextureAtlas | undefined;\n  private _activeBuffer: number = 0;\n  private readonly _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(0),\n    attributesBuffers: [\n      new Float32Array(0),\n      new Float32Array(0)\n    ]\n  };\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions\n  ) {\n    super();\n\n    const gl = this._gl;\n\n    if (TextureAtlas.maxAtlasPages === undefined) {\n      // Typically 8 or 16\n      TextureAtlas.maxAtlasPages = Math.min(32, throwIfFalsy(gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS) as number | null));\n      // Almost all clients will support >= 4096\n      TextureAtlas.maxTextureSize = throwIfFalsy(gl.getParameter(gl.MAX_TEXTURE_SIZE) as number | null);\n    }\n\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, createFragmentShaderSource(TextureAtlas.maxAtlasPages)));\n    this.register(toDisposable(() => gl.deleteProgram(this._program)));\n\n    // Uniform locations\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n    this._resolutionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_resolution'));\n    this._textureLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_texture'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(unitQuadVerticesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertices to allow is to draw 2 triangles from the vertices via a\n    // triangle strip\n    const unitQuadElementIndices = new Uint8Array([0, 1, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(elementIndicesBuffer)));\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    this.register(toDisposable(() => gl.deleteBuffer(this._attributesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.OFFSET);\n    gl.vertexAttribPointer(VertexAttribLocations.OFFSET, 2, gl.FLOAT, false, BYTES_PER_CELL, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.OFFSET, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXPAGE);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXPAGE, 1, gl.FLOAT, false, BYTES_PER_CELL, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXPAGE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXCOORD);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXCOORD, 2, gl.FLOAT, false, BYTES_PER_CELL, 5 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXCOORD, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.TEXSIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.TEXSIZE, 2, gl.FLOAT, false, BYTES_PER_CELL, 7 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.TEXSIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.CELL_POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.CELL_POSITION, 2, gl.FLOAT, false, BYTES_PER_CELL, 9 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.CELL_POSITION, 1);\n\n    // Setup static uniforms\n    gl.useProgram(this._program);\n    const textureUnits = new Int32Array(TextureAtlas.maxAtlasPages);\n    for (let i = 0; i < TextureAtlas.maxAtlasPages; i++) {\n      textureUnits[i] = i;\n    }\n    gl.uniform1iv(this._textureLocation, textureUnits);\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n\n    // Setup 1x1 red pixel textures for all potential atlas pages, if one of these invalid textures\n    // is ever drawn it will show characters as red rectangles.\n    this._atlasTextures = [];\n    for (let i = 0; i < TextureAtlas.maxAtlasPages; i++) {\n      const glTexture = new GLTexture(throwIfFalsy(gl.createTexture()));\n      this.register(toDisposable(() => gl.deleteTexture(glTexture.texture)));\n      gl.activeTexture(gl.TEXTURE0 + i);\n      gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([255, 0, 0, 255]));\n      this._atlasTextures[i] = glTexture;\n    }\n\n    // Allow drawing of transparent texture\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n    // Set viewport\n    this.handleResize();\n  }\n\n  public beginFrame(): boolean {\n    return this._atlas ? this._atlas.beginFrame() : true;\n  }\n\n  public updateCell(x: number, y: number, code: number, bg: number, fg: number, ext: number, chars: string, lastBg: number): void {\n    // Since this function is called for every cell (`rows*cols`), it must be very optimized. It\n    // should not instantiate any variables unless a new glyph is drawn to the cache where the\n    // slight slowdown is acceptable for the developer ergonomics provided as it's a once of for\n    // each glyph.\n    this._updateCell(this._vertices.attributes, x, y, code, bg, fg, ext, chars, lastBg);\n  }\n\n  private _updateCell(array: Float32Array, x: number, y: number, code: number | undefined, bg: number, fg: number, ext: number, chars: string, lastBg: number): void {\n    $i = (y * this._terminal.cols + x) * INDICES_PER_CELL;\n\n    // Exit early if this is a null character, allow space character to continue as it may have\n    // underline/strikethrough styles\n    if (code === NULL_CELL_CODE || code === undefined/* This is used for the right side of wide chars */) {\n      array.fill(0, $i, $i + INDICES_PER_CELL - 1 - CELL_POSITION_INDICES);\n      return;\n    }\n\n    if (!this._atlas) {\n      return;\n    }\n\n    // Get the glyph\n    if (chars && chars.length > 1) {\n      $glyph = this._atlas.getRasterizedGlyphCombinedChar(chars, bg, fg, ext);\n    } else {\n      $glyph = this._atlas.getRasterizedGlyph(code, bg, fg, ext);\n    }\n\n    $leftCellPadding = Math.floor((this._dimensions.device.cell.width - this._dimensions.device.char.width) / 2);\n    if (bg !== lastBg && $glyph.offset.x > $leftCellPadding) {\n      $clippedPixels = $glyph.offset.x - $leftCellPadding;\n      // a_origin\n      array[$i    ] = -($glyph.offset.x - $clippedPixels) + this._dimensions.device.char.left;\n      array[$i + 1] = -$glyph.offset.y + this._dimensions.device.char.top;\n      // a_size\n      array[$i + 2] = ($glyph.size.x - $clippedPixels) / this._dimensions.device.canvas.width;\n      array[$i + 3] = $glyph.size.y / this._dimensions.device.canvas.height;\n      // a_texpage\n      array[$i + 4] = $glyph.texturePage;\n      // a_texcoord\n      array[$i + 5] = $glyph.texturePositionClipSpace.x + $clippedPixels / this._atlas.pages[$glyph.texturePage].canvas.width;\n      array[$i + 6] = $glyph.texturePositionClipSpace.y;\n      // a_texsize\n      array[$i + 7] = $glyph.sizeClipSpace.x - $clippedPixels / this._atlas.pages[$glyph.texturePage].canvas.width;\n      array[$i + 8] = $glyph.sizeClipSpace.y;\n    } else {\n      // a_origin\n      array[$i    ] = -$glyph.offset.x + this._dimensions.device.char.left;\n      array[$i + 1] = -$glyph.offset.y + this._dimensions.device.char.top;\n      // a_size\n      array[$i + 2] = $glyph.size.x / this._dimensions.device.canvas.width;\n      array[$i + 3] = $glyph.size.y / this._dimensions.device.canvas.height;\n      // a_texpage\n      array[$i + 4] = $glyph.texturePage;\n      // a_texcoord\n      array[$i + 5] = $glyph.texturePositionClipSpace.x;\n      array[$i + 6] = $glyph.texturePositionClipSpace.y;\n      // a_texsize\n      array[$i + 7] = $glyph.sizeClipSpace.x;\n      array[$i + 8] = $glyph.sizeClipSpace.y;\n    }\n    // a_cellpos only changes on resize\n  }\n\n  public clear(): void {\n    const terminal = this._terminal;\n    const newCount = terminal.cols * terminal.rows * INDICES_PER_CELL;\n\n    // Clear vertices\n    if (this._vertices.count !== newCount) {\n      this._vertices.attributes = new Float32Array(newCount);\n    } else {\n      this._vertices.attributes.fill(0);\n    }\n    let i = 0;\n    for (; i < this._vertices.attributesBuffers.length; i++) {\n      if (this._vertices.count !== newCount) {\n        this._vertices.attributesBuffers[i] = new Float32Array(newCount);\n      } else {\n        this._vertices.attributesBuffers[i].fill(0);\n      }\n    }\n    this._vertices.count = newCount;\n    i = 0;\n    for (let y = 0; y < terminal.rows; y++) {\n      for (let x = 0; x < terminal.cols; x++) {\n        this._vertices.attributes[i + 9] = x / terminal.cols;\n        this._vertices.attributes[i + 10] = y / terminal.rows;\n        i += INDICES_PER_CELL;\n      }\n    }\n  }\n\n  public handleResize(): void {\n    const gl = this._gl;\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.uniform2f(this._resolutionLocation, gl.canvas.width, gl.canvas.height);\n    this.clear();\n  }\n\n  public render(renderModel: IRenderModel): void {\n    if (!this._atlas) {\n      return;\n    }\n\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Alternate buffers each frame as the active buffer gets locked while it's in use by the GPU\n    this._activeBuffer = (this._activeBuffer + 1) % 2;\n    const activeBuffer = this._vertices.attributesBuffers[this._activeBuffer];\n\n    // Copy data for each cell of each line up to its line length (the last non-whitespace cell)\n    // from the attributes buffer into activeBuffer, which is the one that gets bound to the GPU.\n    // The reasons for this are as follows:\n    // - So the active buffer can be alternated so we don't get blocked on rendering finishing\n    // - To copy either the normal attributes buffer or the selection attributes buffer when there\n    //   is a selection\n    // - So we don't send vertices for all the line-ending whitespace to the GPU\n    let bufferLength = 0;\n    for (let y = 0; y < renderModel.lineLengths.length; y++) {\n      const si = y * this._terminal.cols * INDICES_PER_CELL;\n      const sub = this._vertices.attributes.subarray(si, si + renderModel.lineLengths[y] * INDICES_PER_CELL);\n      activeBuffer.set(sub, bufferLength);\n      bufferLength += sub.length;\n    }\n\n    // Bind the attributes buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, activeBuffer.subarray(0, bufferLength), gl.STREAM_DRAW);\n\n    // Bind the atlas page texture if they have changed\n    for (let i = 0; i < this._atlas.pages.length; i++) {\n      if (this._atlas.pages[i].version !== this._atlasTextures[i].version) {\n        this._bindAtlasPageTexture(gl, this._atlas, i);\n      }\n    }\n\n    // Draw the viewport\n    gl.drawElementsInstanced(gl.TRIANGLE_STRIP, 4, gl.UNSIGNED_BYTE, 0, bufferLength / INDICES_PER_CELL);\n  }\n\n  public setAtlas(atlas: ITextureAtlas): void {\n    this._atlas = atlas;\n    for (const glTexture of this._atlasTextures) {\n      glTexture.version = -1;\n    }\n  }\n\n  private _bindAtlasPageTexture(gl: IWebGL2RenderingContext, atlas: ITextureAtlas, i: number): void {\n    gl.activeTexture(gl.TEXTURE0 + i);\n    gl.bindTexture(gl.TEXTURE_2D, this._atlasTextures[i].texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, atlas.pages[i].canvas);\n    gl.generateMipmap(gl.TEXTURE_2D);\n    this._atlasTextures[i].version = atlas.pages[i].version;\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { createProgram, expandFloat32Array, PROJECTION_MATRIX } from './WebglUtils';\nimport { IRenderModel, IWebGLVertexArrayObject, IWebGL2RenderingContext } from './Types';\nimport { Attributes, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { Terminal } from 'xterm';\nimport { IColor } from 'common/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RENDER_MODEL_BG_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { DIM_OPACITY } from 'browser/renderer/shared/Constants';\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { IThemeService } from 'browser/services/Services';\n\nconst enum VertexAttribLocations {\n  POSITION = 0,\n  SIZE = 1,\n  COLOR = 2,\n  UNIT_QUAD = 3\n}\n\nconst vertexShaderSource = `#version 300 es\nlayout (location = ${VertexAttribLocations.POSITION}) in vec2 a_position;\nlayout (location = ${VertexAttribLocations.SIZE}) in vec2 a_size;\nlayout (location = ${VertexAttribLocations.COLOR}) in vec4 a_color;\nlayout (location = ${VertexAttribLocations.UNIT_QUAD}) in vec2 a_unitquad;\n\nuniform mat4 u_projection;\n\nout vec4 v_color;\n\nvoid main() {\n  vec2 zeroToOne = a_position + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_color = a_color;\n}`;\n\nconst fragmentShaderSource = `#version 300 es\nprecision lowp float;\n\nin vec4 v_color;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = v_color;\n}`;\n\ninterface IVertices {\n  attributes: Float32Array;\n  count: number;\n}\n\nconst INDICES_PER_RECTANGLE = 8;\nconst BYTES_PER_RECTANGLE = INDICES_PER_RECTANGLE * Float32Array.BYTES_PER_ELEMENT;\n\nconst INITIAL_BUFFER_RECTANGLE_CAPACITY = 20 * INDICES_PER_RECTANGLE;\n\n// Work variables to avoid garbage collection\nlet $rgba = 0;\nlet $isDefault = false;\nlet $x1 = 0;\nlet $y1 = 0;\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport class RectangleRenderer extends Disposable {\n\n  private _program: WebGLProgram;\n  private _vertexArrayObject: IWebGLVertexArrayObject;\n  private _attributesBuffer: WebGLBuffer;\n  private _projectionLocation: WebGLUniformLocation;\n  private _bgFloat!: Float32Array;\n\n  private _vertices: IVertices = {\n    count: 0,\n    attributes: new Float32Array(INITIAL_BUFFER_RECTANGLE_CAPACITY)\n  };\n\n  constructor(\n    private _terminal: Terminal,\n    private _gl: IWebGL2RenderingContext,\n    private _dimensions: IRenderDimensions,\n    private readonly _themeService: IThemeService\n  ) {\n    super();\n\n    const gl = this._gl;\n\n    this._program = throwIfFalsy(createProgram(gl, vertexShaderSource, fragmentShaderSource));\n    this.register(toDisposable(() => gl.deleteProgram(this._program)));\n\n    // Uniform locations\n    this._projectionLocation = throwIfFalsy(gl.getUniformLocation(this._program, 'u_projection'));\n\n    // Create and set the vertex array object\n    this._vertexArrayObject = gl.createVertexArray();\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    // Setup a_unitquad, this defines the 4 vertices of a rectangle\n    const unitQuadVertices = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const unitQuadVerticesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(unitQuadVerticesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, unitQuadVerticesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, unitQuadVertices, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(VertexAttribLocations.UNIT_QUAD);\n    gl.vertexAttribPointer(VertexAttribLocations.UNIT_QUAD, 2, this._gl.FLOAT, false, 0, 0);\n\n    // Setup the unit quad element array buffer, this points to indices in\n    // unitQuadVertices to allow is to draw 2 triangles from the vertices via a\n    // triangle strip\n    const unitQuadElementIndices = new Uint8Array([0, 1, 2, 3]);\n    const elementIndicesBuffer = gl.createBuffer();\n    this.register(toDisposable(() => gl.deleteBuffer(elementIndicesBuffer)));\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, unitQuadElementIndices, gl.STATIC_DRAW);\n\n    // Setup attributes\n    this._attributesBuffer = throwIfFalsy(gl.createBuffer());\n    this.register(toDisposable(() => gl.deleteBuffer(this._attributesBuffer)));\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.enableVertexAttribArray(VertexAttribLocations.POSITION);\n    gl.vertexAttribPointer(VertexAttribLocations.POSITION, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 0);\n    gl.vertexAttribDivisor(VertexAttribLocations.POSITION, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.SIZE);\n    gl.vertexAttribPointer(VertexAttribLocations.SIZE, 2, gl.FLOAT, false, BYTES_PER_RECTANGLE, 2 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.SIZE, 1);\n    gl.enableVertexAttribArray(VertexAttribLocations.COLOR);\n    gl.vertexAttribPointer(VertexAttribLocations.COLOR, 4, gl.FLOAT, false, BYTES_PER_RECTANGLE, 4 * Float32Array.BYTES_PER_ELEMENT);\n    gl.vertexAttribDivisor(VertexAttribLocations.COLOR, 1);\n\n    this._updateCachedColors(_themeService.colors);\n    this.register(this._themeService.onChangeColors(e => {\n      this._updateCachedColors(e);\n      this._updateViewportRectangle();\n    }));\n  }\n\n  public render(): void {\n    const gl = this._gl;\n\n    gl.useProgram(this._program);\n\n    gl.bindVertexArray(this._vertexArrayObject);\n\n    gl.uniformMatrix4fv(this._projectionLocation, false, PROJECTION_MATRIX);\n\n    // Bind attributes buffer and draw\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._attributesBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._vertices.attributes, gl.DYNAMIC_DRAW);\n    gl.drawElementsInstanced(this._gl.TRIANGLE_STRIP, 4, gl.UNSIGNED_BYTE, 0, this._vertices.count);\n  }\n\n  public handleResize(): void {\n    this._updateViewportRectangle();\n  }\n\n  public setDimensions(dimensions: IRenderDimensions): void {\n    this._dimensions = dimensions;\n  }\n\n  private _updateCachedColors(colors: ReadonlyColorSet): void {\n    this._bgFloat = this._colorToFloat32Array(colors.background);\n  }\n\n  private _updateViewportRectangle(): void {\n    // Set first rectangle that clears the screen\n    this._addRectangleFloat(\n      this._vertices.attributes,\n      0,\n      0,\n      0,\n      this._terminal.cols * this._dimensions.device.cell.width,\n      this._terminal.rows * this._dimensions.device.cell.height,\n      this._bgFloat\n    );\n  }\n\n  public updateBackgrounds(model: IRenderModel): void {\n    const terminal = this._terminal;\n    const vertices = this._vertices;\n\n    // Declare variable ahead of time to avoid garbage collection\n    let rectangleCount = 1;\n    let y: number;\n    let x: number;\n    let currentStartX: number;\n    let currentBg: number;\n    let currentFg: number;\n    let currentInverse: boolean;\n    let modelIndex: number;\n    let bg: number;\n    let fg: number;\n    let inverse: boolean;\n    let offset: number;\n\n    for (y = 0; y < terminal.rows; y++) {\n      currentStartX = -1;\n      currentBg = 0;\n      currentFg = 0;\n      currentInverse = false;\n      for (x = 0; x < terminal.cols; x++) {\n        modelIndex = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n        bg = model.cells[modelIndex + RENDER_MODEL_BG_OFFSET];\n        fg = model.cells[modelIndex + RENDER_MODEL_FG_OFFSET];\n        inverse = !!(fg & FgFlags.INVERSE);\n        if (bg !== currentBg || (fg !== currentFg && (currentInverse || inverse))) {\n          // A rectangle needs to be drawn if going from non-default to another color\n          if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n            offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n            this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, x, y);\n          }\n          currentStartX = x;\n          currentBg = bg;\n          currentFg = fg;\n          currentInverse = inverse;\n        }\n      }\n      // Finish rectangle if it's still going\n      if (currentBg !== 0 || (currentInverse && currentFg !== 0)) {\n        offset = rectangleCount++ * INDICES_PER_RECTANGLE;\n        this._updateRectangle(vertices, offset, currentFg, currentBg, currentStartX, terminal.cols, y);\n      }\n    }\n    vertices.count = rectangleCount;\n  }\n\n  private _updateRectangle(vertices: IVertices, offset: number, fg: number, bg: number, startX: number, endX: number, y: number): void {\n    $isDefault = false;\n    if (fg & FgFlags.INVERSE) {\n      switch (fg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          $rgba = this._themeService.colors.ansi[fg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          $rgba = (fg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          $rgba = this._themeService.colors.foreground.rgba;\n      }\n    } else {\n      switch (bg & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          $rgba = this._themeService.colors.ansi[bg & Attributes.PCOLOR_MASK].rgba;\n          break;\n        case Attributes.CM_RGB:\n          $rgba = (bg & Attributes.RGB_MASK) << 8;\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          $rgba = this._themeService.colors.background.rgba;\n          $isDefault = true;\n      }\n    }\n\n    if (vertices.attributes.length < offset + 4) {\n      vertices.attributes = expandFloat32Array(vertices.attributes, this._terminal.rows * this._terminal.cols * INDICES_PER_RECTANGLE);\n    }\n    $x1 = startX * this._dimensions.device.cell.width;\n    $y1 = y * this._dimensions.device.cell.height;\n    $r = (($rgba >> 24) & 0xFF) / 255;\n    $g = (($rgba >> 16) & 0xFF) / 255;\n    $b = (($rgba >> 8 ) & 0xFF) / 255;\n    $a = (!$isDefault && bg & BgFlags.DIM) ? DIM_OPACITY : 1;\n\n    this._addRectangle(vertices.attributes, offset, $x1, $y1, (endX - startX) * this._dimensions.device.cell.width, this._dimensions.device.cell.height, $r, $g, $b, $a);\n  }\n\n  private _addRectangle(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, r: number, g: number, b: number, a: number): void {\n    array[offset    ] = x1 / this._dimensions.device.canvas.width;\n    array[offset + 1] = y1 / this._dimensions.device.canvas.height;\n    array[offset + 2] = width / this._dimensions.device.canvas.width;\n    array[offset + 3] = height / this._dimensions.device.canvas.height;\n    array[offset + 4] = r;\n    array[offset + 5] = g;\n    array[offset + 6] = b;\n    array[offset + 7] = a;\n  }\n\n  private _addRectangleFloat(array: Float32Array, offset: number, x1: number, y1: number, width: number, height: number, color: Float32Array): void {\n    array[offset    ] = x1 / this._dimensions.device.canvas.width;\n    array[offset + 1] = y1 / this._dimensions.device.canvas.height;\n    array[offset + 2] = width / this._dimensions.device.canvas.width;\n    array[offset + 3] = height / this._dimensions.device.canvas.height;\n    array[offset + 4] = color[0];\n    array[offset + 5] = color[1];\n    array[offset + 6] = color[2];\n    array[offset + 7] = color[3];\n  }\n\n  private _colorToFloat32Array(color: IColor): Float32Array {\n    return new Float32Array([\n      ((color.rgba >> 24) & 0xFF) / 255,\n      ((color.rgba >> 16) & 0xFF) / 255,\n      ((color.rgba >> 8 ) & 0xFF) / 255,\n      ((color.rgba      ) & 0xFF) / 255\n    ]);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderModel } from './Types';\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { createSelectionRenderModel } from 'browser/renderer/shared/SelectionRenderModel';\n\nexport const RENDER_MODEL_INDICIES_PER_CELL = 4;\nexport const RENDER_MODEL_BG_OFFSET = 1;\nexport const RENDER_MODEL_FG_OFFSET = 2;\nexport const RENDER_MODEL_EXT_OFFSET = 3;\n\nexport const COMBINED_CHAR_BIT_MASK = 0x80000000;\n\nexport class RenderModel implements IRenderModel {\n  public cells: Uint32Array;\n  public lineLengths: Uint32Array;\n  public selection: ISelectionRenderModel;\n\n  constructor() {\n    this.cells = new Uint32Array(0);\n    this.lineLengths = new Uint32Array(0);\n    this.selection = createSelectionRenderModel();\n  }\n\n  public resize(cols: number, rows: number): void {\n    const indexCount = cols * rows * RENDER_MODEL_INDICIES_PER_CELL;\n    if (indexCount !== this.cells.length) {\n      this.cells = new Uint32Array(indexCount);\n      this.lineLengths = new Uint32Array(rows);\n    }\n  }\n\n  public clear(): void {\n    this.cells.fill(0, 0);\n    this.lineLengths.fill(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { CellColorResolver } from 'browser/renderer/shared/CellColorResolver';\nimport { acquireTextureAtlas, removeTerminalFromCache } from 'browser/renderer/shared/CharAtlasCache';\nimport { observeDevicePixelDimensions } from 'browser/renderer/shared/DevicePixelObserver';\nimport { createRenderDimensions, throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { TextureAtlas } from 'browser/renderer/shared/TextureAtlas';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { ICharacterJoinerService, ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ITerminal } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Content, NULL_CELL_CHAR, NULL_CELL_CODE } from 'common/buffer/Constants';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { CharData, IBufferLine, ICellData } from 'common/Types';\nimport { IDisposable, Terminal } from 'xterm';\nimport { GlyphRenderer } from './GlyphRenderer';\nimport { RectangleRenderer } from './RectangleRenderer';\nimport { CursorRenderLayer } from './renderLayer/CursorRenderLayer';\nimport { LinkRenderLayer } from './renderLayer/LinkRenderLayer';\nimport { IRenderLayer } from './renderLayer/Types';\nimport { COMBINED_CHAR_BIT_MASK, RenderModel, RENDER_MODEL_BG_OFFSET, RENDER_MODEL_EXT_OFFSET, RENDER_MODEL_FG_OFFSET, RENDER_MODEL_INDICIES_PER_CELL } from './RenderModel';\nimport { IWebGL2RenderingContext } from './Types';\n\nexport class WebglRenderer extends Disposable implements IRenderer {\n  private _renderLayers: IRenderLayer[];\n  private _charAtlasDisposable: IDisposable | undefined;\n  private _charAtlas: ITextureAtlas | undefined;\n  private _devicePixelRatio: number;\n\n  private _model: RenderModel = new RenderModel();\n  private _workCell: CellData = new CellData();\n  private _cellColorResolver: CellColorResolver;\n\n  private _canvas: HTMLCanvasElement;\n  private _gl: IWebGL2RenderingContext;\n  private _rectangleRenderer: RectangleRenderer;\n  private _glyphRenderer: GlyphRenderer;\n\n  public readonly dimensions: IRenderDimensions;\n\n  private _core: ITerminal;\n  private _isAttached: boolean;\n  private _contextRestorationTimeout: number | undefined;\n\n  private readonly _onChangeTextureAtlas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onChangeTextureAtlas = this._onChangeTextureAtlas.event;\n  private readonly _onAddTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n  private readonly _onRemoveTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event;\n  private readonly _onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>());\n  public readonly onRequestRedraw = this._onRequestRedraw.event;\n  private readonly _onContextLoss = this.register(new EventEmitter<void>());\n  public readonly onContextLoss = this._onContextLoss.event;\n\n  constructor(\n    private _terminal: Terminal,\n    private readonly _characterJoinerService: ICharacterJoinerService,\n    private readonly _charSizeService: ICharSizeService,\n    private readonly _coreBrowserService: ICoreBrowserService,\n    coreService: ICoreService,\n    private readonly _decorationService: IDecorationService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _themeService: IThemeService,\n    preserveDrawingBuffer?: boolean\n  ) {\n    super();\n\n    this.register(this._themeService.onChangeColors(() => this._handleColorChange()));\n\n    this._cellColorResolver = new CellColorResolver(this._terminal, this._model.selection, this._decorationService, this._coreBrowserService, this._themeService);\n\n    this._core = (this._terminal as any)._core;\n\n    this._renderLayers = [\n      new LinkRenderLayer(this._core.screenElement!, 2, this._terminal, this._core.linkifier2, this._coreBrowserService, _optionsService, this._themeService),\n      new CursorRenderLayer(_terminal, this._core.screenElement!, 3, this._onRequestRedraw, this._coreBrowserService, coreService, _optionsService, this._themeService)\n    ];\n    this.dimensions = createRenderDimensions();\n    this._devicePixelRatio = this._coreBrowserService.dpr;\n    this._updateDimensions();\n    this.register(_optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this._canvas = document.createElement('canvas');\n\n    const contextAttributes = {\n      antialias: false,\n      depth: false,\n      preserveDrawingBuffer\n    };\n    this._gl = this._canvas.getContext('webgl2', contextAttributes) as IWebGL2RenderingContext;\n    if (!this._gl) {\n      throw new Error('WebGL2 not supported ' + this._gl);\n    }\n\n    this.register(addDisposableDomListener(this._canvas, 'webglcontextlost', (e) => {\n      console.log('webglcontextlost event received');\n      // Prevent the default behavior in order to enable WebGL context restoration.\n      e.preventDefault();\n      // Wait a few seconds to see if the 'webglcontextrestored' event is fired.\n      // If not, dispatch the onContextLoss notification to observers.\n      this._contextRestorationTimeout = setTimeout(() => {\n        this._contextRestorationTimeout = undefined;\n        console.warn('webgl context not restored; firing onContextLoss');\n        this._onContextLoss.fire(e);\n      }, 3000 /* ms */);\n    }));\n    this.register(addDisposableDomListener(this._canvas, 'webglcontextrestored', (e) => {\n      console.warn('webglcontextrestored event received');\n      clearTimeout(this._contextRestorationTimeout);\n      this._contextRestorationTimeout = undefined;\n      // The texture atlas and glyph renderer must be fully reinitialized\n      // because their contents have been lost.\n      removeTerminalFromCache(this._terminal);\n      this._initializeWebGLState();\n      this._requestRedrawViewport();\n    }));\n\n    this.register(observeDevicePixelDimensions(this._canvas, this._coreBrowserService.window, (w, h) => this._setCanvasDevicePixelDimensions(w, h)));\n\n    this._core.screenElement!.appendChild(this._canvas);\n\n    [this._rectangleRenderer, this._glyphRenderer] = this._initializeWebGLState();\n\n    this._isAttached = this._coreBrowserService.window.document.body.contains(this._core.screenElement!);\n\n    this.register(toDisposable(() => {\n      for (const l of this._renderLayers) {\n        l.dispose();\n      }\n      this._canvas.parentElement?.removeChild(this._canvas);\n      removeTerminalFromCache(this._terminal);\n    }));\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._charAtlas?.pages[0].canvas;\n  }\n\n  private _handleColorChange(): void {\n    this._refreshCharAtlas();\n\n    // Force a full refresh\n    this._clearModel(true);\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== this._coreBrowserService.dpr) {\n      this._devicePixelRatio = this._coreBrowserService.dpr;\n      this.handleResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    this._model.resize(this._terminal.cols, this._terminal.rows);\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this._terminal, this.dimensions);\n    }\n\n    // Resize the canvas\n    this._canvas.width = this.dimensions.device.canvas.width;\n    this._canvas.height = this.dimensions.device.canvas.height;\n    this._canvas.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._canvas.style.height = `${this.dimensions.css.canvas.height}px`;\n\n    // Resize the screen\n    this._core.screenElement!.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._core.screenElement!.style.height = `${this.dimensions.css.canvas.height}px`;\n\n    this._rectangleRenderer.setDimensions(this.dimensions);\n    this._rectangleRenderer.handleResize();\n    this._glyphRenderer.setDimensions(this.dimensions);\n    this._glyphRenderer.handleResize();\n\n    this._refreshCharAtlas();\n\n    // Force a full refresh. Resizing `_glyphRenderer` should clear it already,\n    // so there is no need to clear it again here.\n    this._clearModel(false);\n  }\n\n  public handleCharSizeChanged(): void {\n    this.handleResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public handleBlur(): void {\n    for (const l of this._renderLayers) {\n      l.handleBlur(this._terminal);\n    }\n    // Request a redraw for active/inactive selection background\n    this._requestRedrawViewport();\n  }\n\n  public handleFocus(): void {\n    for (const l of this._renderLayers) {\n      l.handleFocus(this._terminal);\n    }\n    // Request a redraw for active/inactive selection background\n    this._requestRedrawViewport();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    for (const l of this._renderLayers) {\n      l.handleSelectionChanged(this._terminal, start, end, columnSelectMode);\n    }\n    this._model.selection.update(this._terminal, start, end, columnSelectMode);\n    this._requestRedrawViewport();\n  }\n\n  public handleCursorMove(): void {\n    for (const l of this._renderLayers) {\n      l.handleCursorMove(this._terminal);\n    }\n  }\n\n  private _handleOptionsChanged(): void {\n    this._updateDimensions();\n    this._refreshCharAtlas();\n  }\n\n  /**\n   * Initializes members dependent on WebGL context state.\n   */\n  private _initializeWebGLState(): [RectangleRenderer, GlyphRenderer] {\n    // Dispose any previous rectangle and glyph renderers before creating new ones.\n    this._rectangleRenderer?.dispose();\n    this._glyphRenderer?.dispose();\n\n    this._rectangleRenderer = this.register(new RectangleRenderer(this._terminal, this._gl, this.dimensions, this._themeService));\n    this._glyphRenderer = this.register(new GlyphRenderer(this._terminal, this._gl, this.dimensions));\n\n    // Update dimensions and acquire char atlas\n    this.handleCharSizeChanged();\n\n    return [this._rectangleRenderer, this._glyphRenderer];\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   */\n  private _refreshCharAtlas(): void {\n    if (this.dimensions.device.char.width <= 0 && this.dimensions.device.char.height <= 0) {\n      // Mark as not attached so char atlas gets refreshed on next render\n      this._isAttached = false;\n      return;\n    }\n\n    const atlas = acquireTextureAtlas(\n      this._terminal,\n      this._optionsService.rawOptions,\n      this._themeService.colors,\n      this.dimensions.device.cell.width,\n      this.dimensions.device.cell.height,\n      this.dimensions.device.char.width,\n      this.dimensions.device.char.height,\n      this._coreBrowserService.dpr\n    );\n    if (this._charAtlas !== atlas) {\n      this._charAtlasDisposable?.dispose();\n      this._onChangeTextureAtlas.fire(atlas.pages[0].canvas);\n      this._charAtlasDisposable = getDisposeArrayDisposable([\n        forwardEvent(atlas.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas),\n        forwardEvent(atlas.onRemoveTextureAtlasCanvas, this._onRemoveTextureAtlasCanvas)\n      ]);\n    }\n    this._charAtlas = atlas;\n    this._charAtlas.warmUp();\n    this._glyphRenderer.setAtlas(this._charAtlas);\n  }\n\n  /**\n   * Clear the model.\n   * @param clearGlyphRenderer Whether to also clear the glyph renderer. This\n   * should be true generally to make sure it is in the same state as the model.\n   */\n  private _clearModel(clearGlyphRenderer: boolean): void {\n    this._model.clear();\n    if (clearGlyphRenderer) {\n      this._glyphRenderer.clear();\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clearTexture();\n    this._clearModel(true);\n    this._requestRedrawViewport();\n  }\n\n  public clear(): void {\n    this._clearModel(true);\n    for (const l of this._renderLayers) {\n      l.reset(this._terminal);\n    }\n  }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return -1;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return false;\n  }\n\n  public renderRows(start: number, end: number): void {\n    if (!this._isAttached) {\n      if (this._coreBrowserService.window.document.body.contains(this._core.screenElement!) && this._charSizeService.width && this._charSizeService.height) {\n        this._updateDimensions();\n        this._refreshCharAtlas();\n        this._isAttached = true;\n      } else {\n        return;\n      }\n    }\n\n    // Update render layers\n    for (const l of this._renderLayers) {\n      l.handleGridChanged(this._terminal, start, end);\n    }\n\n    // Tell renderer the frame is beginning\n    if (this._glyphRenderer.beginFrame()) {\n      this._clearModel(true);\n    }\n\n    // Update model to reflect what's drawn\n    this._updateModel(start, end);\n\n    // Render\n    this._rectangleRenderer.render();\n    this._glyphRenderer.render(this._model);\n  }\n\n  private _updateModel(start: number, end: number): void {\n    const terminal = this._core;\n    let cell: ICellData = this._workCell;\n\n    // Declare variable ahead of time to avoid garbage collection\n    let lastBg: number;\n    let y: number;\n    let row: number;\n    let line: IBufferLine | undefined;\n    let joinedRanges: [number, number][];\n    let isJoined: boolean;\n    let lastCharX: number;\n    let range: [number, number];\n    let chars: string;\n    let code: number;\n    let i: number;\n    let x: number;\n    let j: number;\n\n    for (y = start; y <= end; y++) {\n      row = y + terminal.buffer.ydisp;\n      line = terminal.buffer.lines.get(row);\n      if (!line) {\n        break;\n      }\n      this._model.lineLengths[y] = 0;\n      joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (x = 0; x < terminal.cols; x++) {\n        lastBg = this._cellColorResolver.result.bg;\n        line.loadCell(x, cell);\n\n        if (x === 0) {\n          lastBg = this._cellColorResolver.result.bg;\n        }\n\n        // If true, indicates that the current character(s) to draw were joined.\n        isJoined = false;\n        lastCharX = x;\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly.\n          cell = new JoinedCellData(\n            cell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        chars = cell.getChars();\n        code = cell.getCode();\n        i = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n\n        // Load colors/resolve overrides into work colors\n        this._cellColorResolver.resolve(cell, x, row);\n\n        if (code !== NULL_CELL_CODE) {\n          this._model.lineLengths[y] = x + 1;\n        }\n\n        // Nothing has changed, no updates needed\n        if (this._model.cells[i] === code &&\n            this._model.cells[i + RENDER_MODEL_BG_OFFSET] === this._cellColorResolver.result.bg &&\n            this._model.cells[i + RENDER_MODEL_FG_OFFSET] === this._cellColorResolver.result.fg &&\n            this._model.cells[i + RENDER_MODEL_EXT_OFFSET] === this._cellColorResolver.result.ext) {\n          continue;\n        }\n\n        // Flag combined chars with a bit mask so they're easily identifiable\n        if (chars.length > 1) {\n          code |= COMBINED_CHAR_BIT_MASK;\n        }\n\n        // Cache the results in the model\n        this._model.cells[i] = code;\n        this._model.cells[i + RENDER_MODEL_BG_OFFSET] = this._cellColorResolver.result.bg;\n        this._model.cells[i + RENDER_MODEL_FG_OFFSET] = this._cellColorResolver.result.fg;\n        this._model.cells[i + RENDER_MODEL_EXT_OFFSET] = this._cellColorResolver.result.ext;\n\n        this._glyphRenderer.updateCell(x, y, code, this._cellColorResolver.result.bg, this._cellColorResolver.result.fg, this._cellColorResolver.result.ext, chars, lastBg);\n\n        if (isJoined) {\n          // Restore work cell\n          cell = this._workCell;\n\n          // Null out non-first cells\n          for (x++; x < lastCharX; x++) {\n            j = ((y * terminal.cols) + x) * RENDER_MODEL_INDICIES_PER_CELL;\n            this._glyphRenderer.updateCell(x, y, NULL_CELL_CODE, 0, 0, 0, NULL_CELL_CHAR, 0);\n            this._model.cells[j] = NULL_CELL_CODE;\n            this._model.cells[j + RENDER_MODEL_BG_OFFSET] = this._cellColorResolver.result.bg;\n            this._model.cells[j + RENDER_MODEL_FG_OFFSET] = this._cellColorResolver.result.fg;\n            this._model.cells[j + RENDER_MODEL_EXT_OFFSET] = this._cellColorResolver.result.ext;\n          }\n        }\n      }\n    }\n    this._rectangleRenderer.updateBackgrounds(this._model);\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    // Perform a new measure if the CharMeasure dimensions are not yet available\n    if (!this._charSizeService.width || !this._charSizeService.height) {\n      return;\n    }\n\n    // Calculate the device character width. Width is floored as it must be drawn to an integer grid\n    // in order for the char atlas glyphs to not be blurry.\n    this.dimensions.device.char.width = Math.floor(this._charSizeService.width * this._devicePixelRatio);\n\n    // Calculate the device character height. Height is ceiled in case devicePixelRatio is a\n    // floating point number in order to ensure there is enough space to draw the character to the\n    // cell.\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * this._devicePixelRatio);\n\n    // Calculate the device cell height, if lineHeight is _not_ 1, the resulting value will be\n    // floored since lineHeight can never be lower then 1, this guarentees the device cell height\n    // will always be larger than device char height.\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y offset within a cell that glyph should draw at in order for it to be centered\n    // correctly within the cell.\n    this.dimensions.device.char.top = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.device.cell.height - this.dimensions.device.char.height) / 2);\n\n    // Calculate the device cell width, taking the letterSpacing into account.\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x offset with a cell that text should draw from in order for it to be centered\n    // correctly within the cell.\n    this.dimensions.device.char.left = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions, the device dimensions define the actual number of pixel in\n    // the canvas\n    this.dimensions.device.canvas.height = this._terminal.rows * this.dimensions.device.cell.height;\n    this.dimensions.device.canvas.width = this._terminal.cols * this.dimensions.device.cell.width;\n\n    // The the size of the canvas on the page. It's important that this rounds to nearest integer\n    // and not ceils as browsers often have floating point precision issues where\n    // `window.devicePixelRatio` ends up being something like `1.100000023841858` for example, when\n    // it's actually 1.1. Ceiling may causes blurriness as the backing canvas image is 1 pixel too\n    // large for the canvas element size.\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / this._devicePixelRatio);\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / this._devicePixelRatio);\n\n    // Get the CSS dimensions of an individual cell. This needs to be derived from the calculated\n    // device pixel canvas value above. CharMeasure.width/height by itself is insufficient when the\n    // page is not at 100% zoom level as CharMeasure is measured in CSS pixels, but the actual char\n    // size on the canvas can differ.\n    this.dimensions.css.cell.height = this.dimensions.device.cell.height / this._devicePixelRatio;\n    this.dimensions.css.cell.width = this.dimensions.device.cell.width / this._devicePixelRatio;\n  }\n\n  private _setCanvasDevicePixelDimensions(width: number, height: number): void {\n    if (this._canvas.width === width && this._canvas.height === height) {\n      return;\n    }\n    // While the actual canvas size has changed, keep device canvas dimensions as the value before\n    // the change as it's an exact multiple of the cell sizes.\n    this._canvas.width = width;\n    this._canvas.height = height;\n    this._requestRedrawViewport();\n  }\n\n  private _requestRedrawViewport(): void {\n    this._onRequestRedraw.fire({ start: 0, end: this._terminal.rows - 1 });\n  }\n}\n\n// TODO: Share impl with core\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\n\n/**\n * A matrix that when multiplies will translate 0-1 coordinates (left to right,\n * top to bottom) to clip space.\n */\nexport const PROJECTION_MATRIX = new Float32Array([\n  2, 0, 0, 0,\n  0, -2, 0, 0,\n  0, 0, 1, 0,\n  -1, 1, 0, 1\n]);\n\nexport function createProgram(gl: WebGLRenderingContext, vertexSource: string, fragmentSource: string): WebGLProgram | undefined {\n  const program = throwIfFalsy(gl.createProgram());\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.VERTEX_SHADER, vertexSource)));\n  gl.attachShader(program, throwIfFalsy(createShader(gl, gl.FRAGMENT_SHADER, fragmentSource)));\n  gl.linkProgram(program);\n  const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (success) {\n    return program;\n  }\n\n  console.error(gl.getProgramInfoLog(program));\n  gl.deleteProgram(program);\n}\n\nexport function createShader(gl: WebGLRenderingContext, type: number, source: string): WebGLShader | undefined {\n  const shader = throwIfFalsy(gl.createShader(type));\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (success) {\n    return shader;\n  }\n\n  console.error(gl.getShaderInfoLog(shader));\n  gl.deleteShader(shader);\n}\n\nexport function expandFloat32Array(source: Float32Array, max: number): Float32Array {\n  const newLength = Math.min(source.length * 2, max);\n  const newArray = new Float32Array(newLength);\n  for (let i = 0; i < source.length; i++) {\n    newArray[i] = source[i];\n  }\n  return newArray;\n}\n\nexport class GLTexture {\n  public texture: WebGLTexture;\n  public version: number;\n\n  constructor(texture: WebGLTexture) {\n    this.texture = texture;\n    this.version = -1;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderLayer } from './Types';\nimport { acquireTextureAtlas } from 'browser/renderer/shared/CharAtlasCache';\nimport { Terminal } from 'xterm';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { TEXT_BASELINE } from 'browser/renderer/shared/Constants';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { IRenderDimensions, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IOptionsService } from 'common/services/Services';\n\nexport abstract class BaseRenderLayer extends Disposable implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _deviceCharWidth: number = 0;\n  private _deviceCharHeight: number = 0;\n  private _deviceCellWidth: number = 0;\n  private _deviceCellHeight: number = 0;\n  private _deviceCharLeft: number = 0;\n  private _deviceCharTop: number = 0;\n\n  protected _charAtlas: ITextureAtlas | undefined;\n\n  constructor(\n    terminal: Terminal,\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected readonly _coreBrowserService: ICoreBrowserService,\n    protected readonly _optionsService: IOptionsService,\n    protected readonly _themeService: IThemeService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n    this.register(this._themeService.onChangeColors(e => {\n      this._refreshCharAtlas(terminal, e);\n      this.reset(terminal);\n    }));\n    this.register(toDisposable(() => {\n      this._canvas.remove();\n      this._charAtlas?.dispose();\n    }));\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public handleBlur(terminal: Terminal): void {}\n  public handleFocus(terminal: Terminal): void {}\n  public handleCursorMove(terminal: Terminal): void {}\n  public handleGridChanged(terminal: Terminal, startRow: number, endRow: number): void {}\n  public handleSelectionChanged(terminal: Terminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  protected _setTransparency(terminal: Terminal, alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(terminal, this._themeService.colors);\n    this.handleGridChanged(terminal, 0, terminal.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param terminal The terminal.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(terminal: Terminal, colorSet: ReadonlyColorSet): void {\n    if (this._deviceCharWidth <= 0 && this._deviceCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireTextureAtlas(terminal, this._optionsService.rawOptions, colorSet, this._deviceCellWidth, this._deviceCellHeight, this._deviceCharWidth, this._deviceCharHeight, this._coreBrowserService.dpr);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    this._deviceCellWidth = dim.device.cell.width;\n    this._deviceCellHeight = dim.device.cell.height;\n    this._deviceCharWidth = dim.device.char.width;\n    this._deviceCharHeight = dim.device.char.height;\n    this._deviceCharLeft = dim.device.char.left;\n    this._deviceCharTop = dim.device.char.top;\n    this._canvas.width = dim.device.canvas.width;\n    this._canvas.height = dim.device.canvas.height;\n    this._canvas.style.width = `${dim.css.canvas.width}px`;\n    this._canvas.style.height = `${dim.css.canvas.height}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(terminal, this._themeService.colors);\n  }\n\n  public abstract reset(terminal: Terminal): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      y * this._deviceCellHeight,\n      width * this._deviceCellWidth,\n      height * this._deviceCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      (y + 1) * this._deviceCellHeight - this._coreBrowserService.dpr - 1 /* Ensure it's drawn within the cell */,\n      width * this._deviceCellWidth,\n      this._coreBrowserService.dpr);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._deviceCellWidth,\n      y * this._deviceCellHeight,\n      this._coreBrowserService.dpr * width,\n      this._deviceCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = this._coreBrowserService.dpr;\n    this._ctx.strokeRect(\n      x * this._deviceCellWidth + this._coreBrowserService.dpr / 2,\n      y * this._deviceCellHeight + (this._coreBrowserService.dpr / 2),\n      width * this._deviceCellWidth - this._coreBrowserService.dpr,\n      (height * this._deviceCellHeight) - this._coreBrowserService.dpr);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._deviceCellWidth,\n        y * this._deviceCellHeight,\n        width * this._deviceCellWidth,\n        height * this._deviceCellHeight);\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n      this._ctx.fillRect(\n        x * this._deviceCellWidth,\n        y * this._deviceCellHeight,\n        width * this._deviceCellWidth,\n        height * this._deviceCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param terminal The terminal.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  protected _fillCharTrueColor(terminal: Terminal, cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(terminal, false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipCell(x, y, cell.getWidth());\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._deviceCellWidth + this._deviceCharLeft,\n      y * this._deviceCellHeight + this._deviceCharTop + this._deviceCharHeight);\n  }\n\n  /**\n   * Clips a cell to ensure no pixels will be drawn outside of it.\n   * @param x The column to clip.\n   * @param y The row to clip.\n   * @param width The number of columns to clip.\n   */\n  private _clipCell(x: number, y: number, width: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      x * this._deviceCellWidth,\n      y * this._deviceCellHeight,\n      width * this._deviceCellWidth,\n      this._deviceCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param terminal The terminal.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(terminal: Terminal, isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? terminal.options.fontWeightBold : terminal.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${terminal.options.fontSize! * this._coreBrowserService.dpr}px ${terminal.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\nimport { toDisposable } from 'common/Lifecycle';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (terminal: Terminal, x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    terminal: Terminal,\n    container: HTMLElement,\n    zIndex: number,\n    private _onRequestRefreshRowsEvent: IEventEmitter<IRequestRedrawEvent>,\n    coreBrowserService: ICoreBrowserService,\n    private readonly _coreService: ICoreService,\n    optionsService: IOptionsService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'cursor', zIndex, true, coreBrowserService, optionsService, themeService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    this._handleOptionsChanged(terminal);\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged(terminal)));\n    this.register(toDisposable(() => {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }));\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n    this._handleOptionsChanged(terminal);\n  }\n\n  public handleBlur(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public handleFocus(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.resume(terminal);\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  private _handleOptionsChanged(terminal: Terminal): void {\n    if (terminal.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(() => {\n          this._render(terminal, true);\n        }, this._coreBrowserService);\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRefreshRowsEvent.fire({ start: terminal.buffer.active.cursorY, end: terminal.buffer.active.cursorY });\n  }\n\n  public handleCursorMove(terminal: Terminal): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation(terminal);\n  }\n\n  public handleGridChanged(terminal: Terminal, startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(terminal, false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation(terminal);\n    }\n  }\n\n  private _render(terminal: Terminal, triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = terminal.buffer.active.baseY + terminal.buffer.active.cursorY;\n    const viewportRelativeCursorY = cursorY - terminal.buffer.active.viewportY;\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(terminal.buffer.active.cursorX, terminal.cols - 1);\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= terminal.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // TODO: Need fast buffer API for loading cell\n    (terminal as any)._core.buffer.lines.get(cursorY).loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._themeService.colors.cursor.css;\n      const cursorStyle = terminal.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](terminal, cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(terminal, cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle!;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === terminal.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[terminal.options.cursorStyle || 'block'](terminal, cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = terminal.options.cursorStyle!;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (this._coreBrowserService.dpr < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._themeService.colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._themeService.colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._themeService.colors.cursorAccent.css;\n    this._fillCharTrueColor(terminal, cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._themeService.colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(terminal: Terminal, x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._themeService.colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    private _renderCallback: () => void,\n    private _coreBrowserService: ICoreBrowserService\n  ) {\n    this.isCursorVisible = true;\n    if (this._coreBrowserService.isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(terminal: Terminal): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = this._coreBrowserService.window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = this._coreBrowserService.window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      this._coreBrowserService.window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(terminal: Terminal): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation(terminal);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { is256Color } from 'browser/renderer/shared/CharAtlasUtils';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { Terminal } from 'xterm';\nimport { BaseRenderLayer } from './BaseRenderLayer';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    terminal: Terminal,\n    linkifier2: ILinkifier2,\n    coreBrowserService: ICoreBrowserService,\n    optionsService: IOptionsService,\n    themeService: IThemeService\n  ) {\n    super(terminal, container, 'link', zIndex, true, coreBrowserService, optionsService, themeService);\n\n    this.register(linkifier2.onShowLinkUnderline(e => this._handleShowLinkUnderline(e)));\n    this.register(linkifier2.onHideLinkUnderline(e => this._handleHideLinkUnderline(e)));\n  }\n\n  public resize(terminal: Terminal, dim: IRenderDimensions): void {\n    super.resize(terminal, dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(terminal: Terminal): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _handleShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._themeService.colors.background.css;\n    } else if (e.fg !== undefined && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._themeService.colors.ansi[e.fg!].css;\n    } else {\n      this._ctx.fillStyle = this._themeService.colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _handleHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","import { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { Attributes, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { IDecorationService } from 'common/services/Services';\nimport { ICellData } from 'common/Types';\nimport { Terminal } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $fg = 0;\nlet $bg = 0;\nlet $hasFg = false;\nlet $hasBg = false;\nlet $isSelected = false;\nlet $colors: ReadonlyColorSet | undefined;\n\nexport class CellColorResolver {\n  /**\n   * The shared result of the {@link resolve} call. This is only safe to use immediately after as\n   * any other calls will share object.\n   */\n  public readonly result: { fg: number, bg: number, ext: number } = {\n    fg: 0,\n    bg: 0,\n    ext: 0\n  };\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _selectionRenderModel: ISelectionRenderModel,\n    private readonly _decorationService: IDecorationService,\n    private readonly _coreBrowserService: ICoreBrowserService,\n    private readonly _themeService: IThemeService\n  ) {\n  }\n\n  /**\n   * Resolves colors for the cell, putting the result into the shared {@link result}. This resolves\n   * overrides, inverse and selection for the cell which can then be used to feed into the renderer.\n   */\n  public resolve(cell: ICellData, x: number, y: number): void {\n    this.result.bg = cell.bg;\n    this.result.fg = cell.fg;\n    this.result.ext = cell.bg & BgFlags.HAS_EXTENDED ? cell.extended.ext : 0;\n    // Get any foreground/background overrides, this happens on the model to avoid spreading\n    // override logic throughout the different sub-renderers\n\n    // Reset overrides work variables\n    $bg = 0;\n    $fg = 0;\n    $hasBg = false;\n    $hasFg = false;\n    $isSelected = false;\n    $colors = this._themeService.colors;\n\n    // Apply decorations on the bottom layer\n    this._decorationService.forEachDecorationAtCell(x, y, 'bottom', d => {\n      if (d.backgroundColorRGB) {\n        $bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasBg = true;\n      }\n      if (d.foregroundColorRGB) {\n        $fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasFg = true;\n      }\n    });\n\n    // Apply the selection color if needed\n    $isSelected = this._selectionRenderModel.isCellSelected(this._terminal, x, y);\n    if ($isSelected) {\n      $bg = (this._coreBrowserService.isFocused ? $colors.selectionBackgroundOpaque : $colors.selectionInactiveBackgroundOpaque).rgba >> 8 & 0xFFFFFF;\n      $hasBg = true;\n      if ($colors.selectionForeground) {\n        $fg = $colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n        $hasFg = true;\n      }\n    }\n\n    // Apply decorations on the top layer\n    this._decorationService.forEachDecorationAtCell(x, y, 'top', d => {\n      if (d.backgroundColorRGB) {\n        $bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasBg = true;\n      }\n      if (d.foregroundColorRGB) {\n        $fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n        $hasFg = true;\n      }\n    });\n\n    // Convert any overrides from rgba to the fg/bg packed format. This resolves the inverse flag\n    // ahead of time in order to use the correct cache key\n    if ($hasBg) {\n      if ($isSelected) {\n        // Non-RGB attributes from model + force non-dim + override + force RGB color mode\n        $bg = (cell.bg & ~Attributes.RGB_MASK & ~BgFlags.DIM) | $bg | Attributes.CM_RGB;\n      } else {\n        // Non-RGB attributes from model + override + force RGB color mode\n        $bg = (cell.bg & ~Attributes.RGB_MASK) | $bg | Attributes.CM_RGB;\n      }\n    }\n    if ($hasFg) {\n      // Non-RGB attributes from model + force disable inverse + override + force RGB color mode\n      $fg = (cell.fg & ~Attributes.RGB_MASK & ~FgFlags.INVERSE) | $fg | Attributes.CM_RGB;\n    }\n\n    // Handle case where inverse was specified by only one of bg override or fg override was set,\n    // resolving the other inverse color and setting the inverse flag if needed.\n    if (this.result.fg & FgFlags.INVERSE) {\n      if ($hasBg && !$hasFg) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this.result.bg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          $fg = (this.result.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | (($colors.background.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          $fg = (this.result.fg & ~(Attributes.RGB_MASK | FgFlags.INVERSE | Attributes.CM_MASK)) | this.result.bg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n        $hasFg = true;\n      }\n      if (!$hasBg && $hasFg) {\n        // Resolve bg color type (default color has a different meaning in fg vs bg)\n        if ((this.result.fg & Attributes.CM_MASK) === Attributes.CM_DEFAULT) {\n          $bg = (this.result.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | (($colors.foreground.rgba >> 8 & 0xFFFFFF) & Attributes.RGB_MASK) | Attributes.CM_RGB;\n        } else {\n          $bg = (this.result.bg & ~(Attributes.RGB_MASK | Attributes.CM_MASK)) | this.result.fg & (Attributes.RGB_MASK | Attributes.CM_MASK);\n        }\n        $hasBg = true;\n      }\n    }\n\n    // Release object\n    $colors = undefined;\n\n    // Use the override if it exists\n    this.result.bg = $hasBg ? $bg : this.result.bg;\n    this.result.fg = $hasFg ? $fg : this.result.fg;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextureAtlas } from 'browser/renderer/shared/TextureAtlas';\nimport { ITerminalOptions, Terminal } from 'xterm';\nimport { ITerminal, ReadonlyColorSet } from 'browser/Types';\nimport { ICharAtlasConfig, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { generateConfig, configEquals } from 'browser/renderer/shared/CharAtlasUtils';\n\ninterface ITextureAtlasCacheEntry {\n  atlas: ITextureAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: Terminal[];\n}\n\nconst charAtlasCache: ITextureAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireTextureAtlas(\n  terminal: Terminal,\n  options: Required<ITerminalOptions>,\n  colors: ReadonlyColorSet,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  deviceCharWidth: number,\n  deviceCharHeight: number,\n  devicePixelRatio: number\n): ITextureAtlas {\n  const newConfig = generateConfig(deviceCellWidth, deviceCellHeight, deviceCharWidth, deviceCharHeight, options, colors, devicePixelRatio);\n\n  // Check to see if the terminal already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(terminal);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the terminal from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the terminal to the cache entry and return\n      entry.ownedBy.push(terminal);\n      return entry.atlas;\n    }\n  }\n\n  const core: ITerminal = (terminal as any)._core;\n  const newEntry: ITextureAtlasCacheEntry = {\n    atlas: new TextureAtlas(document, newConfig, core.unicodeService),\n    config: newConfig,\n    ownedBy: [terminal]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n * @param terminal The terminal to remove.\n */\nexport function removeTerminalFromCache(terminal: Terminal): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(terminal);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only terminal\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from './Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { ITerminalOptions } from 'xterm';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { NULL_COLOR } from 'common/Color';\n\nexport function generateConfig(deviceCellWidth: number, deviceCellHeight: number, deviceCharWidth: number, deviceCharHeight: number, options: Required<ITerminalOptions>, colors: ReadonlyColorSet, devicePixelRatio: number): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: NULL_COLOR,\n    cursorAccent: NULL_COLOR,\n    selectionForeground: NULL_COLOR,\n    selectionBackgroundTransparent: NULL_COLOR,\n    selectionBackgroundOpaque: NULL_COLOR,\n    selectionInactiveBackgroundTransparent: NULL_COLOR,\n    selectionInactiveBackgroundOpaque: NULL_COLOR,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(),\n    contrastCache: colors.contrastCache\n  };\n  return {\n    customGlyphs: options.customGlyphs,\n    devicePixelRatio,\n    letterSpacing: options.letterSpacing,\n    lineHeight: options.lineHeight,\n    deviceCellWidth: deviceCellWidth,\n    deviceCellHeight: deviceCellHeight,\n    deviceCharWidth: deviceCharWidth,\n    deviceCharHeight: deviceCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    drawBoldTextInBrightColors: options.drawBoldTextInBrightColors,\n    minimumContrastRatio: options.minimumContrastRatio,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.customGlyphs === b.customGlyphs &&\n      a.lineHeight === b.lineHeight &&\n      a.letterSpacing === b.letterSpacing &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.deviceCharWidth === b.deviceCharWidth &&\n      a.deviceCharHeight === b.deviceCharHeight &&\n      a.drawBoldTextInBrightColors === b.drawBoldTextInBrightColors &&\n      a.minimumContrastRatio === b.minimumContrastRatio &&\n      a.colors.foreground.rgba === b.colors.foreground.rgba &&\n      a.colors.background.rgba === b.colors.background.rgba;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return (colorCode & Attributes.CM_MASK) === Attributes.CM_P16 || (colorCode & Attributes.CM_MASK) === Attributes.CM_P256;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 8, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 4, y: 0, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * @param xp The percentage of 15% of the x axis.\n * @param yp The percentage of 15% of the x axis on the y axis.\n */\ntype DrawFunctionDefinition = (xp: number, yp: number) => string;\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | DrawFunctionDefinition } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,1,.5` },\n  '╮': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 + (yp / .15 * .5)} C.5,${.5 + (yp / .15 * .5)},.5,.5,0,.5` },\n  '╯': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,0,.5` },\n  '╰': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - (yp / .15 * .5)} C.5,${.5 - (yp / .15 * .5)},.5,.5,1,.5` }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  leftPadding?: number;\n  rightPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * The line variants draw beyond the cell and get clipped to ensure the end of the line is not visible.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL, rightPadding: 2 },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M-1,-.5 L1,.5 L-1,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL, leftPadding: 2 },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M2,-.5 L0,.5 L2,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Right semi-circle solid\n  '\\u{E0B4}': { d: 'M0,0 L0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.FILL, rightPadding: 1 },\n  // Right semi-circle line\n  '\\u{E0B5}': { d: 'M0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0', type: VectorType.STROKE, rightPadding: 1 },\n  // Left semi-circle solid\n  '\\u{E0B6}': { d: 'M1,0 L1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.FILL, leftPadding: 1 },\n  // Left semi-circle line\n  '\\u{E0B7}': { d: 'M1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0', type: VectorType.STROKE, leftPadding: 1 },\n  // Lower left triangle\n  '\\u{E0B8}': { d: 'M-.5,-.5 L1.5,1.5 L-.5,1.5', type: VectorType.FILL },\n  // Backslash separator\n  '\\u{E0B9}': { d: 'M-.5,-.5 L1.5,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Lower right triangle\n  '\\u{E0BA}': { d: 'M1.5,-.5 L-.5,1.5 L1.5,1.5', type: VectorType.FILL },\n  // Upper left triangle\n  '\\u{E0BC}': { d: 'M1.5,-.5 L-.5,1.5 L-.5,-.5', type: VectorType.FILL },\n  // Forward slash separator\n  '\\u{E0BD}': { d: 'M1.5,-.5 L-.5,1.5', type: VectorType.STROKE, leftPadding: 1, rightPadding: 1 },\n  // Upper right triangle\n  '\\u{E0BE}': { d: 'M-.5,-.5 L1.5,1.5 L1.5,-.5', type: VectorType.FILL }\n};\n// Backslash separator redundant\npowerlineDefinitions['\\u{E0BB}'] = powerlineDefinitions['\\u{E0B9}'];\n// Forward slash separator redundant\npowerlineDefinitions['\\u{E0BF}'] = powerlineDefinitions['\\u{E0BD}'];\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  fontSize: number,\n  devicePixelRatio: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight, devicePixelRatio);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, deviceCellWidth, deviceCellHeight, fontSize, devicePixelRatio);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = deviceCellWidth / 8;\n    const yEighth = deviceCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  devicePixelRatio: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / deviceCellHeight * deviceCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, deviceCellWidth, deviceCellHeight, xOffset, yOffset, true, devicePixelRatio));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  deviceCellWidth: number,\n  deviceCellHeight: number,\n  fontSize: number,\n  devicePixelRatio: number\n): void {\n  // Clip the cell to make sure drawing doesn't occur beyond bounds\n  const clipRegion = new Path2D();\n  clipRegion.rect(xOffset, yOffset, deviceCellWidth, deviceCellHeight);\n  ctx.clip(clipRegion);\n\n  ctx.beginPath();\n  // Scale the stroke with DPR and font size\n  const cssLineWidth = fontSize / 12;\n  ctx.lineWidth = devicePixelRatio * cssLineWidth;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(\n      args,\n      deviceCellWidth,\n      deviceCellHeight,\n      xOffset,\n      yOffset,\n      false,\n      devicePixelRatio,\n      (charDefinition.leftPadding ?? 0) * (cssLineWidth / 2),\n      (charDefinition.rightPadding ?? 0) * (cssLineWidth / 2)\n    ));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, doClamp: boolean, devicePixelRatio: number, leftPadding: number = 0, rightPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (leftPadding * devicePixelRatio) - (rightPadding * devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (doClamp && result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (leftPadding * devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (doClamp && result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\n\nexport function observeDevicePixelDimensions(element: HTMLElement, parentWindow: Window & typeof globalThis, callback: (deviceWidth: number, deviceHeight: number) => void): IDisposable {\n  // Observe any resizes to the element and extract the actual pixel size of the element if the\n  // devicePixelContentBoxSize API is supported. This allows correcting rounding errors when\n  // converting between CSS pixels and device pixels which causes blurry rendering when device\n  // pixel ratio is not a round number.\n  let observer: ResizeObserver | undefined = new parentWindow.ResizeObserver((entries) => {\n    const entry = entries.find((entry) => entry.target === element);\n    if (!entry) {\n      return;\n    }\n\n    // Disconnect if devicePixelContentBoxSize isn't supported by the browser\n    if (!('devicePixelContentBoxSize' in entry)) {\n      observer?.disconnect();\n      observer = undefined;\n      return;\n    }\n\n    // Fire the callback, ignore events where the dimensions are 0x0 as the canvas is likely hidden\n    const width = entry.devicePixelContentBoxSize[0].inlineSize;\n    const height = entry.devicePixelContentBoxSize[0].blockSize;\n    if (width > 0 && height > 0) {\n      callback(width, height);\n    }\n  });\n  try {\n    observer.observe(element, { box: ['device-pixel-content-box'] } as any);\n  } catch {\n    observer.disconnect();\n    observer = undefined;\n  }\n  return toDisposable(() => observer?.disconnect());\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { Terminal } from 'xterm';\n\nclass SelectionRenderModel implements ISelectionRenderModel {\n  public hasSelection!: boolean;\n  public columnSelectMode!: boolean;\n  public viewportStartRow!: number;\n  public viewportEndRow!: number;\n  public viewportCappedStartRow!: number;\n  public viewportCappedEndRow!: number;\n  public startCol!: number;\n  public endCol!: number;\n  public selectionStart: [number, number] | undefined;\n  public selectionEnd: [number, number] | undefined;\n\n  constructor() {\n    this.clear();\n  }\n\n  public clear(): void {\n    this.hasSelection = false;\n    this.columnSelectMode = false;\n    this.viewportStartRow = 0;\n    this.viewportEndRow = 0;\n    this.viewportCappedStartRow = 0;\n    this.viewportCappedEndRow = 0;\n    this.startCol = 0;\n    this.endCol = 0;\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n  }\n\n  public update(terminal: Terminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this.selectionStart = start;\n    this.selectionEnd = end;\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this.clear();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - terminal.buffer.active.viewportY;\n    const viewportEndRow = end[1] - terminal.buffer.active.viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this.clear();\n      return;\n    }\n\n    this.hasSelection = true;\n    this.columnSelectMode = columnSelectMode;\n    this.viewportStartRow = viewportStartRow;\n    this.viewportEndRow = viewportEndRow;\n    this.viewportCappedStartRow = viewportCappedStartRow;\n    this.viewportCappedEndRow = viewportCappedEndRow;\n    this.startCol = start[0];\n    this.endCol = end[0];\n  }\n\n  public isCellSelected(terminal: Terminal, x: number, y: number): boolean {\n    if (!this.hasSelection) {\n      return false;\n    }\n    y -= terminal.buffer.active.viewportY;\n    if (this.columnSelectMode) {\n      if (this.startCol <= this.endCol) {\n        return x >= this.startCol && y >= this.viewportCappedStartRow &&\n          x < this.endCol && y <= this.viewportCappedEndRow;\n      }\n      return x < this.startCol && y >= this.viewportCappedStartRow &&\n        x >= this.endCol && y <= this.viewportCappedEndRow;\n    }\n    return (y > this.viewportStartRow && y < this.viewportEndRow) ||\n      (this.viewportStartRow === this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportEndRow && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol);\n  }\n}\n\nexport function createSelectionRenderModel(): ISelectionRenderModel {\n  return new SelectionRenderModel();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, TEXT_BASELINE } from 'browser/renderer/shared/Constants';\nimport { DEFAULT_COLOR, Attributes, DEFAULT_EXT, UnderlineStyle } from 'common/buffer/Constants';\nimport { IColor } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { color, NULL_COLOR, rgba } from 'common/Color';\nimport { tryDrawCustomChar } from 'browser/renderer/shared/CustomGlyphs';\nimport { excludeFromContrastRatioDemands, isPowerlineGlyph, isRestrictedPowerlineGlyph, throwIfFalsy } from 'browser/renderer/shared/RendererUtils';\nimport { IUnicodeService } from 'common/services/Services';\nimport { FourKeyMap } from 'common/MultiKeyMap';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IBoundingBox, ICharAtlasConfig, IRasterizedGlyph, IRequestRedrawEvent, ITextureAtlas } from 'browser/renderer/shared/Types';\nimport { EventEmitter } from 'common/EventEmitter';\n\n/**\n * A shared object which is used to draw nothing for a particular cell.\n */\nconst NULL_RASTERIZED_GLYPH: IRasterizedGlyph = {\n  texturePage: 0,\n  texturePosition: { x: 0, y: 0 },\n  texturePositionClipSpace: { x: 0, y: 0 },\n  offset: { x: 0, y: 0 },\n  size: { x: 0, y: 0 },\n  sizeClipSpace: { x: 0, y: 0 }\n};\n\nconst TMP_CANVAS_GLYPH_PADDING = 2;\n\nconst enum Constants {\n  /**\n   * The amount of pixel padding to allow in each row. Setting this to zero would make the atlas\n   * page pack as tightly as possible, but more pages would end up being created as a result.\n   */\n  ROW_PIXEL_THRESHOLD = 2,\n  /**\n   * The maximum texture size regardless of what the actual hardware maximum turns out to be. This\n   * is enforced to ensure uploading the texture still finishes in a reasonable amount of time. A\n   * 4096 squared image takes up 16MB of GPU memory.\n   */\n  FORCED_MAX_TEXTURE_SIZE = 4096\n}\n\ninterface ICharAtlasActiveRow {\n  x: number;\n  y: number;\n  height: number;\n}\n\n// Work variables to avoid garbage collection\nlet $glyph = undefined;\n\nexport class TextureAtlas implements ITextureAtlas {\n  private _didWarmUp: boolean = false;\n\n  private _cacheMap: FourKeyMap<number, number, number, number, IRasterizedGlyph> = new FourKeyMap();\n  private _cacheMapCombined: FourKeyMap<string, number, number, number, IRasterizedGlyph> = new FourKeyMap();\n\n  // The texture that the atlas is drawn to\n  private _pages: AtlasPage[] = [];\n  public get pages(): { canvas: HTMLCanvasElement, version: number }[] { return this._pages; }\n\n  // The set of atlas pages that can be written to\n  private _activePages: AtlasPage[] = [];\n\n  private _tmpCanvas: HTMLCanvasElement;\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  private _workBoundingBox: IBoundingBox = { top: 0, left: 0, bottom: 0, right: 0 };\n  private _workAttributeData: AttributeData = new AttributeData();\n\n  private _textureSize: number = 512;\n\n  public static maxAtlasPages: number | undefined;\n  public static maxTextureSize: number | undefined;\n\n  private readonly _onAddTextureAtlasCanvas = new EventEmitter<HTMLCanvasElement>();\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n  private readonly _onRemoveTextureAtlasCanvas = new EventEmitter<HTMLCanvasElement>();\n  public readonly onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event;\n\n  constructor(\n    private readonly _document: Document,\n    private readonly _config: ICharAtlasConfig,\n    private readonly _unicodeService: IUnicodeService\n  ) {\n    this._createNewPage();\n    this._tmpCanvas = createCanvas(\n      _document,\n      this._config.deviceCellWidth * 4 + TMP_CANVAS_GLYPH_PADDING * 2,\n      this._config.deviceCellHeight + TMP_CANVAS_GLYPH_PADDING * 2\n    );\n    this._tmpCtx = throwIfFalsy(this._tmpCanvas.getContext('2d', {\n      alpha: this._config.allowTransparency,\n      willReadFrequently: true\n    }));\n  }\n\n  public dispose(): void {\n    for (const page of this.pages) {\n      page.canvas.remove();\n    }\n    this._onAddTextureAtlasCanvas.dispose();\n  }\n\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  private _doWarmUp(): void {\n    // Pre-fill with ASCII 33-126, this is not urgent and done in idle callbacks\n    const queue = new IdleTaskQueue();\n    for (let i = 33; i < 126; i++) {\n      queue.enqueue(() => {\n        if (!this._cacheMap.get(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT)) {\n          const rasterizedGlyph = this._drawToCache(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT);\n          this._cacheMap.set(i, DEFAULT_COLOR, DEFAULT_COLOR, DEFAULT_EXT, rasterizedGlyph);\n        }\n      });\n    }\n  }\n\n  private _requestClearModel = false;\n  public beginFrame(): boolean {\n    return this._requestClearModel;\n  }\n\n  public clearTexture(): void {\n    if (this._pages[0].currentRow.x === 0 && this._pages[0].currentRow.y === 0) {\n      return;\n    }\n    for (const page of this._pages) {\n      page.clear();\n    }\n    this._cacheMap.clear();\n    this._cacheMapCombined.clear();\n    this._didWarmUp = false;\n  }\n\n  private _createNewPage(): AtlasPage {\n    // Try merge the set of the 4 most used pages of the largest size. This is is deferred to a\n    // microtask to ensure it does not interrupt textures that will be rendered in the current\n    // animation frame which would result in blank rendered areas. This is actually not that\n    // expensive relative to drawing the glyphs, so there is no need to wait for an idle callback.\n    if (TextureAtlas.maxAtlasPages && this._pages.length >= Math.max(4, TextureAtlas.maxAtlasPages / 2)) {\n      queueMicrotask(() => {\n        // Find the set of the largest 4 images, below the maximum size, with the highest\n        // percentages used\n        const pagesBySize = this._pages.filter(e => {\n          return e.canvas.width * 2 <= (TextureAtlas.maxTextureSize || Constants.FORCED_MAX_TEXTURE_SIZE);\n        }).sort((a, b) => {\n          if (b.canvas.width !== a.canvas.width) {\n            return b.canvas.width - a.canvas.width;\n          }\n          return b.percentageUsed - a.percentageUsed;\n        });\n        let sameSizeI = -1;\n        let size = 0;\n        for (let i = 0; i < pagesBySize.length; i++) {\n          if (pagesBySize[i].canvas.width !== size) {\n            sameSizeI = i;\n            size = pagesBySize[i].canvas.width;\n          } else if (i - sameSizeI === 3) {\n            break;\n          }\n        }\n\n        // Gather details of the merge\n        const mergingPages = pagesBySize.slice(sameSizeI, sameSizeI + 4);\n        const sortedMergingPagesIndexes = mergingPages.map(e => e.glyphs[0].texturePage).sort((a, b) => a > b ? 1 : -1);\n        const mergedPageIndex = sortedMergingPagesIndexes[0];\n\n        // Merge into the new page\n        const mergedPage = this._mergePages(mergingPages, mergedPageIndex);\n        mergedPage.version++;\n\n        // Replace the first _merging_ page with the _merged_ page\n        this._pages[mergedPageIndex] = mergedPage;\n\n        // Delete the other 3 pages, shifting glyph texture pages as needed\n        for (let i = sortedMergingPagesIndexes.length - 1; i >= 1; i--) {\n          this._deletePage(sortedMergingPagesIndexes[i]);\n        }\n\n        // Request the model to be cleared to refresh all texture pages.\n        this._requestClearModel = true;\n        this._onAddTextureAtlasCanvas.fire(mergedPage.canvas);\n      });\n    }\n\n    // All new atlas pages are created small as they are highly dynamic\n    const newPage = new AtlasPage(this._document, this._textureSize);\n    this._pages.push(newPage);\n    this._activePages.push(newPage);\n    this._onAddTextureAtlasCanvas.fire(newPage.canvas);\n    return newPage;\n  }\n\n  private _mergePages(mergingPages: AtlasPage[], mergedPageIndex: number): AtlasPage {\n    const mergedSize = mergingPages[0].canvas.width * 2;\n    const mergedPage = new AtlasPage(this._document, mergedSize, mergingPages);\n    for (const [i, p] of mergingPages.entries()) {\n      const xOffset = i * p.canvas.width % mergedSize;\n      const yOffset = Math.floor(i / 2) * p.canvas.height;\n      mergedPage.ctx.drawImage(p.canvas, xOffset, yOffset);\n      for (const g of p.glyphs) {\n        g.texturePage = mergedPageIndex;\n        g.sizeClipSpace.x = g.size.x / mergedSize;\n        g.sizeClipSpace.y = g.size.y / mergedSize;\n        g.texturePosition.x += xOffset;\n        g.texturePosition.y += yOffset;\n        g.texturePositionClipSpace.x = g.texturePosition.x / mergedSize;\n        g.texturePositionClipSpace.y = g.texturePosition.y / mergedSize;\n      }\n\n      this._onRemoveTextureAtlasCanvas.fire(p.canvas);\n\n      // Remove the merging page from active pages if it was there\n      const index = this._activePages.indexOf(p);\n      if (index !== -1) {\n        this._activePages.splice(index, 1);\n      }\n    }\n    return mergedPage;\n  }\n\n  private _deletePage(pageIndex: number): void {\n    this._pages.splice(pageIndex, 1);\n    for (let j = pageIndex; j < this._pages.length; j++) {\n      const adjustingPage = this._pages[j];\n      for (const g of adjustingPage.glyphs) {\n        g.texturePage--;\n      }\n      adjustingPage.version++;\n    }\n  }\n\n  public getRasterizedGlyphCombinedChar(chars: string, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    return this._getFromCacheMap(this._cacheMapCombined, chars, bg, fg, ext);\n  }\n\n  public getRasterizedGlyph(code: number, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    return this._getFromCacheMap(this._cacheMap, code, bg, fg, ext);\n  }\n\n  /**\n   * Gets the glyphs texture coords, drawing the texture if it's not already\n   */\n  private _getFromCacheMap(\n    cacheMap: FourKeyMap<string | number, number, number, number, IRasterizedGlyph>,\n    key: string | number,\n    bg: number,\n    fg: number,\n    ext: number\n  ): IRasterizedGlyph {\n    $glyph = cacheMap.get(key, bg, fg, ext);\n    if (!$glyph) {\n      $glyph = this._drawToCache(key, bg, fg, ext);\n      cacheMap.set(key, bg, fg, ext, $glyph);\n    }\n    return $glyph;\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx >= this._config.colors.ansi.length) {\n      throw new Error('No color found for idx ' + idx);\n    }\n    return this._config.colors.ansi[idx];\n  }\n\n  private _getBackgroundColor(bgColorMode: number, bgColor: number, inverse: boolean, dim: boolean): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return NULL_COLOR;\n    }\n\n    let result: IColor;\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        result = this._getColorFromAnsiIndex(bgColor);\n        break;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(bgColor);\n        // TODO: This object creation is slow\n        result = rgba.toColor(arr[0], arr[1], arr[2]);\n        break;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          result = this._config.colors.foreground;\n        } else {\n          result = this._config.colors.background;\n        }\n        break;\n    }\n\n    if (dim) {\n      // Blend here instead of using opacity because transparent colors mess with clipping the\n      // glyph's bounding box\n      result = color.blend(this._config.colors.background, color.multiplyOpacity(result, DIM_OPACITY));\n    }\n\n    return result;\n  }\n\n  private _getForegroundColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, dim: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor {\n    // TODO: Pass dim along to get min contrast?\n    const minimumContrastColor = this._getMinimumContrastColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, false, bold, excludeFromContrastRatioDemands);\n    if (minimumContrastColor) {\n      return minimumContrastColor;\n    }\n\n    let result: IColor;\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        result = this._getColorFromAnsiIndex(fgColor);\n        break;\n      case Attributes.CM_RGB:\n        const arr = AttributeData.toColorRGB(fgColor);\n        result = rgba.toColor(arr[0], arr[1], arr[2]);\n        break;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          result = this._config.colors.background;\n        } else {\n          result = this._config.colors.foreground;\n        }\n    }\n\n    // Always use an opaque color regardless of allowTransparency\n    if (this._config.allowTransparency) {\n      result = color.opaque(result);\n    }\n\n    // Apply dim to the color, opacity is fine to use for the foreground color\n    if (dim) {\n      result = color.multiplyOpacity(result, DIM_OPACITY);\n    }\n\n    return result;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._getColorFromAnsiIndex(bgColor).rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.foreground.rgba;\n        }\n        return this._config.colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._config.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._getColorFromAnsiIndex(fgColor).rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._config.colors.background.rgba;\n        }\n        return this._config.colors.foreground.rgba;\n    }\n  }\n\n  private _getMinimumContrastColor(bg: number, bgColorMode: number, bgColor: number, fg: number, fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean, excludeFromContrastRatioDemands: boolean): IColor | undefined {\n    if (this._config.minimumContrastRatio === 1 || excludeFromContrastRatioDemands) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._config.colors.contrastCache.getColor(bg, fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, inverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, inverse, bold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._config.minimumContrastRatio);\n\n    if (!result) {\n      this._config.colors.contrastCache.setColor(bg, fg, null);\n      return undefined;\n    }\n\n    const color = rgba.toColor(\n      (result >> 24) & 0xFF,\n      (result >> 16) & 0xFF,\n      (result >> 8) & 0xFF\n    );\n    this._config.colors.contrastCache.setColor(bg, fg, color);\n\n    return color;\n  }\n\n  private _drawToCache(codeOrChars: number | string, bg: number, fg: number, ext: number): IRasterizedGlyph {\n    const chars = typeof codeOrChars === 'number' ? String.fromCharCode(codeOrChars) : codeOrChars;\n\n    // Uncomment for debugging\n    // console.log(`draw to cache \"${chars}\"`, bg, fg, ext);\n\n    // Allow 1 cell width per character, with a minimum of 2 (CJK), plus some padding. This is used\n    // to draw the glyph to the canvas as well as to restrict the bounding box search to ensure\n    // giant ligatures (eg. =====>) don't impact overall performance.\n    const allowedWidth = this._config.deviceCellWidth * Math.max(chars.length, 2) + TMP_CANVAS_GLYPH_PADDING * 2;\n    if (this._tmpCanvas.width < allowedWidth) {\n      this._tmpCanvas.width = allowedWidth;\n    }\n    // Include line height when drawing glyphs\n    const allowedHeight = this._config.deviceCellHeight + TMP_CANVAS_GLYPH_PADDING * 4;\n    if (this._tmpCanvas.height < allowedHeight) {\n      this._tmpCanvas.height = allowedHeight;\n    }\n    this._tmpCtx.save();\n\n    this._workAttributeData.fg = fg;\n    this._workAttributeData.bg = bg;\n    this._workAttributeData.extended.ext = ext;\n\n    const invisible = !!this._workAttributeData.isInvisible();\n    if (invisible) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const bold = !!this._workAttributeData.isBold();\n    const inverse = !!this._workAttributeData.isInverse();\n    const dim = !!this._workAttributeData.isDim();\n    const italic = !!this._workAttributeData.isItalic();\n    const underline = !!this._workAttributeData.isUnderline();\n    const strikethrough = !!this._workAttributeData.isStrikethrough();\n    let fgColor = this._workAttributeData.getFgColor();\n    let fgColorMode = this._workAttributeData.getFgColorMode();\n    let bgColor = this._workAttributeData.getBgColor();\n    let bgColorMode = this._workAttributeData.getBgColorMode();\n    if (inverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(bgColorMode, bgColor, inverse, dim);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    const powerlineGlyph = chars.length === 1 && isPowerlineGlyph(chars.charCodeAt(0));\n    const restrictedPowerlineGlyph = chars.length === 1 && isRestrictedPowerlineGlyph(chars.charCodeAt(0));\n    const foregroundColor = this._getForegroundColor(bg, bgColorMode, bgColor, fg, fgColorMode, fgColor, inverse, dim, bold, excludeFromContrastRatioDemands(chars.charCodeAt(0)));\n    this._tmpCtx.fillStyle = foregroundColor.css;\n\n    // For powerline glyphs left/top padding is excluded (https://github.com/microsoft/vscode/issues/120129)\n    const padding = restrictedPowerlineGlyph ? 0 : TMP_CANVAS_GLYPH_PADDING * 2;\n\n    // Draw custom characters if applicable\n    let customGlyph = false;\n    if (this._config.customGlyphs !== false) {\n      customGlyph = tryDrawCustomChar(this._tmpCtx, chars, padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight, this._config.fontSize, this._config.devicePixelRatio);\n    }\n\n    // Whether to clear pixels based on a threshold difference between the glyph color and the\n    // background color. This should be disabled when the glyph contains multiple colors such as\n    // underline colors to prevent important colors could get cleared.\n    let enableClearThresholdCheck = !powerlineGlyph;\n\n    let chWidth: number;\n    if (typeof codeOrChars === 'number') {\n      chWidth = this._unicodeService.wcwidth(codeOrChars);\n    } else {\n      chWidth = this._unicodeService.getStringCellWidth(codeOrChars);\n    }\n\n    // Draw underline\n    if (underline) {\n      this._tmpCtx.save();\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15));\n      // When the line width is odd, draw at a 0.5 position\n      const yOffset = lineWidth % 2 === 1 ? 0.5 : 0;\n      this._tmpCtx.lineWidth = lineWidth;\n\n      // Underline color\n      if (this._workAttributeData.isUnderlineColorDefault()) {\n        this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      } else if (this._workAttributeData.isUnderlineColorRGB()) {\n        enableClearThresholdCheck = false;\n        this._tmpCtx.strokeStyle = `rgb(${AttributeData.toColorRGB(this._workAttributeData.getUnderlineColor()).join(',')})`;\n      } else {\n        enableClearThresholdCheck = false;\n        let fg = this._workAttributeData.getUnderlineColor();\n        if (this._config.drawBoldTextInBrightColors && this._workAttributeData.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._tmpCtx.strokeStyle = this._getColorFromAnsiIndex(fg).css;\n      }\n\n      // Underline style/stroke\n      this._tmpCtx.beginPath();\n      const xLeft = padding;\n      const yTop = Math.ceil(padding + this._config.deviceCharHeight) - yOffset;\n      const yMid = padding + this._config.deviceCharHeight + lineWidth - yOffset;\n      const yBot = Math.ceil(padding + this._config.deviceCharHeight + lineWidth * 2) - yOffset;\n\n      for (let i = 0; i < chWidth; i++) {\n        this._tmpCtx.save();\n        const xChLeft = xLeft + i * this._config.deviceCellWidth;\n        const xChRight = xLeft + (i + 1) * this._config.deviceCellWidth;\n        const xChMid = xChLeft + this._config.deviceCellWidth / 2;\n        switch (this._workAttributeData.extended.underlineStyle) {\n          case UnderlineStyle.DOUBLE:\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            this._tmpCtx.moveTo(xChLeft, yBot);\n            this._tmpCtx.lineTo(xChRight, yBot);\n            break;\n          case UnderlineStyle.CURLY:\n            // Choose the bezier top and bottom based on the device pixel ratio, the curly line is\n            // made taller when the line width is  as otherwise it's not very clear otherwise.\n            const yCurlyBot = lineWidth <= 1 ? yBot : Math.ceil(padding + this._config.deviceCharHeight - lineWidth / 2) - yOffset;\n            const yCurlyTop = lineWidth <= 1 ? yTop : Math.ceil(padding + this._config.deviceCharHeight + lineWidth / 2) - yOffset;\n            // Clip the left and right edges of the underline such that it can be drawn just outside\n            // the edge of the cell to ensure a continuous stroke when there are multiple underlined\n            // glyphs adjacent to one another.\n            const clipRegion = new Path2D();\n            clipRegion.rect(xChLeft, yTop, this._config.deviceCellWidth, yBot - yTop);\n            this._tmpCtx.clip(clipRegion);\n            // Start 1/2 cell before and end 1/2 cells after to ensure a smooth curve with other cells\n            this._tmpCtx.moveTo(xChLeft - this._config.deviceCellWidth / 2, yMid);\n            this._tmpCtx.bezierCurveTo(\n              xChLeft - this._config.deviceCellWidth / 2, yCurlyTop,\n              xChLeft, yCurlyTop,\n              xChLeft, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChLeft, yCurlyBot,\n              xChMid, yCurlyBot,\n              xChMid, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChMid, yCurlyTop,\n              xChRight, yCurlyTop,\n              xChRight, yMid\n            );\n            this._tmpCtx.bezierCurveTo(\n              xChRight, yCurlyBot,\n              xChRight + this._config.deviceCellWidth / 2, yCurlyBot,\n              xChRight + this._config.deviceCellWidth / 2, yMid\n            );\n            break;\n          case UnderlineStyle.DOTTED:\n            this._tmpCtx.setLineDash([this._config.devicePixelRatio * 2, this._config.devicePixelRatio]);\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n          case UnderlineStyle.DASHED:\n            this._tmpCtx.setLineDash([this._config.devicePixelRatio * 4, this._config.devicePixelRatio * 3]);\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n          case UnderlineStyle.SINGLE:\n          default:\n            this._tmpCtx.moveTo(xChLeft, yTop);\n            this._tmpCtx.lineTo(xChRight, yTop);\n            break;\n        }\n        this._tmpCtx.stroke();\n        this._tmpCtx.restore();\n      }\n      this._tmpCtx.restore();\n\n      // Draw stroke in the background color for non custom characters in order to give an outline\n      // between the text and the underline. Only do this when font size is >= 12 as the underline\n      // looks odd when the font size is too small\n      if (!customGlyph && this._config.fontSize >= 12) {\n        // This only works when transparency is disabled because it's not clear how to clear stroked\n        // text\n        if (!this._config.allowTransparency && chars !== ' ') {\n          // Measure the text, only draw the stroke if there is a descent beyond an alphabetic text\n          // baseline\n          this._tmpCtx.save();\n          this._tmpCtx.textBaseline = 'alphabetic';\n          const metrics = this._tmpCtx.measureText(chars);\n          this._tmpCtx.restore();\n          if ('actualBoundingBoxDescent' in metrics && metrics.actualBoundingBoxDescent > 0) {\n            // This translates to 1/2 the line width in either direction\n            this._tmpCtx.save();\n            // Clip the region to only draw in valid pixels near the underline to avoid a slight\n            // outline around the whole glyph, as well as additional pixels in the glyph at the top\n            // which would increase GPU memory demands\n            const clipRegion = new Path2D();\n            clipRegion.rect(xLeft, yTop - Math.ceil(lineWidth / 2), this._config.deviceCellWidth, yBot - yTop + Math.ceil(lineWidth / 2));\n            this._tmpCtx.clip(clipRegion);\n            this._tmpCtx.lineWidth = this._config.devicePixelRatio * 3;\n            this._tmpCtx.strokeStyle = backgroundColor.css;\n            this._tmpCtx.strokeText(chars, padding, padding + this._config.deviceCharHeight);\n            this._tmpCtx.restore();\n          }\n        }\n      }\n    }\n\n    // Draw the character\n    if (!customGlyph) {\n      this._tmpCtx.fillText(chars, padding, padding + this._config.deviceCharHeight);\n    }\n\n    // If this charcater is underscore and beyond the cell bounds, shift it up until it is visible\n    // even on the bottom row, try for a maximum of 5 pixels.\n    if (chars === '_' && !this._config.allowTransparency) {\n      let isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight), backgroundColor, foregroundColor, enableClearThresholdCheck);\n      if (isBeyondCellBounds) {\n        for (let offset = 1; offset <= 5; offset++) {\n          this._tmpCtx.save();\n          this._tmpCtx.fillStyle = backgroundColor.css;\n          this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);\n          this._tmpCtx.restore();\n          this._tmpCtx.fillText(chars, padding, padding + this._config.deviceCharHeight - offset);\n          isBeyondCellBounds = clearColor(this._tmpCtx.getImageData(padding, padding, this._config.deviceCellWidth, this._config.deviceCellHeight), backgroundColor, foregroundColor, enableClearThresholdCheck);\n          if (!isBeyondCellBounds) {\n            break;\n          }\n        }\n      }\n    }\n\n    // Draw strokethrough\n    if (strikethrough) {\n      const lineWidth = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 10));\n      const yOffset = this._tmpCtx.lineWidth % 2 === 1 ? 0.5 : 0; // When the width is odd, draw at 0.5 position\n      this._tmpCtx.lineWidth = lineWidth;\n      this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;\n      this._tmpCtx.beginPath();\n      this._tmpCtx.moveTo(padding, padding + Math.floor(this._config.deviceCharHeight / 2) - yOffset);\n      this._tmpCtx.lineTo(padding + this._config.deviceCharWidth * chWidth, padding + Math.floor(this._config.deviceCharHeight / 2) - yOffset);\n      this._tmpCtx.stroke();\n    }\n\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._tmpCanvas.width, this._tmpCanvas.height\n    );\n\n    // Clear out the background color and determine if the glyph is empty.\n    let isEmpty: boolean;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor, foregroundColor, enableClearThresholdCheck);\n    } else {\n      isEmpty = checkCompletelyTransparent(imageData);\n    }\n\n    // Handle empty glyphs\n    if (isEmpty) {\n      return NULL_RASTERIZED_GLYPH;\n    }\n\n    const rasterizedGlyph = this._findGlyphBoundingBox(imageData, this._workBoundingBox, allowedWidth, restrictedPowerlineGlyph, customGlyph, padding);\n\n    // Find the best atlas row to use\n    let activePage: AtlasPage;\n    let activeRow: ICharAtlasActiveRow;\n    while (true) {\n      // If there are no active pages (the last smallest 4 were merged), create a new one\n      if (this._activePages.length === 0) {\n        const newPage = this._createNewPage();\n        activePage = newPage;\n        activeRow = newPage.currentRow;\n        activeRow.height = rasterizedGlyph.size.y;\n        break;\n      }\n\n      // Get the best current row from all active pages\n      activePage = this._activePages[this._activePages.length - 1];\n      activeRow = activePage.currentRow;\n      for (const p of this._activePages) {\n        if (rasterizedGlyph.size.y <= p.currentRow.height) {\n          activePage = p;\n          activeRow = p.currentRow;\n        }\n      }\n\n      // TODO: This algorithm could be simplified:\n      // - Search for the page with ROW_PIXEL_THRESHOLD in mind\n      // - Keep track of current/fixed rows in a Map\n\n      // Replace the best current row with a fixed row if there is one at least as good as the\n      // current row. Search in reverse to prioritize filling in older pages.\n      for (let i = this._activePages.length - 1; i >= 0; i--) {\n        for (const row of this._activePages[i].fixedRows) {\n          if (row.height <= activeRow.height && rasterizedGlyph.size.y <= row.height) {\n            activePage = this._activePages[i];\n            activeRow = row;\n          }\n        }\n      }\n\n      // Create a new one if too much vertical space would be wasted or there is not enough room\n      // left in the page. The previous active row will become fixed in the process as it now has a\n      // fixed height\n      if (activeRow.y + rasterizedGlyph.size.y >= activePage.canvas.height || activeRow.height > rasterizedGlyph.size.y + Constants.ROW_PIXEL_THRESHOLD) {\n        // Create the new fixed height row, creating a new page if there isn't enough room on the\n        // current page\n        let wasNewPageCreated = false;\n        if (activePage.currentRow.y + activePage.currentRow.height + rasterizedGlyph.size.y >= activePage.canvas.height) {\n          // Find the first page with room to create the new row on\n          let candidatePage: AtlasPage | undefined;\n          for (const p of this._activePages) {\n            if (p.currentRow.y + p.currentRow.height + rasterizedGlyph.size.y < p.canvas.height) {\n              candidatePage = p;\n              break;\n            }\n          }\n          if (candidatePage) {\n            activePage = candidatePage;\n          } else {\n            // Create a new page if there is no room\n            const newPage = this._createNewPage();\n            activePage = newPage;\n            activeRow = newPage.currentRow;\n            activeRow.height = rasterizedGlyph.size.y;\n            wasNewPageCreated = true;\n          }\n        }\n        if (!wasNewPageCreated) {\n          // Fix the current row as the new row is being added below\n          if (activePage.currentRow.height > 0) {\n            activePage.fixedRows.push(activePage.currentRow);\n          }\n          activeRow = {\n            x: 0,\n            y: activePage.currentRow.y + activePage.currentRow.height,\n            height: rasterizedGlyph.size.y\n          };\n          activePage.fixedRows.push(activeRow);\n\n          // Create the new current row below the new fixed height row\n          activePage.currentRow = {\n            x: 0,\n            y: activeRow.y + activeRow.height,\n            height: 0\n          };\n        }\n        // TODO: Remove pages from _activePages when all rows are filled\n      }\n\n      // Exit the loop if there is enough room in the row\n      if (activeRow.x + rasterizedGlyph.size.x <= activePage.canvas.width) {\n        break;\n      }\n\n      // If there is not enough room in the current row, finish it and try again\n      if (activeRow === activePage.currentRow) {\n        activeRow.x = 0;\n        activeRow.y += activeRow.height;\n        activeRow.height = 0;\n      } else {\n        activePage.fixedRows.splice(activePage.fixedRows.indexOf(activeRow), 1);\n      }\n    }\n\n    // Record texture position\n    rasterizedGlyph.texturePage = this._pages.indexOf(activePage);\n    rasterizedGlyph.texturePosition.x = activeRow.x;\n    rasterizedGlyph.texturePosition.y = activeRow.y;\n    rasterizedGlyph.texturePositionClipSpace.x = activeRow.x / activePage.canvas.width;\n    rasterizedGlyph.texturePositionClipSpace.y = activeRow.y / activePage.canvas.height;\n\n    // Fix the clipspace position as pages may be of differing size\n    rasterizedGlyph.sizeClipSpace.x /= activePage.canvas.width;\n    rasterizedGlyph.sizeClipSpace.y /= activePage.canvas.height;\n\n    // Update atlas current row, for fixed rows the glyph height will never be larger than the row\n    // height\n    activeRow.height = Math.max(activeRow.height, rasterizedGlyph.size.y);\n    activeRow.x += rasterizedGlyph.size.x;\n\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    activePage.ctx.putImageData(\n      imageData,\n      rasterizedGlyph.texturePosition.x - this._workBoundingBox.left,\n      rasterizedGlyph.texturePosition.y - this._workBoundingBox.top,\n      this._workBoundingBox.left,\n      this._workBoundingBox.top,\n      rasterizedGlyph.size.x,\n      rasterizedGlyph.size.y\n    );\n    activePage.addGlyph(rasterizedGlyph);\n    activePage.version++;\n\n    return rasterizedGlyph;\n  }\n\n  /**\n   * Given an ImageData object, find the bounding box of the non-transparent\n   * portion of the texture and return an IRasterizedGlyph with these\n   * dimensions.\n   * @param imageData The image data to read.\n   * @param boundingBox An IBoundingBox to put the clipped bounding box values.\n   */\n  private _findGlyphBoundingBox(imageData: ImageData, boundingBox: IBoundingBox, allowedWidth: number, restrictedGlyph: boolean, customGlyph: boolean, padding: number): IRasterizedGlyph {\n    boundingBox.top = 0;\n    const height = restrictedGlyph ? this._config.deviceCellHeight : this._tmpCanvas.height;\n    const width = restrictedGlyph ? this._config.deviceCellWidth : allowedWidth;\n    let found = false;\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.top = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.left = 0;\n    found = false;\n    for (let x = 0; x < padding + width; x++) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.left = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.right = width;\n    found = false;\n    for (let x = padding + width - 1; x >= padding; x--) {\n      for (let y = 0; y < height; y++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.right = x;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    boundingBox.bottom = height;\n    found = false;\n    for (let y = height - 1; y >= 0; y--) {\n      for (let x = 0; x < width; x++) {\n        const alphaOffset = y * this._tmpCanvas.width * 4 + x * 4 + 3;\n        if (imageData.data[alphaOffset] !== 0) {\n          boundingBox.bottom = y;\n          found = true;\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    return {\n      texturePage: 0,\n      texturePosition: { x: 0, y: 0 },\n      texturePositionClipSpace: { x: 0, y: 0 },\n      size: {\n        x: boundingBox.right - boundingBox.left + 1,\n        y: boundingBox.bottom - boundingBox.top + 1\n      },\n      sizeClipSpace: {\n        x: (boundingBox.right - boundingBox.left + 1),\n        y: (boundingBox.bottom - boundingBox.top + 1)\n      },\n      offset: {\n        x: -boundingBox.left + padding + ((restrictedGlyph || customGlyph) ? Math.floor((this._config.deviceCellWidth - this._config.deviceCharWidth) / 2) : 0),\n        y: -boundingBox.top + padding + ((restrictedGlyph || customGlyph) ? this._config.lineHeight === 1 ? 0 : Math.round((this._config.deviceCellHeight - this._config.deviceCharHeight) / 2) : 0)\n      }\n    };\n  }\n}\n\nclass AtlasPage {\n  public readonly canvas: HTMLCanvasElement;\n  public readonly ctx: CanvasRenderingContext2D;\n\n  private _usedPixels: number = 0;\n  public get percentageUsed(): number { return this._usedPixels / (this.canvas.width * this.canvas.height); }\n\n  private readonly _glyphs: IRasterizedGlyph[] = [];\n  public get glyphs(): ReadonlyArray<IRasterizedGlyph> { return this._glyphs; }\n  public addGlyph(glyph: IRasterizedGlyph): void {\n    this._glyphs.push(glyph);\n    this._usedPixels += glyph.size.x * glyph.size.y;\n  }\n\n  /**\n   * Used to check whether the canvas of the atlas page has changed.\n   */\n  public version = 0;\n\n  // Texture atlas current positioning data. The texture packing strategy used is to fill from\n  // left-to-right and top-to-bottom. When the glyph being written is less than half of the current\n  // row's height, the following happens:\n  //\n  // - The current row becomes the fixed height row A\n  // - A new fixed height row B the exact size of the glyph is created below the current row\n  // - A new dynamic height current row is created below B\n  //\n  // This strategy does a good job preventing space being wasted for very short glyphs such as\n  // underscores, hyphens etc. or those with underlines rendered.\n  public currentRow: ICharAtlasActiveRow = {\n    x: 0,\n    y: 0,\n    height: 0\n  };\n  public readonly fixedRows: ICharAtlasActiveRow[] = [];\n\n  constructor(\n    document: Document,\n    size: number,\n    sourcePages?: AtlasPage[]\n  ) {\n    if (sourcePages) {\n      for (const p of sourcePages) {\n        this._glyphs.push(...p.glyphs);\n        this._usedPixels += p._usedPixels;\n      }\n    }\n    this.canvas = createCanvas(document, size, size);\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this.ctx = throwIfFalsy(this.canvas.getContext('2d', { alpha: true }));\n  }\n\n  public clear(): void {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.currentRow.x = 0;\n    this.currentRow.y = 0;\n    this.currentRow.height = 0;\n    this.fixedRows.length = 0;\n    this.version++;\n  }\n}\n\n/**\n * Makes a particular rgb color and colors that are nearly the same in an ImageData completely\n * transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, bg: IColor, fg: IColor, enableThresholdCheck: boolean): boolean {\n  // Get color channels\n  const r = bg.rgba >>> 24;\n  const g = bg.rgba >>> 16 & 0xFF;\n  const b = bg.rgba >>> 8 & 0xFF;\n  const fgR = fg.rgba >>> 24;\n  const fgG = fg.rgba >>> 16 & 0xFF;\n  const fgB = fg.rgba >>> 8 & 0xFF;\n\n  // Calculate a threshold that when below a color will be treated as transpart when the sum of\n  // channel value differs. This helps improve rendering when glyphs overlap with others. This\n  // threshold is calculated relative to the difference between the background and foreground to\n  // ensure important details of the glyph are always shown, even when the contrast ratio is low.\n  // The number 12 is largely arbitrary to ensure the pixels that escape the cell in the test case\n  // were covered (fg=#8ae234, bg=#c4a000).\n  const threshold = Math.floor((Math.abs(r - fgR) + Math.abs(g - fgG) + Math.abs(b - fgB)) / 12);\n\n  // Set alpha channel of relevent pixels to 0\n  let isEmpty = true;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    // Check exact match\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      // Check the threshold based difference\n      if (enableThresholdCheck &&\n          (Math.abs(imageData.data[offset] - r) +\n          Math.abs(imageData.data[offset + 1] - g) +\n          Math.abs(imageData.data[offset + 2] - b)) < threshold) {\n        imageData.data[offset + 3] = 0;\n      } else {\n        isEmpty = false;\n      }\n    }\n  }\n\n  return isEmpty;\n}\n\nfunction checkCompletelyTransparent(imageData: ImageData): boolean {\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset + 3] > 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction createCanvas(document: Document, width: number, height: number): HTMLCanvasElement {\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerService, ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { ITerminal } from 'browser/Types';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getSafariVersion, isSafari } from 'common/Platform';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { ITerminalAddon, Terminal } from 'xterm';\nimport { WebglRenderer } from './WebglRenderer';\n\nexport class WebglAddon extends Disposable implements ITerminalAddon {\n  private _terminal?: Terminal;\n  private _renderer?: WebglRenderer;\n\n  private readonly _onChangeTextureAtlas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onChangeTextureAtlas = this._onChangeTextureAtlas.event;\n  private readonly _onAddTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;\n  private readonly _onRemoveTextureAtlasCanvas = this.register(new EventEmitter<HTMLCanvasElement>());\n  public readonly onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event;\n  private readonly _onContextLoss = this.register(new EventEmitter<void>());\n  public readonly onContextLoss = this._onContextLoss.event;\n\n  constructor(\n    private _preserveDrawingBuffer?: boolean\n  ) {\n    if (isSafari && getSafariVersion() < 16) {\n      throw new Error('Webgl2 is only supported on Safari 16 and above');\n    }\n    super();\n  }\n\n  public activate(terminal: Terminal): void {\n    const core = (terminal as any)._core as ITerminal;\n    if (!terminal.element) {\n      this.register(core.onWillOpen(() => this.activate(terminal)));\n      return;\n    }\n\n    this._terminal = terminal;\n    const coreService: ICoreService = core.coreService;\n    const optionsService: IOptionsService = core.optionsService;\n\n    const unsafeCore = core as any;\n    const renderService: IRenderService = unsafeCore._renderService;\n    const characterJoinerService: ICharacterJoinerService = unsafeCore._characterJoinerService;\n    const charSizeService: ICharSizeService = unsafeCore._charSizeService;\n    const coreBrowserService: ICoreBrowserService = unsafeCore._coreBrowserService;\n    const decorationService: IDecorationService = unsafeCore._decorationService;\n    const themeService: IThemeService = unsafeCore._themeService;\n\n    this._renderer = this.register(new WebglRenderer(\n      terminal,\n      characterJoinerService,\n      charSizeService,\n      coreBrowserService,\n      coreService,\n      decorationService,\n      optionsService,\n      themeService,\n      this._preserveDrawingBuffer\n    ));\n    this.register(forwardEvent(this._renderer.onContextLoss, this._onContextLoss));\n    this.register(forwardEvent(this._renderer.onChangeTextureAtlas, this._onChangeTextureAtlas));\n    this.register(forwardEvent(this._renderer.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas));\n    this.register(forwardEvent(this._renderer.onRemoveTextureAtlasCanvas, this._onRemoveTextureAtlasCanvas));\n    renderService.setRenderer(this._renderer);\n\n    this.register(toDisposable(() => {\n      const renderService: IRenderService = (this._terminal as any)._core._renderService;\n      renderService.setRenderer((this._terminal as any)._core._createRenderer());\n      renderService.handleResize(terminal.cols, terminal.rows);\n    }));\n  }\n\n  public get textureAtlas(): HTMLCanvasElement | undefined {\n    return this._renderer?.textureAtlas;\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas();\n  }\n}\n"],"names":["COMPONENT_NAME","iconButtonStyles","root","height","icon","fontSize","iconButtonProps","iconName","defaultClearButtonProps","ariaLabel","getClassNames","classNamesFunction","y","useComponentRef","componentRef","inputElementRef","hasFocus","react","useImperativeHandle","focus","_a","current","SearchBoxBase","forwardRef","props","forwardedRef","className","defaultValue","disabled","underlined","styles","labelText","_b","placeholder","theme","_c","clearButtonProps","_d","disableAnimation","_e","showIcon","customOnClear","onClear","customOnBlur","onBlur","customOnEscape","onEscape","customOnSearch","onSearch","customOnKeyDown","onKeyDown","iconProps","role","onChange","onChanged","_f","useState","setHasFocus","prevChangeTimestamp","useRef","_g","useControllableValue","G","value","ev","newValue","timeStamp","uncastValue","setValue","String","rootElementRef","mergedRootRef","useMergedRefs","r","id","useId","M","customOnClearClick","onClick","classNames","hasInput","length","nativeProps","properties","pq","Gg","useCallback","defaultPrevented","stopPropagation","preventDefault","onClearClick","onInputChange","target","createElement","ref","onFocusCapture","onFocus","call","iconContainer","selectionStart","selectionEnd","Icon","J","tslib_es6","pi","field","onInput","which","KeyCodes","m","escape","enter","clearButton","IconButton","h","displayName","GlobalClassNames","SearchBox","styled","z","palette","fonts","semanticColors","effects","lib","Cn","placeholderStyles","color","inputPlaceholderText","opacity","inputIconAlt","neutralSecondary","inputIconAltHovered","neutralPrimary","inputBorderDisabled","neutralLighter","inputBackgroundHovered","inputBackgroundDisabled","medium","Fv","inputText","backgroundColor","inputBackground","display","flexDirection","flexWrap","alignItems","padding","borderRadius","roundedCorner2","border","inputBorder","selectors","qJ","borderColor","inputBorderHovered","inputIconHovered","width","pointerEvents","position","$Y","inputFocusBorderAlt","cursor","borderWidth","justifyContent","flexShrink","textAlign","inputIcon","inputIconDisabled","transition","D1","durationValue1","flexBasis","margin","rtl","zg","Sv","outline","fontWeight","fontFamily","flex","minWidth","overflow","textOverflow","paddingBottom","disabledText","undefined","scope","e","t","self","module","exports","Object","defineProperty","FitAddon","constructor","activate","terminal","this","_terminal","dispose","fit","dims","proposeDimensions","isNaN","cols","rows","core","_core","_renderService","clear","resize","element","parentElement","dimensions","actualCellWidth","actualCellHeight","scrollbarWidth","options","scrollback","viewport","scrollBarWidth","parentElementStyle","window","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","floor","__webpack_module_cache__","s","forwardEvent","EventEmitter","_listeners","_disposed","event","_event","listener","push","i","splice","fire","arg1","arg2","queue","from","to","SearchAddon","__webpack_require__","moduleId","cachedModule","__webpack_modules__","NON_WORD_CHARACTERS","_linesCacheTimeoutId","_onDidChangeResults","onDidChangeResults","_onDataDisposable","onWriteParsed","_updateMatches","_onResizeDisposable","onResize","_highlightTimeout","clearTimeout","_cachedSearchTerm","_lastSearchOptions","decorations","setTimeout","findPrevious","assign","incremental","noScroll","_resultIndex","_searchResults","size","resultIndex","resultCount","clearDecorations","retainCachedSearchTerm","_selectedDecoration","_resultDecorations","forEach","d","clearActiveDecoration","findNext","term","searchOptions","_highlightAllMatches","_fireResults","_findNextAndSelect","Map","resultDecorations","result","_find","get","row","col","set","resultDecoration","_createResultDecoration","decorationsForLine","marker","line","startRow","startCol","clearSelection","_initLinesCache","searchPosition","_findInLine","buffer","active","baseY","currentSelection","hasSelection","getSelectionPosition","start","end","x","_selectResult","_findPreviousAndSelect","found","isReverseSearch","_linesCache","_cursorMoveListener","onCursorMove","_destroyLinesCache","_resizeListener","_isWholeWord","searchIndex","includes","firstLine","getLine","isWrapped","cache","_translateBufferLineToStringWithWrap","stringLine","offsets","offset","_bufferColsToStringOffset","searchTerm","caseSensitive","toLowerCase","searchStringLine","regex","foundTerm","searchRegex","RegExp","exec","slice","lastIndex","lastIndexOf","indexOf","wholeWord","startRowOffset","endRowOffset","startColOffset","endColOffset","startColIndex","_stringLengthToBufferSize","cell","getCell","char","getChars","nextCell","getWidth","lineIndex","getCode","trimRight","strings","lineOffsets","nextLine","lineWrapsToNext","string","translateToString","lastCell","join","select","registerMarker","cursorY","registerDecoration","activeMatchBackground","layer","overviewRulerOptions","activeMatchColorOverviewRuler","onRender","_applyStyles","activeMatchBorder","onDispose","viewportY","scroll","scrollLines","isActiveResult","clientWidth","classList","contains","add","style","findResultDecoration","matchBackground","matchOverviewRuler","matchBorder","GlyphRenderer","o","n","a","BYTES_PER_CELL","INDICES_PER_CELL","Float32Array","BYTES_PER_ELEMENT","$glyph","$i","$leftCellPadding","$clippedPixels","Disposable","_gl","_dimensions","super","_activeBuffer","_vertices","count","attributes","attributesBuffers","gl","TextureAtlas","maxAtlasPages","min","throwIfFalsy","getParameter","MAX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","_program","createProgram","maxFragmentShaderTextureUnits","textureConditionals","register","toDisposable","deleteProgram","_projectionLocation","getUniformLocation","_resolutionLocation","_textureLocation","_vertexArrayObject","createVertexArray","bindVertexArray","unitQuadVertices","unitQuadVerticesBuffer","createBuffer","deleteBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","unitQuadElementIndices","Uint8Array","elementIndicesBuffer","ELEMENT_ARRAY_BUFFER","_attributesBuffer","vertexAttribDivisor","useProgram","textureUnits","Int32Array","uniform1iv","uniformMatrix4fv","PROJECTION_MATRIX","_atlasTextures","glTexture","GLTexture","createTexture","deleteTexture","texture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","handleResize","beginFrame","_atlas","updateCell","code","bg","fg","ext","chars","lastBg","_updateCell","array","NULL_CELL_CODE","getRasterizedGlyphCombinedChar","getRasterizedGlyph","device","left","top","canvas","texturePage","texturePositionClipSpace","pages","sizeClipSpace","fill","newCount","uniform2f","render","renderModel","activeBuffer","bufferLength","lineLengths","si","sub","subarray","STREAM_DRAW","version","_bindAtlasPageTexture","drawElementsInstanced","TRIANGLE_STRIP","setAtlas","atlas","generateMipmap","setDimensions","g","RectangleRenderer","BYTES_PER_RECTANGLE","$rgba","$isDefault","$x1","$y1","$r","$g","$b","$a","_themeService","_updateCachedColors","colors","onChangeColors","_updateViewportRectangle","DYNAMIC_DRAW","_bgFloat","_colorToFloat32Array","background","_addRectangleFloat","updateBackgrounds","model","vertices","currentStartX","currentBg","currentFg","currentInverse","modelIndex","inverse","rectangleCount","RENDER_MODEL_INDICIES_PER_CELL","cells","RENDER_MODEL_BG_OFFSET","RENDER_MODEL_FG_OFFSET","_updateRectangle","startX","endX","ansi","rgba","foreground","expandFloat32Array","DIM_OPACITY","_addRectangle","x1","y1","b","C","RenderModel","COMBINED_CHAR_BIT_MASK","RENDER_MODEL_EXT_OFFSET","Uint32Array","selection","createSelectionRenderModel","indexCount","JoinedCellData","WebglRenderer","l","c","_","u","v","f","_characterJoinerService","_charSizeService","_coreBrowserService","coreService","_decorationService","_optionsService","preserveDrawingBuffer","_model","_workCell","CellData","_onChangeTextureAtlas","onChangeTextureAtlas","_onAddTextureAtlasCanvas","onAddTextureAtlasCanvas","_onRemoveTextureAtlasCanvas","onRemoveTextureAtlasCanvas","_onRequestRedraw","onRequestRedraw","_onContextLoss","onContextLoss","_handleColorChange","_cellColorResolver","CellColorResolver","_renderLayers","LinkRenderLayer","screenElement","linkifier2","CursorRenderLayer","createRenderDimensions","_devicePixelRatio","dpr","_updateDimensions","onOptionChange","_handleOptionsChanged","_canvas","document","getContext","antialias","depth","contextAttributes","addDisposableDomListener","console","log","_contextRestorationTimeout","warn","removeTerminalFromCache","_initializeWebGLState","_requestRedrawViewport","observeDevicePixelDimensions","w","_setCanvasDevicePixelDimensions","appendChild","_rectangleRenderer","_glyphRenderer","_isAttached","body","removeChild","textureAtlas","_charAtlas","_refreshCharAtlas","_clearModel","handleDevicePixelRatioChange","css","handleCharSizeChanged","handleBlur","handleFocus","handleSelectionChanged","columnSelectMode","update","handleCursorMove","acquireTextureAtlas","rawOptions","_charAtlasDisposable","getDisposeArrayDisposable","warmUp","clearGlyphRenderer","clearTextureAtlas","clearTexture","reset","registerCharacterJoiner","handler","deregisterCharacterJoiner","joinerId","renderRows","handleGridChanged","_updateModel","joinedRanges","isJoined","lastCharX","range","j","ydisp","lines","getJoinedCharacters","loadCell","shift","resolve","NULL_CELL_CHAR","ceil","lineHeight","round","letterSpacing","p","AttributeData","firstCell","content","combinedData","_width","isCombined","setFromCharData","getAsCharData","createShader","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","error","getShaderInfoLog","deleteShader","vertexSource","fragmentSource","program","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","newLength","newArray","BaseRenderLayer","_container","zIndex","_alpha","_deviceCharWidth","_deviceCharHeight","_deviceCellWidth","_deviceCellHeight","_deviceCharLeft","_deviceCharTop","toString","_initCanvas","remove","_ctx","alpha","_clearAll","endRow","_setTransparency","oldCanvas","cloneNode","replaceChild","colorSet","dim","_fillCells","fillRect","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","_clearCells","_fillCharTrueColor","font","_getFont","textBaseline","TEXT_BASELINE","_clipCell","fillText","beginPath","rect","clip","isBold","isItalic","fontWeightBold","container","_onRequestRefreshRowsEvent","coreBrowserService","_coreService","optionsService","themeService","_cell","_state","isFocused","_cursorRenderers","bar","_renderBarCursor","bind","block","_renderBlockCursor","underline","_renderUnderlineCursor","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorInitialized","isCursorHidden","viewportRelativeCursorY","cursorX","save","cursorStyle","_renderBlurCursor","restore","isCursorVisible","cursorWidth","cursorAccent","strokeStyle","_renderCallback","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationFrame","cancelAnimationFrame","_animationTimeRestarted","Date","now","requestAnimationFrame","timeToStart","BLINK_INTERVAL","time","setInterval","onShowLinkUnderline","_handleShowLinkUnderline","onHideLinkUnderline","_handleHideLinkUnderline","_clearCurrentLink","middleRowCount","y2","x2","INVERTED_DEFAULT_COLOR","is256Color","node","addEventListener","disposed","removeEventListener","$colors","$fg","$bg","$hasFg","$hasBg","$isSelected","_selectionRenderModel","extended","forEachDecorationAtCell","backgroundColorRGB","foregroundColorRGB","isCellSelected","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","selectionForeground","charAtlasCache","deviceCellWidth","deviceCellHeight","deviceCharWidth","deviceCharHeight","devicePixelRatio","newConfig","generateConfig","entry","ownedByIndex","ownedBy","configEquals","config","newEntry","unicodeService","index","clonedColors","NULL_COLOR","selectionBackgroundTransparent","selectionInactiveBackgroundTransparent","contrastCache","customGlyphs","allowTransparency","drawBoldTextInBrightColors","minimumContrastRatio","colorCode","isFirefox","isLegacyEdge","tryDrawCustomChar","powerlineDefinitions","boxDrawingDefinitions","blockElementDefinitions","patternCharacterDefinitions","xp","yp","rightPadding","leftPadding","ctx","xOffset","yOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","patternDefinition","patternSet","cachedPatterns","pattern","tmpCanvas","tmpCtx","imageData","ImageData","startsWith","substring","split","map","parseFloat","data","putImageData","createPattern","boxDrawingDefinition","instructions","entries","instruction","Number","actualInstructions","svgToCanvasInstructionMap","args","translateArgs","stroke","closePath","powerlineDefinition","clipRegion","Path2D","cssLineWidth","clamp","bezierCurveTo","L","lineTo","moveTo","cellWidth","cellHeight","doClamp","parentWindow","callback","observer","ResizeObserver","find","disconnect","devicePixelContentBoxSize","inlineSize","blockSize","observe","isPowerlineGlyph","codepoint","excludeFromContrastRatioDemands","isRestrictedPowerlineGlyph","SelectionRenderModel","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","endCol","NULL_RASTERIZED_GLYPH","texturePosition","_document","_config","_unicodeService","_didWarmUp","_cacheMap","FourKeyMap","_cacheMapCombined","_pages","_activePages","_workBoundingBox","bottom","right","_workAttributeData","_textureSize","_requestClearModel","_createNewPage","_tmpCanvas","createCanvas","TMP_CANVAS_GLYPH_PADDING","_tmpCtx","willReadFrequently","page","_doWarmUp","IdleTaskQueue","enqueue","DEFAULT_COLOR","DEFAULT_EXT","rasterizedGlyph","_drawToCache","currentRow","queueMicrotask","pagesBySize","filter","sort","percentageUsed","sameSizeI","mergingPages","sortedMergingPagesIndexes","glyphs","mergedPageIndex","mergedPage","_mergePages","_deletePage","newPage","AtlasPage","mergedSize","drawImage","pageIndex","adjustingPage","_getFromCacheMap","cacheMap","key","_getColorFromAnsiIndex","idx","_getBackgroundColor","bgColorMode","bgColor","arr","toColorRGB","toColor","blend","multiplyOpacity","_getForegroundColor","fgColorMode","fgColor","bold","minimumContrastColor","_getMinimumContrastColor","opaque","_resolveBackgroundRgba","_resolveForegroundRgba","adjustedColor","getColor","bgRgba","fgRgba","ensureContrastRatio","setColor","codeOrChars","activePage","activeRow","fromCharCode","allowedWidth","allowedHeight","isInvisible","isInverse","isDim","italic","isUnderline","strikethrough","isStrikethrough","getFgColor","getFgColorMode","getBgColor","getBgColorMode","temp","temp2","globalCompositeOperation","fontStyle","powerlineGlyph","charCodeAt","restrictedPowerlineGlyph","foregroundColor","customGlyph","chWidth","enableClearThresholdCheck","wcwidth","getStringCellWidth","isUnderlineColorDefault","isUnderlineColorRGB","getUnderlineColor","yTop","yMid","yBot","xChLeft","xLeft","xChRight","xChMid","underlineStyle","yCurlyBot","yCurlyTop","setLineDash","metrics","measureText","actualBoundingBoxDescent","strokeText","isBeyondCellBounds","clearColor","getImageData","_findGlyphBoundingBox","fixedRows","wasNewPageCreated","candidatePage","addGlyph","boundingBox","restrictedGlyph","alphaOffset","sourcePages","_usedPixels","_glyphs","glyph","enableThresholdCheck","fgR","fgG","fgB","threshold","abs","isEmpty","channels","rgb","contrastRatio","toPaddedHex","l1","l2","toCss","toRgba","toChannels","bgR","bgG","bgB","isOpaque","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","createLinearGradient","match","repeat","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","disposeArray","disposables","_disposables","_isDisposed","unregister","TwoKeyMap","_data","first","second","third","fourth","isChromeOS","isLinux","isWindows","isIphone","isIpad","isMac","getSafariVersion","isSafari","navigator","userAgent","platform","test","majorVersion","TaskQueue","_tasks","_i","task","_start","flush","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","identifier","duration","requestIdleCallback","cancelIdleCallback","DebouncedIdleTask","_queue","ExtendedAttrs","static","clone","newObj","hasExtendedAttrs","isBlink","isProtected","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","updateExtended","underlineColor","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","urlId","_ext","_urlId","arguments","obj","stringFromCodePoint","CHAR_DATA_ATTR_INDEX","combined","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","WHITESPACE_CELL_CODE","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CHAR","NULL_CELL_WIDTH","CHAR_DATA_CODE_INDEX","DEFAULT_ATTR","Utf8ToUtf32","StringToUtf32","utf32ToString","codePoint","_interim","decode","input","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","cp","tmp","pos","missing","fourStop","WebglAddon","_preserveDrawingBuffer","onWillOpen","renderService","unsafeCore","characterJoinerService","charSizeService","decorationService","_renderer","setRenderer","_createRenderer"],"sourceRoot":""}